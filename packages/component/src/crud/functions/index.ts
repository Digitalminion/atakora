/**
 * CRUD Function Code Generators
 *
 * @remarks
 * This file is auto-generated by scripts/build-templates.js
 * Each function reads a pre-compiled, minified JavaScript bundle and
 * replaces ATAKORA_* tokens with actual values.
 *
 * The bundles are self-contained with all dependencies included.
 * No npm packages need to be installed at runtime.
 *
 * @packageDocumentation
 */

import * as crud_createCode from './crud-create.js';
import * as crud_readCode from './crud-read.js';
import * as crud_updateCode from './crud-update.js';
import * as crud_deleteCode from './crud-delete.js';
import * as crud_listCode from './crud-list.js';

/**
 * Configuration for crud-create function
 */
export interface GeneratecreateConfig {
  readonly database_name: string;
  readonly container_name: string;
  readonly schema_json: string;
  readonly entity_name_lower: string;
  readonly partition_key: string;
  readonly entity_name: string;
  readonly schemaJson: string;
}

/**
 * Configuration for crud-read function
 */
export interface GeneratereadConfig {
  readonly database_name: string;
  readonly container_name: string;
  readonly entity_name_lower: string;
  readonly entity_name: string;

}

/**
 * Configuration for crud-update function
 */
export interface GenerateupdateConfig {
  readonly database_name: string;
  readonly container_name: string;
  readonly schema_json: string;
  readonly entity_name_lower: string;
  readonly entity_name: string;
  readonly partition_key: string;
  readonly schemaJson: string;
}

/**
 * Configuration for crud-delete function
 */
export interface GeneratedeleteConfig {
  readonly database_name: string;
  readonly container_name: string;
  readonly entity_name_lower: string;
  readonly entity_name: string;

}

/**
 * Configuration for crud-list function
 */
export interface GeneratelistConfig {
  readonly database_name: string;
  readonly container_name: string;
  readonly entity_name_plural_lower: string;
  readonly entity_name_plural: string;

}

/**
 * Generates the crud-create function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
export function generatecreate(config: GeneratecreateConfig): string {
  // Read the minified bundle as a string
  let code = crud_createCode.default;

  // Replace all ATAKORA_* tokens with actual values
  code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
  code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
  code = code.replace(/ATAKORA_SCHEMA_JSON/g, config.schema_json);
  code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
  code = code.replace(/ATAKORA_PARTITION_KEY/g, config.partition_key);
  code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);

  return code;
}

/**
 * Generates the crud-read function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
export function generateread(config: GeneratereadConfig): string {
  // Read the minified bundle as a string
  let code = crud_readCode.default;

  // Replace all ATAKORA_* tokens with actual values
  code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
  code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
  code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
  code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);

  return code;
}

/**
 * Generates the crud-update function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
export function generateupdate(config: GenerateupdateConfig): string {
  // Read the minified bundle as a string
  let code = crud_updateCode.default;

  // Replace all ATAKORA_* tokens with actual values
  code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
  code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
  code = code.replace(/ATAKORA_SCHEMA_JSON/g, config.schema_json);
  code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
  code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);
  code = code.replace(/ATAKORA_PARTITION_KEY/g, config.partition_key);

  return code;
}

/**
 * Generates the crud-delete function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
export function generatedelete(config: GeneratedeleteConfig): string {
  // Read the minified bundle as a string
  let code = crud_deleteCode.default;

  // Replace all ATAKORA_* tokens with actual values
  code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
  code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
  code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
  code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);

  return code;
}

/**
 * Generates the crud-list function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
export function generatelist(config: GeneratelistConfig): string {
  // Read the minified bundle as a string
  let code = crud_listCode.default;

  // Replace all ATAKORA_* tokens with actual values
  code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
  code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
  code = code.replace(/ATAKORA_ENTITY_NAME_PLURAL_LOWER/g, config.entity_name_plural_lower);
  code = code.replace(/ATAKORA_ENTITY_NAME_PLURAL/g, config.entity_name_plural);

  return code;
}
