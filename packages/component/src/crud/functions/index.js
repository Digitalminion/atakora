"use strict";
/**
 * CRUD Function Code Generators
 *
 * @remarks
 * This file is auto-generated by scripts/build-templates.js
 * Each function reads a pre-compiled, minified JavaScript bundle and
 * replaces ATAKORA_* tokens with actual values.
 *
 * The bundles are self-contained with all dependencies included.
 * No npm packages need to be installed at runtime.
 *
 * @packageDocumentation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.generatecreate = generatecreate;
exports.generateread = generateread;
exports.generateupdate = generateupdate;
exports.generatedelete = generatedelete;
exports.generatelist = generatelist;
var crud_createCode = require("./crud-create.js");
var crud_readCode = require("./crud-read.js");
var crud_updateCode = require("./crud-update.js");
var crud_deleteCode = require("./crud-delete.js");
var crud_listCode = require("./crud-list.js");
/**
 * Generates the crud-create function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
function generatecreate(config) {
    // Read the minified bundle as a string
    var code = crud_createCode.default;
    // Replace all ATAKORA_* tokens with actual values
    code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
    code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
    code = code.replace(/ATAKORA_SCHEMA_JSON/g, config.schema_json);
    code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
    code = code.replace(/ATAKORA_PARTITION_KEY/g, config.partition_key);
    code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);
    return code;
}
/**
 * Generates the crud-read function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
function generateread(config) {
    // Read the minified bundle as a string
    var code = crud_readCode.default;
    // Replace all ATAKORA_* tokens with actual values
    code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
    code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
    code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
    code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);
    return code;
}
/**
 * Generates the crud-update function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
function generateupdate(config) {
    // Read the minified bundle as a string
    var code = crud_updateCode.default;
    // Replace all ATAKORA_* tokens with actual values
    code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
    code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
    code = code.replace(/ATAKORA_SCHEMA_JSON/g, config.schema_json);
    code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
    code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);
    code = code.replace(/ATAKORA_PARTITION_KEY/g, config.partition_key);
    return code;
}
/**
 * Generates the crud-delete function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
function generatedelete(config) {
    // Read the minified bundle as a string
    var code = crud_deleteCode.default;
    // Replace all ATAKORA_* tokens with actual values
    code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
    code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
    code = code.replace(/ATAKORA_ENTITY_NAME_LOWER/g, config.entity_name_lower);
    code = code.replace(/ATAKORA_ENTITY_NAME/g, config.entity_name);
    return code;
}
/**
 * Generates the crud-list function code
 *
 * @param config - Configuration with entity-specific values
 * @returns Minified, self-contained JavaScript code ready for deployment
 */
function generatelist(config) {
    // Read the minified bundle as a string
    var code = crud_listCode.default;
    // Replace all ATAKORA_* tokens with actual values
    code = code.replace(/ATAKORA_DATABASE_NAME/g, config.database_name);
    code = code.replace(/ATAKORA_CONTAINER_NAME/g, config.container_name);
    code = code.replace(/ATAKORA_ENTITY_NAME_PLURAL_LOWER/g, config.entity_name_plural_lower);
    code = code.replace(/ATAKORA_ENTITY_NAME_PLURAL/g, config.entity_name_plural);
    return code;
}
