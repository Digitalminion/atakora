/**
 * Type definitions for Microsoft.AAD (Azure Active Directory Domain Services) resources.
 *
 * **API Version**: 2025-06-01
 * **Generated**: 2025-10-13
 * **Source**: Azure ARM Schema Microsoft.AAD
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

import {
  ConfigDiagnosticsStatus,
  DomainSecuritySetting,
  SyncScope,
} from '../../schema/microsoft/aad';

/**
 * Health monitoring configuration.
 */
export interface HealthMonitor {
  /**
   * Health monitor details.
   */
  readonly details?: string;

  /**
   * Health monitor ID.
   */
  readonly id?: string;

  /**
   * Health monitor name.
   */
  readonly name?: string;
}

/**
 * Health alert details.
 */
export interface HealthAlert {
  /**
   * Health alert ID.
   */
  readonly id?: string;

  /**
   * Health alert issue.
   */
  readonly issue?: string;

  /**
   * Timestamp when the alert was raised.
   */
  readonly raised?: string;

  /**
   * Timestamp when the alert was resolved.
   */
  readonly resolutionUri?: string;

  /**
   * Health alert severity.
   */
  readonly severity?: string;
}

/**
 * Configuration diagnostics validation details.
 */
export interface ConfigDiagnosticsValidationResult {
  /**
   * List of validation issues.
   */
  readonly issues?: string[];

  /**
   * Name of the validation.
   */
  readonly name?: string;

  /**
   * Validation result status.
   */
  readonly status?: ConfigDiagnosticsStatus;

  /**
   * Validation result details.
   */
  readonly validationDetails?: string;
}

/**
 * Configuration diagnostics.
 */
export interface ConfigDiagnostics {
  /**
   * Last time configuration diagnostics were executed.
   */
  readonly lastExecuted?: string;

  /**
   * List of validation results.
   */
  readonly validatorResults?: ConfigDiagnosticsValidationResult[];
}

/**
 * Domain security settings.
 *
 * @remarks
 * Configure security settings for the managed domain.
 */
export interface DomainSecuritySettings {
  /**
   * Channel binding token enforcement.
   *
   * @remarks
   * Enforces channel binding tokens (CBT) in LDAP authentication.
   */
  readonly channelBinding?: DomainSecuritySetting;

  /**
   * Kerberos Armoring (FAST) enforcement.
   *
   * @remarks
   * Enables Kerberos Flexible Authentication Secure Tunneling.
   */
  readonly kerberosArmoring?: DomainSecuritySetting;

  /**
   * Kerberos RC4 encryption enforcement.
   *
   * @remarks
   * Controls whether Kerberos RC4 encryption is allowed.
   */
  readonly kerberosRc4Encryption?: DomainSecuritySetting;

  /**
   * LDAP signing enforcement.
   *
   * @remarks
   * Requires LDAP bind requests to be signed.
   */
  readonly ldapSigning?: DomainSecuritySetting;

  /**
   * NTLM v1 enforcement.
   *
   * @remarks
   * Controls whether NTLM v1 authentication is allowed.
   */
  readonly ntlmV1?: DomainSecuritySetting;

  /**
   * Sync Kerberos passwords setting.
   */
  readonly syncKerberosPasswords?: DomainSecuritySetting;

  /**
   * Sync NTLM passwords setting.
   */
  readonly syncNtlmPasswords?: DomainSecuritySetting;

  /**
   * Sync on-premises passwords setting.
   */
  readonly syncOnPremPasswords?: DomainSecuritySetting;

  /**
   * TLS v1 enforcement.
   *
   * @remarks
   * Controls whether TLS v1 is allowed.
   */
  readonly tlsV1?: DomainSecuritySetting;
}

/**
 * Notification settings for the domain.
 */
export interface NotificationSettings {
  /**
   * List of additional email addresses to receive notifications.
   */
  readonly additionalRecipients?: string[];

  /**
   * Whether to notify domain controller admins.
   */
  readonly notifyDcAdmins?: 'Enabled' | 'Disabled';

  /**
   * Whether to notify global admins.
   */
  readonly notifyGlobalAdmins?: 'Enabled' | 'Disabled';
}

/**
 * LDAPS (Secure LDAP) settings.
 */
export interface LdapsSettings {
  /**
   * SSL certificate thumbprint.
   */
  readonly certificateThumbprint?: string;

  /**
   * SSL certificate expiry date.
   */
  readonly certificateNotAfter?: string;

  /**
   * External access to LDAPS.
   */
  readonly externalAccess?: 'Enabled' | 'Disabled';

  /**
   * LDAPS status.
   */
  readonly ldaps?: 'Enabled' | 'Disabled';

  /**
   * PFX certificate.
   */
  readonly pfxCertificate?: string;

  /**
   * PFX certificate password.
   */
  readonly pfxCertificatePassword?: string;

  /**
   * Public certificate data.
   */
  readonly publicCertificate?: string;
}

/**
 * Resource forest settings.
 */
export interface ResourceForestSettings {
  /**
   * Resource forest configuration.
   */
  readonly resourceForest?: string;

  /**
   * List of settings for resource forest.
   */
  readonly settings?: ForestTrust[];
}

/**
 * Forest trust configuration.
 */
export interface ForestTrust {
  /**
   * Friendly name for the forest trust.
   */
  readonly friendlyName?: string;

  /**
   * Remote DNS IPs for the forest.
   */
  readonly remoteDnsIps?: string[];

  /**
   * Trust direction.
   */
  readonly trustDirection?: string;

  /**
   * Trusted domain FQDN.
   */
  readonly trustedDomainFqdn?: string;

  /**
   * Trust password.
   */
  readonly trustPassword?: string;
}

/**
 * Replica set subnet configuration.
 */
export interface ReplicaSet {
  /**
   * Azure region location for this replica set.
   */
  readonly location?: string;

  /**
   * Replica set ID.
   */
  readonly replicaSetId?: string;

  /**
   * Subnet ID for the replica set.
   *
   * @remarks
   * Full resource ID of a virtual network subnet.
   * Example: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Network/virtualNetworks/{vnet}/subnets/{subnet}'
   */
  readonly subnetId?: string;

  /**
   * Domain controller IP addresses.
   */
  readonly domainControllerIpAddress?: string[];

  /**
   * External access IP address.
   */
  readonly externalAccessIpAddress?: string;

  /**
   * Service status.
   */
  readonly serviceStatus?: string;

  /**
   * Virtual network site ID.
   */
  readonly vnetSiteId?: string;

  /**
   * Health alerts for this replica set.
   */
  readonly healthAlerts?: HealthAlert[];

  /**
   * Health monitors for this replica set.
   */
  readonly healthMonitors?: HealthMonitor[];

  /**
   * Health last evaluated timestamp.
   */
  readonly healthLastEvaluated?: string;
}

/**
 * Organizational Unit (OU) container properties.
 */
export interface OuContainerProps {
  /**
   * List of accounts with admin privileges.
   */
  readonly accounts?: ContainerAccount[];

  /**
   * Container ID.
   */
  readonly containerId?: string;

  /**
   * Distinguished name for the container.
   */
  readonly distinguishedName?: string;

  /**
   * Provisioning state.
   */
  readonly provisioningState?: string;

  /**
   * Service status.
   */
  readonly serviceStatus?: string;

  /**
   * Tenant ID.
   */
  readonly tenantId?: string;
}

/**
 * Container account details.
 */
export interface ContainerAccount {
  /**
   * Account name.
   */
  readonly accountName?: string;

  /**
   * Account password.
   */
  readonly password?: string;

  /**
   * Service principal ID.
   */
  readonly spn?: string;
}

/**
 * Domain service properties.
 */
export interface DomainServiceProps {
  /**
   * Configuration diagnostics.
   */
  readonly configDiagnostics?: ConfigDiagnostics;

  /**
   * Domain configuration type.
   *
   * @remarks
   * Specifies the domain configuration.
   * - FullySynced: Standard domain with full sync from Azure AD
   * - ResourceTrusting: Resource forest for hybrid scenarios
   */
  readonly domainConfigurationType?: 'FullySynced' | 'ResourceTrusting';

  /**
   * Domain name.
   *
   * @remarks
   * Fully qualified domain name for the managed domain.
   * Example: 'contoso.com'
   */
  readonly domainName?: string;

  /**
   * Domain security settings.
   */
  readonly domainSecuritySettings?: DomainSecuritySettings;

  /**
   * Filtered sync setting.
   *
   * @remarks
   * Enables or disables filtered sync from Azure AD.
   */
  readonly filteredSync?: 'Enabled' | 'Disabled';

  /**
   * LDAPS settings for secure LDAP access.
   */
  readonly ldapsSettings?: LdapsSettings;

  /**
   * Migration properties.
   */
  readonly migrationProperties?: MigrationProperties;

  /**
   * Notification settings.
   */
  readonly notificationSettings?: NotificationSettings;

  /**
   * Provisioning state.
   */
  readonly provisioningState?: string;

  /**
   * List of replica sets for this domain.
   */
  readonly replicaSets?: ReplicaSet[];

  /**
   * Resource forest settings for hybrid scenarios.
   */
  readonly resourceForestSettings?: ResourceForestSettings;

  /**
   * Service SKU.
   *
   * @remarks
   * Available SKUs:
   * - Standard: Basic features
   * - Enterprise: Advanced features
   * - Premium: Full feature set with enhanced capabilities
   */
  readonly sku?: 'Standard' | 'Enterprise' | 'Premium';

  /**
   * Sync owner.
   */
  readonly syncOwner?: string;

  /**
   * Sync scope.
   *
   * @remarks
   * Determines which users are synced to the managed domain.
   */
  readonly syncScope?: SyncScope;

  /**
   * Tenant ID.
   */
  readonly tenantId?: string;

  /**
   * Version number.
   */
  readonly version?: number;
}

/**
 * Migration properties.
 */
export interface MigrationProperties {
  /**
   * Migration progress.
   */
  readonly migrationProgress?: MigrationProgress;

  /**
   * Old subnet ID being migrated from.
   */
  readonly oldSubnetId?: string;

  /**
   * Old virtual network site ID.
   */
  readonly oldVnetSiteId?: string;
}

/**
 * Migration progress details.
 */
export interface MigrationProgress {
  /**
   * Completion percentage.
   */
  readonly completionPercentage?: number;

  /**
   * Migration progress message.
   */
  readonly progressMessage?: string;
}

/**
 * Properties for Microsoft.AAD/domainServices (L1 construct).
 *
 * @remarks
 * Microsoft.AAD/domainServices - Azure Active Directory Domain Services
 *
 * **ARM Resource Type**: `Microsoft.AAD/domainServices`
 * **API Version**: `2025-06-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 *
 * **Domain Name Constraints**:
 * - Pattern: ^(?=.{3,255}$)([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)(\.([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?))*$
 * - Length: 3-255 characters
 * - Must be a valid DNS name
 *
 * @example
 * ```typescript
 * const domainProps: ArmDomainServicesProps = {
 *   name: 'contoso.com',
 *   location: 'westus2',
 *   properties: {
 *     domainName: 'contoso.com',
 *     sku: 'Enterprise',
 *     syncScope: SyncScope.ALL,
 *     replicaSets: [{
 *       location: 'westus2',
 *       subnetId: '/subscriptions/{sub}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetworks/{vnet}/subnets/{subnet}'
 *     }]
 *   }
 * };
 * ```
 */
export interface ArmDomainServicesProps {
  /**
   * Resource name.
   *
   * @remarks
   * The domain name for the managed domain service.
   *
   * **Constraints**:
   * - Pattern: Must be a valid DNS name
   * - Length: 3-255 characters
   * - Format: Alphanumeric with hyphens, labels separated by dots
   *
   * @example 'contoso.com'
   */
  readonly name: string;

  /**
   * Azure region location.
   *
   * @remarks
   * The Azure region where the domain service will be deployed.
   *
   * @example 'westus2'
   */
  readonly location?: string;

  /**
   * Domain service properties.
   */
  readonly properties: DomainServiceProps;

  /**
   * Resource tags.
   *
   * @remarks
   * Key-value pairs for organizing and categorizing resources.
   *
   * @example
   * ```typescript
   * {
   *   environment: 'production',
   *   costCenter: 'IT-001'
   * }
   * ```
   */
  readonly tags?: Record<string, string>;

  /**
   * ETag for optimistic concurrency.
   */
  readonly etag?: string;
}

/**
 * Properties for Microsoft.AAD/domainServices/ouContainer (L1 construct).
 *
 * @remarks
 * Microsoft.AAD/domainServices/ouContainer - Organizational Unit Container
 *
 * **ARM Resource Type**: `Microsoft.AAD/domainServices/ouContainer`
 * **API Version**: `2025-06-01`
 *
 * Represents an Organizational Unit container within a domain service.
 *
 * @example
 * ```typescript
 * const ouContainerProps: ArmDomainServicesOuContainerProps = {
 *   name: 'AADDC Computers',
 *   properties: {
 *     accounts: [{
 *       accountName: 'admin',
 *       spn: 'HTTP/webapp.contoso.com'
 *     }]
 *   }
 * };
 * ```
 */
export interface ArmDomainServicesOuContainerProps {
  /**
   * OU container name.
   *
   * @remarks
   * The name of the organizational unit container.
   *
   * @example 'AADDC Computers'
   */
  readonly name: string;

  /**
   * Azure region location.
   */
  readonly location?: string;

  /**
   * OU container properties.
   */
  readonly properties?: OuContainerProps;

  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string>;

  /**
   * ETag for optimistic concurrency.
   */
  readonly etag?: string;
}
