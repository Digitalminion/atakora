/**
 * Type definitions for Microsoft.DocumentDB resources.
 *
 * **API Version**: 2024-08-15
 * **Generated**: 2025-10-05T04:36:05.432Z
 * **Source**: Microsoft.DocumentDB.json
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * AnalyticalStorageConfiguration definition.
 */
export interface AnalyticalStorageConfiguration {
  /**
   * Describes the types of schema for analytical storage.
   */
  readonly schemaType?: 'WellDefined' | 'FullFidelity' | any;
}

/**
 * ApiProps definition.
 */
export interface ApiProps {
  /**
   * Describes the version of the MongoDB account.
   */
  readonly serverVersion?: '3.2' | '3.6' | '4.0' | '4.2' | '5.0' | '6.0' | '7.0' | any;
}

/**
 * AuthenticationMethodLdapProps definition.
 */
export interface AuthenticationMethodLdapProps {
  /**
   * Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.
   */
  readonly connectionTimeoutInMs?: number | any;
  /**
   * Distinguished name of the object to start the recursive search of users from.
   */
  readonly searchBaseDistinguishedName?: string;
  /**
   * Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
   */
  readonly searchFilterTemplate?: string;
  /**
   * Array of Certificate
   */
  readonly serverCertificates?: Certificate[] | any;
  /**
   * Hostname of the LDAP server.
   */
  readonly serverHostname?: string;
  /**
   * Port of the LDAP server.
   */
  readonly serverPort?: number | any;
  /**
   * Distinguished name of the look up user account, who can look up user details on authentication.
   */
  readonly serviceUserDistinguishedName?: string;
  /**
   * Password of the look up user.
   */
  readonly serviceUserPassword?: string;
}

/**
 * AutoUpgradePolicyResource definition.
 */
export interface AutoUpgradePolicyResource {
  /**
   * Represents throughput policy which service must adhere to for auto-upgrade
   */
  readonly throughputPolicy?: ThroughputPolicyResource | any;
}

/**
 * AutoscaleSettings definition.
 */
export interface AutoscaleSettings {
  /**
   * Represents maximum throughput, the resource can scale up to.
   */
  readonly maxThroughput?: number | any;
}

/**
 * AutoscaleSettingsResource definition.
 */
export interface AutoscaleSettingsResource {
  /**
   * Cosmos DB resource auto-upgrade policy
   */
  readonly autoUpgradePolicy?: AutoUpgradePolicyResource | any;
  /**
   * Represents maximum throughput container can scale up to.
   */
  readonly maxThroughput?: number | any;
}

/**
 * BackupPolicy type.
 */
export type BackupPolicy = object | object;

/**
 * BackupPolicyMigrationState definition.
 */
export interface BackupPolicyMigrationState {
  /**
   * Time at which the backup policy migration started (ISO-8601 format).
   */
  readonly startTime?: string;
  /**
   * Describes the status of migration between backup policy types.
   */
  readonly status?: 'Invalid' | 'InProgress' | 'Completed' | 'Failed' | any;
  /**
   * Describes the target backup policy type of the backup policy migration.
   */
  readonly targetType?: 'Periodic' | 'Continuous' | any;
}

/**
 * Capability definition.
 */
export interface Capability {
  /**
   * Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
   */
  readonly name?: string;
}

/**
 * Capacity definition.
 */
export interface Capacity {
  /**
   * The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
   */
  readonly totalThroughputLimit?: number | any;
}

/**
 * CassandraError definition.
 */
export interface CassandraError {
  /**
   * Additional information about the error.
   */
  readonly additionalErrorInfo?: string;
  /**
   * The code of error that occurred.
   */
  readonly code?: string;
  /**
   * The message of the error.
   */
  readonly message?: string;
  /**
   * The target resource of the error.
   */
  readonly target?: string;
}

/**
 * CassandraKeyspaceCreateUpdateProps definition.
 */
export interface CassandraKeyspaceCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a Cassandra keyspace
   */
  readonly resource?: CassandraKeyspaceResource | any;
}

/**
 * CassandraKeyspaceResource definition.
 */
export interface CassandraKeyspaceResource {
  /**
   * Name of the Cosmos DB Cassandra keyspace
   */
  readonly id?: string;
}

/**
 * CassandraPartitionKey definition.
 */
export interface CassandraPartitionKey {
  /**
   * Name of the Cosmos DB Cassandra table partition key
   */
  readonly name?: string;
}

/**
 * CassandraSchema definition.
 */
export interface CassandraSchema {
  /**
   * List of cluster key.
   */
  readonly clusterKeys?: ClusterKey[] | any;
  /**
   * List of Cassandra table columns.
   */
  readonly columns?: Column[] | any;
  /**
   * List of partition key.
   */
  readonly partitionKeys?: CassandraPartitionKey[] | any;
}

/**
 * CassandraTableCreateUpdateProps definition.
 */
export interface CassandraTableCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a Cassandra table
   */
  readonly resource?: CassandraTableResource | any;
}

/**
 * CassandraTableResource definition.
 */
export interface CassandraTableResource {
  /**
   * Analytical TTL.
   */
  readonly analyticalStorageTtl?: number | any;
  /**
   * Time to live of the Cosmos DB Cassandra table
   */
  readonly defaultTtl?: number | any;
  /**
   * Name of the Cosmos DB Cassandra table
   */
  readonly id?: string;
  /**
   * Schema of the Cosmos DB Cassandra table
   */
  readonly schema?: CassandraSchema | any;
}

/**
 * Certificate definition.
 */
export interface Certificate {
  /**
   * PEM formatted public key.
   */
  readonly pem?: string;
}

/**
 * ClientEncryptionIncludedPath definition.
 */
export interface ClientEncryptionIncludedPath {
  /**
   * The identifier of the Client Encryption Key to be used to encrypt the path.
   */
  readonly clientEncryptionKeyId?: string;
  /**
   * The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.
   */
  readonly encryptionAlgorithm?: string;
  /**
   * The type of encryption to be performed. Eg - Deterministic, Randomized.
   */
  readonly encryptionType?: string;
  /**
   * Path that needs to be encrypted.
   */
  readonly path?: string;
}

/**
 * ClientEncryptionKeyCreateUpdateProps definition.
 */
export interface ClientEncryptionKeyCreateUpdateProps {
  /**
   * The standard JSON format of a ClientEncryptionKey
   */
  readonly resource?: ClientEncryptionKeyResource | any;
}

/**
 * ClientEncryptionKeyResource definition.
 */
export interface ClientEncryptionKeyResource {
  /**
   * Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data.
   */
  readonly encryptionAlgorithm?: string;
  /**
   * Name of the ClientEncryptionKey
   */
  readonly id?: string;
  /**
   * Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.
   */
  readonly keyWrapMetadata?: KeyWrapMetadata | any;
  /**
   * Wrapped (encrypted) form of the key represented as a byte array.
   */
  readonly wrappedDataEncryptionKey?: any;
}

/**
 * ClientEncryptionPolicy definition.
 */
export interface ClientEncryptionPolicy {
  /**
   * Paths of the item that need encryption along with path-specific settings.
   */
  readonly includedPaths?: ClientEncryptionIncludedPath[] | any;
  /**
   * Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption.
   */
  readonly policyFormatVersion?: number | any;
}

/**
 * ClusterKey definition.
 */
export interface ClusterKey {
  /**
   * Name of the Cosmos DB Cassandra table cluster key
   */
  readonly name?: string;
  /**
   * Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
   */
  readonly orderBy?: string;
}

/**
 * ClusterResourceProps definition.
 */
export interface ClusterResourceProps {
  /**
   * Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.
   */
  readonly authenticationMethod?: 'None' | 'Cassandra' | 'Ldap' | any;
  /**
   * How to connect to the azure services needed for running the cluster
   */
  readonly azureConnectionMethod?: 'None' | 'VPN' | any;
  /**
   * Whether Cassandra audit logging is enabled
   */
  readonly cassandraAuditLoggingEnabled?: boolean | any;
  /**
   * Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
   */
  readonly cassandraVersion?: string;
  /**
   * List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
   */
  readonly clientCertificates?: Certificate[] | any;
  /**
   * If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
   */
  readonly clusterNameOverride?: string;
  /**
   * Whether the cluster and associated data centers has been deallocated.
   */
  readonly deallocated?: boolean | any;
  /**
   * Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
   */
  readonly delegatedManagementSubnetId?: string;
  /**
   * List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
   */
  readonly externalGossipCertificates?: Certificate[] | any;
  /**
   * List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
   */
  readonly externalSeedNodes?: SeedNode[] | any;
  /**
   * (Deprecated) Number of hours to wait between taking a backup of the cluster.
   */
  readonly hoursBetweenBackups?: number | any;
  /**
   * Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
   */
  readonly initialCassandraAdminPassword?: string;
  /**
   * Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
   */
  readonly prometheusEndpoint?: SeedNode | any;
  /**
   * Error related to resource provisioning.
   */
  readonly provisionError?: CassandraError | any;
  /**
   * The status of the resource at the time the operation was called.
   */
  readonly provisioningState?:
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | 'Succeeded'
    | 'Failed'
    | 'Canceled'
    | any;
  /**
   * Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
   */
  readonly repairEnabled?: boolean | any;
  /**
   * To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
   */
  readonly restoreFromBackupId?: string;
}

/**
 * Column definition.
 */
export interface Column {
  /**
   * Name of the Cosmos DB Cassandra table column
   */
  readonly name?: string;
}

/**
 * Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties definition.
 */
export interface Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties {}

/**
 * CompositePath definition.
 */
export interface CompositePath {
  /**
   * Sort order for composite paths.
   */
  readonly order?: 'ascending' | 'descending' | any;
  /**
   * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
   */
  readonly path?: string;
}

/**
 * ComputedProperty definition.
 */
export interface ComputedProperty {
  /**
   * The name of a computed property, for example - "cp_lowerName"
   */
  readonly name?: string;
  /**
   * The query that evaluates the value for computed property, for example - "SELECT VALUE LOWER(c.name) FROM c"
   */
  readonly query?: string;
}

/**
 * ConflictResolutionPolicy definition.
 */
export interface ConflictResolutionPolicy {
  /**
   * The conflict resolution path in the case of LastWriterWins mode.
   */
  readonly conflictResolutionPath?: string;
  /**
   * The procedure to resolve conflicts in the case of custom mode.
   */
  readonly conflictResolutionProcedure?: string;
  /**
   * Indicates the conflict resolution mode.
   */
  readonly mode?: 'LastWriterWins' | 'Custom' | any;
}

/**
 * ConsistencyPolicy definition.
 */
export interface ConsistencyPolicy {
  /**
   * The default consistency level and configuration settings of the Cosmos DB account.
   */
  readonly defaultConsistencyLevel?:
    | 'Eventual'
    | 'Session'
    | 'BoundedStaleness'
    | 'Strong'
    | 'ConsistentPrefix'
    | any;
  /**
   * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
   */
  readonly maxIntervalInSeconds?: number | any;
  /**
   * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
   */
  readonly maxStalenessPrefix?: number | any;
}

/**
 * ContainerPartitionKey definition.
 */
export interface ContainerPartitionKey {
  /**
   * Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
   */
  readonly kind?: 'Hash' | 'Range' | 'MultiHash' | any;
  /**
   * List of paths using which data within the container can be partitioned
   */
  readonly paths?: string[] | any;
  /**
   * Indicates the version of the partition key definition
   */
  readonly version?: number | any;
}

/**
 * ContinuousModeProps definition.
 */
export interface ContinuousModeProps {
  /**
   * Enum to indicate type of Continuous backup mode
   */
  readonly tier?: 'Continuous7Days' | 'Continuous30Days' | any;
}

/**
 * CorsPolicy definition.
 */
export interface CorsPolicy {
  /**
   * The request headers that the origin domain may specify on the CORS request.
   */
  readonly allowedHeaders?: string;
  /**
   * The methods (HTTP request verbs) that the origin domain may use for a CORS request.
   */
  readonly allowedMethods?: string;
  /**
   * The origin domains that are permitted to make a request against the service via CORS.
   */
  readonly allowedOrigins?: string;
  /**
   * The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
   */
  readonly exposedHeaders?: string;
  /**
   * The maximum amount time that a browser should cache the preflight OPTIONS request.
   */
  readonly maxAgeInSeconds?: number | any;
}

/**
 * CreateUpdateOptions definition.
 */
export interface CreateUpdateOptions {
  /**
   * Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.
   */
  readonly autoscaleSettings?: AutoscaleSettings | any;
  /**
   * Request Units per second. For example, "throughput": 10000.
   */
  readonly throughput?: number | any;
}

/**
 * DataCenterResourceProps definition.
 */
export interface DataCenterResourceProps {
  /**
   * Ldap authentication method properties. This feature is in preview.
   */
  readonly authenticationMethodLdapProperties?: AuthenticationMethodLdapProps | any;
  /**
   * If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
   */
  readonly availabilityZone?: boolean | any;
  /**
   * Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
   */
  readonly backupStorageCustomerKeyUri?: string;
  /**
   * A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
   */
  readonly base64EncodedCassandraYamlFragment?: string;
  /**
   * The region this data center should be created in.
   */
  readonly dataCenterLocation?: string;
  /**
   * Whether the data center has been deallocated.
   */
  readonly deallocated?: boolean | any;
  /**
   * Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
   */
  readonly delegatedSubnetId?: string;
  /**
   * Number of disks attached to each node. Default is 4.
   */
  readonly diskCapacity?: number | any;
  /**
   * Disk SKU used for data centers. Default value is P30.
   */
  readonly diskSku?: string;
  /**
   * Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
   */
  readonly managedDiskCustomerKeyUri?: string;
  /**
   * The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
   */
  readonly nodeCount?: number | any;
  /**
   * Ip of the VPN Endpoint for this data center.
   */
  readonly privateEndpointIpAddress?: string;
  /**
   * Error related to resource provisioning.
   */
  readonly provisionError?: CassandraError | any;
  /**
   * The status of the resource at the time the operation was called.
   */
  readonly provisioningState?:
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | 'Succeeded'
    | 'Failed'
    | 'Canceled'
    | any;
  /**
   * Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
   */
  readonly sku?: string;
}

/**
 * DatabaseAccountCreateUpdateProps definition.
 */
export interface DatabaseAccountCreateUpdateProps {
  /**
   * Analytical storage specific properties.
   */
  readonly analyticalStorageConfiguration?: AnalyticalStorageConfiguration | any;
  /**
   * API specific properties. Currently, supported only for MongoDB API.
   */
  readonly apiProperties?: ApiProps | any;
  /**
   * The object representing the policy for taking backups on an account.
   */
  readonly backupPolicy?: BackupPolicy | any;
  /**
   * List of Cosmos DB capabilities for the account
   */
  readonly capabilities?: Capability[] | any;
  /**
   * The object that represents all properties related to capacity enforcement on an account.
   */
  readonly capacity?: Capacity | any;
  /**
   * The cassandra connector offer type for the Cosmos DB database C* account.
   */
  readonly connectorOffer?: 'Small' | any;
  /**
   * The consistency policy for the Cosmos DB account.
   */
  readonly consistencyPolicy?: ConsistencyPolicy | any;
  /**
   * The CORS policy for the Cosmos DB database account.
   */
  readonly cors?: CorsPolicy[] | any;
  /**
   * Enum to indicate the mode of account creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.
   */
  readonly customerManagedKeyStatus?: string;
  /**
   * The offer type for the database
   */
  readonly databaseAccountOfferType?: 'Standard' | any;
  /**
   * The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be "FirstPartyIdentity", "SystemAssignedIdentity" and more.
   */
  readonly defaultIdentity?: string;
  /**
   * Disable write operations on metadata resources (databases, containers, throughput) via account keys
   */
  readonly disableKeyBasedMetadataWriteAccess?: boolean | any;
  /**
   * Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
   */
  readonly disableLocalAuth?: boolean | any;
  /**
   * Flag to indicate whether to enable storage analytics.
   */
  readonly enableAnalyticalStorage?: boolean | any;
  /**
   * Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
   */
  readonly enableAutomaticFailover?: boolean | any;
  /**
   * Flag to indicate enabling/disabling of Burst Capacity feature on the account
   */
  readonly enableBurstCapacity?: boolean | any;
  /**
   * Enables the cassandra connector on the Cosmos DB C* account
   */
  readonly enableCassandraConnector?: boolean | any;
  /**
   * Flag to indicate whether Free Tier is enabled.
   */
  readonly enableFreeTier?: boolean | any;
  /**
   * Enables the account to write in multiple locations
   */
  readonly enableMultipleWriteLocations?: boolean | any;
  /**
   * Flag to indicate enabling/disabling of Partition Merge feature on the account
   */
  readonly enablePartitionMerge?: boolean | any;
  /**
   * List of IpRules.
   */
  readonly ipRules?: IpAddressOrRange[] | any;
  /**
   * Flag to indicate whether to enable/disable Virtual Network ACL rules.
   */
  readonly isVirtualNetworkFilterEnabled?: boolean | any;
  /**
   * The URI of the key vault
   */
  readonly keyVaultKeyUri?: string;
  /**
   * An array that contains the georeplication locations enabled for the Cosmos DB account.
   */
  readonly locations?: Location[] | any;
  /**
   * Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.
   */
  readonly minimalTlsVersion?: 'Tls' | 'Tls11' | 'Tls12' | any;
  /**
   * Indicates what services are allowed to bypass firewall checks.
   */
  readonly networkAclBypass?: 'None' | 'AzureServices' | any;
  /**
   * An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.
   */
  readonly networkAclBypassResourceIds?: string[] | any;
  /**
   * Whether requests from Public Network are allowed
   */
  readonly publicNetworkAccess?: 'Enabled' | 'Disabled' | 'SecuredByPerimeter' | any;
  /**
   * Parameters to indicate the information about the restore.
   */
  readonly restoreParameters?: RestoreParameters | any;
  /**
   * List of Virtual Network ACL rules configured for the Cosmos DB account.
   */
  readonly virtualNetworkRules?: VirtualNetworkRule[] | any;
}

/**
 * DatabaseRestoreResource definition.
 */
export interface DatabaseRestoreResource {
  /**
   * The names of the collections available for restore.
   */
  readonly collectionNames?: string[] | any;
  /**
   * The name of the database available for restore.
   */
  readonly databaseName?: string;
}

/**
 * ExcludedPath definition.
 */
export interface ExcludedPath {
  /**
   * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
   */
  readonly path?: string;
}

/**
 * GremlinDatabaseCreateUpdateProps definition.
 */
export interface GremlinDatabaseCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a Gremlin database
   */
  readonly resource?: GremlinDatabaseResource | any;
}

/**
 * GremlinDatabaseResource definition.
 */
export interface GremlinDatabaseResource {
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Name of the Cosmos DB Gremlin database
   */
  readonly id?: string;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
}

/**
 * GremlinDatabaseRestoreResource definition.
 */
export interface GremlinDatabaseRestoreResource {
  /**
   * The name of the gremlin database available for restore.
   */
  readonly databaseName?: string;
  /**
   * The names of the graphs available for restore.
   */
  readonly graphNames?: string[] | any;
}

/**
 * GremlinGraphCreateUpdateProps definition.
 */
export interface GremlinGraphCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a Gremlin graph
   */
  readonly resource?: GremlinGraphResource | any;
}

/**
 * GremlinGraphResource definition.
 */
export interface GremlinGraphResource {
  /**
   * Analytical TTL.
   */
  readonly analyticalStorageTtl?: number | any;
  /**
   * The conflict resolution policy for the graph.
   */
  readonly conflictResolutionPolicy?: ConflictResolutionPolicy | any;
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Default time to live
   */
  readonly defaultTtl?: number | any;
  /**
   * Name of the Cosmos DB Gremlin graph
   */
  readonly id?: string;
  /**
   * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
   */
  readonly indexingPolicy?: IndexingPolicy | any;
  /**
   * The configuration of the partition key to be used for partitioning data into multiple partitions
   */
  readonly partitionKey?: ContainerPartitionKey | any;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
  /**
   * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
   */
  readonly uniqueKeyPolicy?: UniqueKeyPolicy | any;
}

/**
 * IncludedPath definition.
 */
export interface IncludedPath {
  /**
   * List of indexes for this path
   */
  readonly indexes?: Indexes[] | any;
  /**
   * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
   */
  readonly path?: string;
}

/**
 * Indexes definition.
 */
export interface Indexes {
  /**
   * The datatype for which the indexing behavior is applied to.
   */
  readonly dataType?:
    | 'String'
    | 'Number'
    | 'Point'
    | 'Polygon'
    | 'LineString'
    | 'MultiPolygon'
    | any;
  /**
   * Indicates the type of index.
   */
  readonly kind?: 'Hash' | 'Range' | 'Spatial' | any;
  /**
   * The precision of the index. -1 is maximum precision.
   */
  readonly precision?: number | any;
}

/**
 * IndexingPolicy definition.
 */
export interface IndexingPolicy {
  /**
   * Indicates if the indexing policy is automatic
   */
  readonly automatic?: boolean | any;
  /**
   * List of composite path list
   */
  readonly compositeIndexes?: CompositePath[][] | any;
  /**
   * List of paths to exclude from indexing
   */
  readonly excludedPaths?: ExcludedPath[] | any;
  /**
   * List of paths to include in the indexing
   */
  readonly includedPaths?: IncludedPath[] | any;
  /**
   * Indicates the indexing mode.
   */
  readonly indexingMode?: 'consistent' | 'lazy' | 'none' | any;
  /**
   * List of spatial specifics
   */
  readonly spatialIndexes?: SpatialSpec[] | any;
}

/**
 * IpAddressOrRange definition.
 */
export interface IpAddressOrRange {
  /**
   * A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
   */
  readonly ipAddressOrRange?: string;
}

/**
 * KeyWrapMetadata definition.
 */
export interface KeyWrapMetadata {
  /**
   * Algorithm used in wrapping and unwrapping of the data encryption key.
   */
  readonly algorithm?: string;
  /**
   * The name of associated KeyEncryptionKey (aka CustomerManagedKey).
   */
  readonly name?: string;
  /**
   * Reference / link to the KeyEncryptionKey.
   */
  readonly value?: string;
}

/**
 * Location definition.
 */
export interface Location {
  /**
   * The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
   */
  readonly failoverPriority?: number | any;
  /**
   * Flag to indicate whether or not this region is an AvailabilityZone region
   */
  readonly isZoneRedundant?: boolean | any;
  /**
   * The name of the region.
   */
  readonly locationName?: string;
}

/**
 * ManagedCassandraManagedServiceIdentity definition.
 */
export interface ManagedCassandraManagedServiceIdentity {}

/**
 * ManagedServiceIdentity definition.
 */
export interface ManagedServiceIdentity {
  /**
   * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  readonly userAssignedIdentities?:
    | Record<
        string,
        Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties
      >
    | any;
}

/**
 * MongoDBCollectionCreateUpdateProps definition.
 */
export interface MongoDBCollectionCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a MongoDB collection
   */
  readonly resource?: MongoDBCollectionResource | any;
}

/**
 * MongoDBCollectionResource definition.
 */
export interface MongoDBCollectionResource {
  /**
   * Analytical TTL.
   */
  readonly analyticalStorageTtl?: number | any;
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Name of the Cosmos DB MongoDB collection
   */
  readonly id?: string;
  /**
   * List of index keys
   */
  readonly indexes?: MongoIndex[] | any;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
  /**
   * A key-value pair of shard keys to be applied for the request.
   */
  readonly shardKey?: Record<string, string> | any;
}

/**
 * MongoDBDatabaseCreateUpdateProps definition.
 */
export interface MongoDBDatabaseCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a MongoDB database
   */
  readonly resource?: MongoDBDatabaseResource | any;
}

/**
 * MongoDBDatabaseResource definition.
 */
export interface MongoDBDatabaseResource {
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Name of the Cosmos DB MongoDB database
   */
  readonly id?: string;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
}

/**
 * MongoIndex definition.
 */
export interface MongoIndex {
  /**
   * Cosmos DB MongoDB collection index keys
   */
  readonly key?: MongoIndexKeys | any;
  /**
   * Cosmos DB MongoDB collection index key options
   */
  readonly options?: MongoIndexOptions | any;
}

/**
 * MongoIndexKeys definition.
 */
export interface MongoIndexKeys {
  /**
   * List of keys for each MongoDB collection in the Azure Cosmos DB service
   */
  readonly keys?: string[] | any;
}

/**
 * MongoIndexOptions definition.
 */
export interface MongoIndexOptions {
  /**
   * Expire after seconds
   */
  readonly expireAfterSeconds?: number | any;
  /**
   * Is unique or not
   */
  readonly unique?: boolean | any;
}

/**
 * MongoRoleDefinitionResource definition.
 */
export interface MongoRoleDefinitionResource {
  /**
   * The database name for which access is being granted for this Role Definition.
   */
  readonly databaseName?: string;
  /**
   * A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.
   */
  readonly privileges?: Privilege[] | any;
  /**
   * A user-friendly name for the Role Definition. Must be unique for the database account.
   */
  readonly roleName?: string;
  /**
   * The set of roles inherited by this Role Definition.
   */
  readonly roles?: Role[] | any;
}

/**
 * MongoUserDefinitionResource definition.
 */
export interface MongoUserDefinitionResource {
  /**
   * A custom definition for the USer Definition.
   */
  readonly customData?: string;
  /**
   * The database name for which access is being granted for this User Definition.
   */
  readonly databaseName?: string;
  /**
   * The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256.
   */
  readonly mechanisms?: string;
  /**
   * The password for User Definition. Response does not contain user password.
   */
  readonly password?: string;
  /**
   * The set of roles inherited by the User Definition.
   */
  readonly roles?: Role[] | any;
  /**
   * The user name for User Definition.
   */
  readonly userName?: string;
}

/**
 * PeriodicModeProps definition.
 */
export interface PeriodicModeProps {
  /**
   * An integer representing the interval in minutes between two backups
   */
  readonly backupIntervalInMinutes?: number | any;
  /**
   * An integer representing the time (in hours) that each backup is retained
   */
  readonly backupRetentionIntervalInHours?: number | any;
  /**
   * Enum to indicate type of backup residency
   */
  readonly backupStorageRedundancy?: 'Geo' | 'Local' | 'Zone' | any;
}

/**
 * Permission definition.
 */
export interface Permission {
  /**
   * An array of data actions that are allowed.
   */
  readonly dataActions?: string[] | any;
  /**
   * An array of data actions that are denied.
   */
  readonly notDataActions?: string[] | any;
}

/**
 * PrivateEndpointConnectionProps definition.
 */
export interface PrivateEndpointConnectionProps {
  /**
   * Group id of the private endpoint.
   */
  readonly groupId?: string;
  /**
   * Private endpoint which the connection belongs to.
   */
  readonly privateEndpoint?: PrivateEndpointProperty | any;
  /**
   * Connection State of the Private Endpoint Connection.
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty | any;
  /**
   * Provisioning state of the private endpoint.
   */
  readonly provisioningState?: string;
}

/**
 * PrivateEndpointProperty definition.
 */
export interface PrivateEndpointProperty {
  /**
   * Resource id of the private endpoint.
   */
  readonly id?: string;
}

/**
 * PrivateLinkServiceConnectionStateProperty definition.
 */
export interface PrivateLinkServiceConnectionStateProperty {
  /**
   * The private link service connection description.
   */
  readonly description?: string;
  /**
   * The private link service connection status.
   */
  readonly status?: string;
}

/**
 * Privilege definition.
 */
export interface Privilege {
  /**
   * An array of actions that are allowed.
   */
  readonly actions?: string[] | any;
  /**
   * An Azure Cosmos DB Mongo DB Resource.
   */
  readonly resource?: PrivilegeResource | any;
}

/**
 * PrivilegeResource definition.
 */
export interface PrivilegeResource {
  /**
   * The collection name the role is applied.
   */
  readonly collection?: string;
  /**
   * The database name the role is applied.
   */
  readonly db?: string;
}

/**
 * ResourceRestoreParameters definition.
 */
export interface ResourceRestoreParameters {
  /**
   * The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
   */
  readonly restoreSource?: string;
  /**
   * Time to which the account has to be restored (ISO-8601 format).
   */
  readonly restoreTimestampInUtc?: string;
  /**
   * Specifies whether the restored account will have Time-To-Live disabled upon the successful restore.
   */
  readonly restoreWithTtlDisabled?: boolean | any;
}

/**
 * RestoreParameters definition.
 */
export interface RestoreParameters {
  /**
   * List of specific databases available for restore.
   */
  readonly databasesToRestore?: DatabaseRestoreResource[] | any;
  /**
   * List of specific gremlin databases available for restore.
   */
  readonly gremlinDatabasesToRestore?: GremlinDatabaseRestoreResource[] | any;
  /**
   * Describes the mode of the restore.
   */
  readonly restoreMode?: 'PointInTime' | any;
  /**
   * The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
   */
  readonly restoreSource?: string;
  /**
   * Time to which the account has to be restored (ISO-8601 format).
   */
  readonly restoreTimestampInUtc?: string;
  /**
   * Specifies whether the restored account will have Time-To-Live disabled upon the successful restore.
   */
  readonly restoreWithTtlDisabled?: boolean | any;
  /**
   * List of specific tables available for restore.
   */
  readonly tablesToRestore?: string[] | any;
}

/**
 * Role definition.
 */
export interface Role {
  /**
   * The database name the role is applied.
   */
  readonly db?: string;
  /**
   * The role name.
   */
  readonly role?: string;
}

/**
 * SeedNode definition.
 */
export interface SeedNode {
  /**
   * IP address of this seed node.
   */
  readonly ipAddress?: string;
}

/**
 * ServiceResourceCreateUpdateProps type.
 */
export type ServiceResourceCreateUpdateProps = object | object | object | object;

/**
 * SpatialSpec definition.
 */
export interface SpatialSpec {
  /**
   * The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
   */
  readonly path?: string;
  /**
   * List of path's spatial type
   */
  readonly types?: 'Point' | 'LineString' | 'Polygon' | 'MultiPolygon'[] | any;
}

/**
 * SqlContainerCreateUpdateProps definition.
 */
export interface SqlContainerCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a container
   */
  readonly resource?: SqlContainerResource | any;
}

/**
 * SqlContainerResource definition.
 */
export interface SqlContainerResource {
  /**
   * Analytical TTL.
   */
  readonly analyticalStorageTtl?: number | any;
  /**
   * The client encryption policy for the container.
   */
  readonly clientEncryptionPolicy?: ClientEncryptionPolicy | any;
  /**
   * List of computed properties
   */
  readonly computedProperties?: ComputedProperty[] | any;
  /**
   * The conflict resolution policy for the container.
   */
  readonly conflictResolutionPolicy?: ConflictResolutionPolicy | any;
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Default time to live
   */
  readonly defaultTtl?: number | any;
  /**
   * Name of the Cosmos DB SQL container
   */
  readonly id?: string;
  /**
   * The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
   */
  readonly indexingPolicy?: IndexingPolicy | any;
  /**
   * The configuration of the partition key to be used for partitioning data into multiple partitions
   */
  readonly partitionKey?: ContainerPartitionKey | any;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
  /**
   * The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
   */
  readonly uniqueKeyPolicy?: UniqueKeyPolicy | any;
}

/**
 * SqlDatabaseCreateUpdateProps definition.
 */
export interface SqlDatabaseCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a SQL database
   */
  readonly resource?: SqlDatabaseResource | any;
}

/**
 * SqlDatabaseResource definition.
 */
export interface SqlDatabaseResource {
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Name of the Cosmos DB SQL database
   */
  readonly id?: string;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
}

/**
 * SqlRoleAssignmentResource definition.
 */
export interface SqlRoleAssignmentResource {
  /**
   * The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
   */
  readonly principalId?: string;
  /**
   * The unique identifier for the associated Role Definition.
   */
  readonly roleDefinitionId?: string;
  /**
   * The data plane resource path for which access is being granted through this Role Assignment.
   */
  readonly scope?: string;
}

/**
 * SqlRoleDefinitionResource definition.
 */
export interface SqlRoleDefinitionResource {
  /**
   * A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
   */
  readonly assignableScopes?: string[] | any;
  /**
   * The set of operations allowed through this Role Definition.
   */
  readonly permissions?: Permission[] | any;
  /**
   * A user-friendly name for the Role Definition. Must be unique for the database account.
   */
  readonly roleName?: string;
}

/**
 * SqlStoredProcedureCreateUpdateProps definition.
 */
export interface SqlStoredProcedureCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a storedProcedure
   */
  readonly resource?: SqlStoredProcedureResource | any;
}

/**
 * SqlStoredProcedureResource definition.
 */
export interface SqlStoredProcedureResource {
  /**
   * Body of the Stored Procedure
   */
  readonly body?: string;
  /**
   * Name of the Cosmos DB SQL storedProcedure
   */
  readonly id?: string;
}

/**
 * SqlTriggerCreateUpdateProps definition.
 */
export interface SqlTriggerCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a trigger
   */
  readonly resource?: SqlTriggerResource | any;
}

/**
 * SqlTriggerResource definition.
 */
export interface SqlTriggerResource {
  /**
   * Body of the Trigger
   */
  readonly body?: string;
  /**
   * Name of the Cosmos DB SQL trigger
   */
  readonly id?: string;
  /**
   * The operation the trigger is associated with
   */
  readonly triggerOperation?: 'All' | 'Create' | 'Update' | 'Delete' | 'Replace' | any;
  /**
   * Type of the Trigger
   */
  readonly triggerType?: 'Pre' | 'Post' | any;
}

/**
 * SqlUserDefinedFunctionCreateUpdateProps definition.
 */
export interface SqlUserDefinedFunctionCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a userDefinedFunction
   */
  readonly resource?: SqlUserDefinedFunctionResource | any;
}

/**
 * SqlUserDefinedFunctionResource definition.
 */
export interface SqlUserDefinedFunctionResource {
  /**
   * Body of the User Defined Function
   */
  readonly body?: string;
  /**
   * Name of the Cosmos DB SQL userDefinedFunction
   */
  readonly id?: string;
}

/**
 * TableCreateUpdateProps definition.
 */
export interface TableCreateUpdateProps {
  /**
   * A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
   */
  readonly options?: CreateUpdateOptions | any;
  /**
   * The standard JSON format of a Table
   */
  readonly resource?: TableResource | any;
}

/**
 * TableResource definition.
 */
export interface TableResource {
  /**
   * Enum to indicate the mode of resource creation.
   */
  readonly createMode?: 'Default' | 'Restore' | any;
  /**
   * Name of the Cosmos DB table
   */
  readonly id?: string;
  /**
   * Parameters to indicate the information about the restore
   */
  readonly restoreParameters?: ResourceRestoreParameters | any;
}

/**
 * ThroughputPolicyResource definition.
 */
export interface ThroughputPolicyResource {
  /**
   * Represents the percentage by which throughput can increase every time throughput policy kicks in.
   */
  readonly incrementPercent?: number | any;
  /**
   * Determines whether the ThroughputPolicy is active or not
   */
  readonly isEnabled?: boolean | any;
}

/**
 * ThroughputSettingsResource definition.
 */
export interface ThroughputSettingsResource {
  /**
   * Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.
   */
  readonly autoscaleSettings?: AutoscaleSettingsResource | any;
  /**
   * Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.
   */
  readonly throughput?: number | any;
}

/**
 * ThroughputSettingsUpdateProps definition.
 */
export interface ThroughputSettingsUpdateProps {
  /**
   * The standard JSON format of a resource throughput
   */
  readonly resource?: ThroughputSettingsResource | any;
}

/**
 * UniqueKey definition.
 */
export interface UniqueKey {
  /**
   * List of paths must be unique for each document in the Azure Cosmos DB service
   */
  readonly paths?: string[] | any;
}

/**
 * UniqueKeyPolicy definition.
 */
export interface UniqueKeyPolicy {
  /**
   * List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
   */
  readonly uniqueKeys?: UniqueKey[] | any;
}

/**
 * VirtualNetworkRule definition.
 */
export interface VirtualNetworkRule {
  /**
   * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
   */
  readonly id?: string;
  /**
   * Create firewall rule before the virtual network has vnet service endpoint enabled.
   */
  readonly ignoreMissingVNetServiceEndpoint?: boolean | any;
}

/**
 * cassandraClusters_dataCenters_childResource definition.
 */
export interface cassandraClusters_dataCenters_childResource {
  /**
   * Data center name in a managed Cassandra cluster.
   */
  readonly name?: string | any;
  /**
   * Properties of a managed Cassandra data center.
   */
  readonly properties?: DataCenterResourceProps | any;
}

/**
 * databaseAccounts_cassandraKeyspaces_childResource definition.
 */
export interface databaseAccounts_cassandraKeyspaces_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB keyspace name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB Cassandra keyspace.
   */
  readonly properties?: CassandraKeyspaceCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_cassandraKeyspaces_tables_childResource definition.
 */
export interface databaseAccounts_cassandraKeyspaces_tables_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB table name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB Cassandra table.
   */
  readonly properties?: CassandraTableCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_cassandraKeyspaces_tables_throughputSettings_childResource definition.
 */
export interface databaseAccounts_cassandraKeyspaces_tables_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_cassandraKeyspaces_throughputSettings_childResource definition.
 */
export interface databaseAccounts_cassandraKeyspaces_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_gremlinDatabases_childResource definition.
 */
export interface databaseAccounts_gremlinDatabases_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB Gremlin database.
   */
  readonly properties?: GremlinDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_gremlinDatabases_graphs_childResource definition.
 */
export interface databaseAccounts_gremlinDatabases_graphs_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB graph name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB Gremlin graph.
   */
  readonly properties?: GremlinGraphCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_gremlinDatabases_graphs_throughputSettings_childResource definition.
 */
export interface databaseAccounts_gremlinDatabases_graphs_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_gremlinDatabases_throughputSettings_childResource definition.
 */
export interface databaseAccounts_gremlinDatabases_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_mongodbDatabases_childResource definition.
 */
export interface databaseAccounts_mongodbDatabases_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB MongoDB database.
   */
  readonly properties?: MongoDBDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_mongodbDatabases_collections_childResource definition.
 */
export interface databaseAccounts_mongodbDatabases_collections_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB collection name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB MongoDB collection.
   */
  readonly properties?: MongoDBCollectionCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_mongodbDatabases_collections_throughputSettings_childResource definition.
 */
export interface databaseAccounts_mongodbDatabases_collections_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_mongodbDatabases_throughputSettings_childResource definition.
 */
export interface databaseAccounts_mongodbDatabases_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_mongodbRoleDefinitions_childResource definition.
 */
export interface databaseAccounts_mongodbRoleDefinitions_childResource {
  /**
   * The ID for the Role Definition {dbName.roleName}.
   */
  readonly name?: string;
  /**
   * Properties to create and update an Azure Cosmos DB Mongo Role Definition.
   */
  readonly properties?: MongoRoleDefinitionResource | any;
}

/**
 * databaseAccounts_mongodbUserDefinitions_childResource definition.
 */
export interface databaseAccounts_mongodbUserDefinitions_childResource {
  /**
   * The ID for the User Definition {dbName.userName}.
   */
  readonly name?: string;
  /**
   * Properties to create and update an Azure Cosmos DB Mongo User Definition.
   */
  readonly properties?: MongoUserDefinitionResource | any;
}

/**
 * databaseAccounts_notebookWorkspaces_childResource definition.
 */
export interface databaseAccounts_notebookWorkspaces_childResource {
  /**
   * The name of the notebook workspace resource.
   */
  readonly name?: 'default' | any;
}

/**
 * databaseAccounts_privateEndpointConnections_childResource definition.
 */
export interface databaseAccounts_privateEndpointConnections_childResource {
  /**
   * The name of the private endpoint connection.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: PrivateEndpointConnectionProps | any;
}

/**
 * databaseAccounts_services_childResource definition.
 */
export interface databaseAccounts_services_childResource {
  /**
   * Cosmos DB service name.
   *
   * @remarks
   * Length: 3-50 characters
   */
  readonly name?: string;
  /**
   * Properties in ServiceResourceCreateUpdateParameters.
   */
  readonly properties?: ServiceResourceCreateUpdateProps | any;
}

/**
 * databaseAccounts_sqlDatabases_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB SQL database.
   */
  readonly properties?: SqlDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_clientEncryptionKeys_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_clientEncryptionKeys_childResource {
  /**
   * Cosmos DB ClientEncryptionKey name.
   */
  readonly name?: string;
  /**
   * Properties to create and update ClientEncryptionKey.
   */
  readonly properties?: ClientEncryptionKeyCreateUpdateProps | any;
}

/**
 * databaseAccounts_sqlDatabases_containers_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_containers_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB container name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB container.
   */
  readonly properties?: SqlContainerCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_containers_storedProcedures_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_containers_storedProcedures_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB storedProcedure name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB storedProcedure.
   */
  readonly properties?: SqlStoredProcedureCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_containers_throughputSettings_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_containers_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_containers_triggers_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_containers_triggers_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB trigger name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB trigger.
   */
  readonly properties?: SqlTriggerCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_containers_userDefinedFunctions_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_containers_userDefinedFunctions_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB userDefinedFunction name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB userDefinedFunction.
   */
  readonly properties?: SqlUserDefinedFunctionCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlDatabases_throughputSettings_childResource definition.
 */
export interface databaseAccounts_sqlDatabases_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_sqlRoleAssignments_childResource definition.
 */
export interface databaseAccounts_sqlRoleAssignments_childResource {
  /**
   * The GUID for the Role Assignment.
   */
  readonly name?: string;
  /**
   * Properties to create and update an Azure Cosmos DB SQL Role Assignment.
   */
  readonly properties?: SqlRoleAssignmentResource | any;
}

/**
 * databaseAccounts_sqlRoleDefinitions_childResource definition.
 */
export interface databaseAccounts_sqlRoleDefinitions_childResource {
  /**
   * The GUID for the Role Definition.
   */
  readonly name?: string;
  /**
   * Properties to create and update an Azure Cosmos DB SQL Role Definition.
   */
  readonly properties?: SqlRoleDefinitionResource | any;
}

/**
 * databaseAccounts_tables_childResource definition.
 */
export interface databaseAccounts_tables_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB table name.
   */
  readonly name?: string;
  /**
   * Properties to create and update Azure Cosmos DB Table.
   */
  readonly properties?: TableCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * databaseAccounts_tables_throughputSettings_childResource definition.
 */
export interface databaseAccounts_tables_throughputSettings_childResource {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties?: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/cassandraClusters (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/cassandraClusters
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/cassandraClusters`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmCassandraClustersProps {
  /**
   * Identity for the resource.
   */
  readonly identity?: ManagedCassandraManagedServiceIdentity | any;
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Managed Cassandra cluster name.
   */
  readonly name: string | any;
  /**
   * Properties of a managed Cassandra cluster.
   */
  readonly properties: ClusterResourceProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/cassandraClusters/dataCenters (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/cassandraClusters/dataCenters
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/cassandraClusters/dataCenters`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmCassandraClustersDataCentersProps {
  /**
   * Data center name in a managed Cassandra cluster.
   */
  readonly name: string | any;
  /**
   * Properties of a managed Cassandra data center.
   */
  readonly properties: DataCenterResourceProps | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsProps {
  /**
   * Identity for the resource.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Indicates the type of database account. This can only be set at database account creation.
   */
  readonly kind?: 'GlobalDocumentDB' | 'MongoDB' | 'Parse' | any;
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database account name.
   */
  readonly name: string | any;
  /**
   * Properties to create and update Azure Cosmos DB database accounts.
   */
  readonly properties: DatabaseAccountCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsCassandraKeyspacesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB keyspace name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB Cassandra keyspace.
   */
  readonly properties: CassandraKeyspaceCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsCassandraKeyspacesTablesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB table name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB Cassandra table.
   */
  readonly properties: CassandraTableCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsCassandraKeyspacesTablesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsCassandraKeyspacesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/gremlinDatabases (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/gremlinDatabases
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/gremlinDatabases`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsGremlinDatabasesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB Gremlin database.
   */
  readonly properties: GremlinDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsGremlinDatabasesGraphsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB graph name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB Gremlin graph.
   */
  readonly properties: GremlinGraphCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsGremlinDatabasesGraphsThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsGremlinDatabasesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbDatabases (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbDatabases
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbDatabases`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbDatabasesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB MongoDB database.
   */
  readonly properties: MongoDBDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbDatabasesCollectionsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB collection name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB MongoDB collection.
   */
  readonly properties: MongoDBCollectionCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbDatabasesCollectionsThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbDatabasesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbRoleDefinitionsProps {
  /**
   * The ID for the Role Definition {dbName.roleName}.
   */
  readonly name: string;
  /**
   * Properties to create and update an Azure Cosmos DB Mongo Role Definition.
   */
  readonly properties: MongoRoleDefinitionResource | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsMongodbUserDefinitionsProps {
  /**
   * The ID for the User Definition {dbName.userName}.
   */
  readonly name: string;
  /**
   * Properties to create and update an Azure Cosmos DB Mongo User Definition.
   */
  readonly properties: MongoUserDefinitionResource | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsNotebookWorkspacesProps {
  /**
   * The name of the notebook workspace resource.
   */
  readonly name: string | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsPrivateEndpointConnectionsProps {
  /**
   * The name of the private endpoint connection.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: PrivateEndpointConnectionProps | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/services (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/services
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/services`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsServicesProps {
  /**
   * Cosmos DB service name.
   *
   * @remarks
   * Length: 3-50 characters
   */
  readonly name: string;
  /**
   * Properties in ServiceResourceCreateUpdateParameters.
   */
  readonly properties: ServiceResourceCreateUpdateProps | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB database name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB SQL database.
   */
  readonly properties: SqlDatabaseCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesClientEncryptionKeysProps {
  /**
   * Cosmos DB ClientEncryptionKey name.
   */
  readonly name: string;
  /**
   * Properties to create and update ClientEncryptionKey.
   */
  readonly properties: ClientEncryptionKeyCreateUpdateProps | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesContainersProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB container name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB container.
   */
  readonly properties: SqlContainerCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesContainersStoredProceduresProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB storedProcedure name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB storedProcedure.
   */
  readonly properties: SqlStoredProcedureCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesContainersThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesContainersTriggersProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB trigger name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB trigger.
   */
  readonly properties: SqlTriggerCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesContainersUserDefinedFunctionsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB userDefinedFunction name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB userDefinedFunction.
   */
  readonly properties: SqlUserDefinedFunctionCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlDatabasesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlRoleAssignmentsProps {
  /**
   * The GUID for the Role Assignment.
   */
  readonly name: string;
  /**
   * Properties to create and update an Azure Cosmos DB SQL Role Assignment.
   */
  readonly properties: SqlRoleAssignmentResource | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsSqlRoleDefinitionsProps {
  /**
   * The GUID for the Role Definition.
   */
  readonly name: string;
  /**
   * Properties to create and update an Azure Cosmos DB SQL Role Definition.
   */
  readonly properties: SqlRoleDefinitionResource | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/tables (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/tables
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/tables`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsTablesProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * Cosmos DB table name.
   */
  readonly name: string;
  /**
   * Properties to create and update Azure Cosmos DB Table.
   */
  readonly properties: TableCreateUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings (L1 construct).
 *
 * @remarks
 * Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings
 *
 * **ARM Resource Type**: `Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings`
 * **API Version**: `2024-08-15`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDatabaseAccountsTablesThroughputSettingsProps {
  /**
   * The location of the resource group to which the resource belongs.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties to update Azure Cosmos DB resource throughput.
   */
  readonly properties: ThroughputSettingsUpdateProps | any;
  /**
   * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
   */
  readonly tags?: Record<string, string> | any;
}
