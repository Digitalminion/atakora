/**
 * Type definitions for Microsoft.Network resources.
 *
 * **API Version**: 2024-07-01
 * **Generated**: 2025-10-04T01:47:42.760Z
 * **Source**: Microsoft.Network.NRP.json
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * AadAuthenticationParameters definition.
 */
export interface AadAuthenticationParameters {
  /**
   * AAD Vpn authentication parameter AAD audience.
   */
  readonly aadAudience?: string;
  /**
   * AAD Vpn authentication parameter AAD issuer.
   */
  readonly aadIssuer?: string;
  /**
   * AAD Vpn authentication parameter AAD tenant.
   */
  readonly aadTenant?: string;
}

/**
 * Action definition.
 */
export interface Action {
  /**
   * List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
   */
  readonly parameters?: Parameter[] | any;
}

/**
 * AddressPrefixItem definition.
 */
export interface AddressPrefixItem {
  /**
   * Address prefix.
   */
  readonly addressPrefix?: string;
  /**
   * Address prefix type.
   */
  readonly addressPrefixType?: 'IPPrefix' | 'ServiceTag' | 'NetworkGroup' | any;
}

/**
 * AddressSpace definition.
 */
export interface AddressSpace {
  /**
   * A list of address blocks reserved for this virtual network in CIDR notation.
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * A list of IPAM Pools allocating IP address prefixes.
   */
  readonly ipamPoolPrefixAllocations?: IpamPoolPrefixAllocation[] | any;
}

/**
 * AdminRuleCollection definition.
 */
export interface AdminRuleCollection {
  /**
   * Groups for configuration
   */
  readonly appliesToGroups?: NetworkManagerSecurityGroupItem[] | any;
  /**
   * A description of the admin rule collection.
   */
  readonly description?: string;
}

/**
 * AdvertisedPublicPrefixProps definition.
 */
export interface AdvertisedPublicPrefixProps {
  /**
   * Advertised Public Prefix.
   */
  readonly prefix?: string;
  /**
   * Signed string generated by encrypting validationId with a private key.
   */
  readonly signature?: string;
  /**
   * Validation string that contains circuit peering info.
   */
  readonly validationId?: string;
}

/**
 * ApplicationGatewayAuthenticationCertificate definition.
 */
export interface ApplicationGatewayAuthenticationCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the authentication certificate that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway authentication certificate.
   */
  readonly properties?: ApplicationGatewayAuthenticationCertificate | any;
}

/**
 * ApplicationGatewayAutoscaleConfiguration definition.
 */
export interface ApplicationGatewayAutoscaleConfiguration {
  /**
   * Upper bound on number of Application Gateway capacity.
   */
  readonly maxCapacity?: number | any;
  /**
   * Lower bound on number of Application Gateway capacity.
   */
  readonly minCapacity?: number | any;
}

/**
 * ApplicationGatewayBackendAddress definition.
 */
export interface ApplicationGatewayBackendAddress {
  /**
   * Fully qualified domain name (FQDN).
   */
  readonly fqdn?: string;
  /**
   * IP address.
   */
  readonly ipAddress?: string;
}

/**
 * ApplicationGatewayBackendAddressPool definition.
 */
export interface ApplicationGatewayBackendAddressPool {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the backend address pool that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway backend address pool.
   */
  readonly properties?: ApplicationGatewayBackendAddressPool | any;
}

/**
 * ApplicationGatewayBackendHttpSettings definition.
 */
export interface ApplicationGatewayBackendHttpSettings {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the backend http settings that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway backend HTTP settings.
   */
  readonly properties?: ApplicationGatewayBackendHttpSettings | any;
}

/**
 * ApplicationGatewayBackendSettings definition.
 */
export interface ApplicationGatewayBackendSettings {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the backend settings that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway backend settings.
   */
  readonly properties?: ApplicationGatewayBackendSettings | any;
}

/**
 * ApplicationGatewayClientAuthConfiguration definition.
 */
export interface ApplicationGatewayClientAuthConfiguration {
  /**
   * Verify client certificate issuer name on the application gateway.
   */
  readonly verifyClientCertIssuerDN?: boolean | any;
  /**
   * Verify client certificate revocation status.
   */
  readonly verifyClientRevocation?: 'None' | 'OCSP' | any;
}

/**
 * ApplicationGatewayConnectionDraining definition.
 */
export interface ApplicationGatewayConnectionDraining {
  /**
   * The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
   */
  readonly drainTimeoutInSec?: number | any;
  /**
   * Whether connection draining is enabled or not.
   */
  readonly enabled?: boolean | any;
}

/**
 * ApplicationGatewayCustomError definition.
 */
export interface ApplicationGatewayCustomError {
  /**
   * Error page URL of the application gateway custom error.
   */
  readonly customErrorPageUrl?: string;
  /**
   * Status code of the application gateway custom error.
   */
  readonly statusCode?:
    | 'HttpStatus400'
    | 'HttpStatus403'
    | 'HttpStatus404'
    | 'HttpStatus405'
    | 'HttpStatus408'
    | 'HttpStatus500'
    | 'HttpStatus502'
    | 'HttpStatus503'
    | 'HttpStatus504'
    | any;
}

/**
 * ApplicationGatewayFirewallDisabledRuleGroup definition.
 */
export interface ApplicationGatewayFirewallDisabledRuleGroup {
  /**
   * The name of the rule group that will be disabled.
   */
  readonly ruleGroupName?: string;
  /**
   * The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
   */
  readonly rules?: number[] | any;
}

/**
 * ApplicationGatewayFirewallExclusion definition.
 */
export interface ApplicationGatewayFirewallExclusion {
  /**
   * The variable to be excluded.
   */
  readonly matchVariable?: string;
  /**
   * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
   */
  readonly selector?: string;
  /**
   * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
   */
  readonly selectorMatchOperator?: string;
}

/**
 * ApplicationGatewayFrontendIPConfiguration definition.
 */
export interface ApplicationGatewayFrontendIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the frontend IP configuration that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway frontend IP configuration.
   */
  readonly properties?: ApplicationGatewayFrontendIPConfiguration | any;
}

/**
 * ApplicationGatewayFrontendPort definition.
 */
export interface ApplicationGatewayFrontendPort {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the frontend port that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway frontend port.
   */
  readonly properties?: ApplicationGatewayFrontendPort | any;
}

/**
 * ApplicationGatewayGlobalConfiguration definition.
 */
export interface ApplicationGatewayGlobalConfiguration {
  /**
   * Enable request buffering.
   */
  readonly enableRequestBuffering?: boolean | any;
  /**
   * Enable response buffering.
   */
  readonly enableResponseBuffering?: boolean | any;
}

/**
 * ApplicationGatewayHeaderConfiguration definition.
 */
export interface ApplicationGatewayHeaderConfiguration {
  /**
   * Header name of the header configuration.
   */
  readonly headerName?: string;
  /**
   * Header value of the header configuration.
   */
  readonly headerValue?: string;
  /**
   * An optional field under "Rewrite Action". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud
   */
  readonly headerValueMatcher?: HeaderValueMatcher | any;
}

/**
 * ApplicationGatewayHttpListener definition.
 */
export interface ApplicationGatewayHttpListener {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the HTTP listener that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway HTTP listener.
   */
  readonly properties?: ApplicationGatewayHttpListener | any;
}

/**
 * ApplicationGatewayIPConfiguration definition.
 */
export interface ApplicationGatewayIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the IP configuration that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway IP configuration.
   */
  readonly properties?: ApplicationGatewayIPConfiguration | any;
}

/**
 * ApplicationGatewayListener definition.
 */
export interface ApplicationGatewayListener {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the listener that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway listener.
   */
  readonly properties?: ApplicationGatewayListener | any;
}

/**
 * ApplicationGatewayLoadDistributionPolicy definition.
 */
export interface ApplicationGatewayLoadDistributionPolicy {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the load distribution policy that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway load distribution policy.
   */
  readonly properties?: ApplicationGatewayLoadDistributionPolicy | any;
}

/**
 * ApplicationGatewayLoadDistributionTarget definition.
 */
export interface ApplicationGatewayLoadDistributionTarget {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the load distribution policy that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway load distribution target.
   */
  readonly properties?: ApplicationGatewayLoadDistributionTarget | any;
}

/**
 * ApplicationGatewayPathRule definition.
 */
export interface ApplicationGatewayPathRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the path rule that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway path rule.
   */
  readonly properties?: ApplicationGatewayPathRule | any;
}

/**
 * ApplicationGatewayPrivateEndpointConnectionProps definition.
 */
export interface ApplicationGatewayPrivateEndpointConnectionProps {
  /**
   * A collection of information about the state of the connection between service consumer and provider.
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState | any;
}

/**
 * ApplicationGatewayPrivateLinkConfiguration definition.
 */
export interface ApplicationGatewayPrivateLinkConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the private link configuration that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway private link configuration.
   */
  readonly properties?: any;
}

/**
 * ApplicationGatewayPrivateLinkConfigurationProps definition.
 */
export interface ApplicationGatewayPrivateLinkConfigurationProps {
  /**
   * An array of application gateway private link ip configurations.
   */
  readonly ipConfigurations?: ApplicationGatewayPrivateLinkIpConfiguration[] | any;
}

/**
 * ApplicationGatewayPrivateLinkIpConfiguration definition.
 */
export interface ApplicationGatewayPrivateLinkIpConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of application gateway private link ip configuration.
   */
  readonly name?: string;
  /**
   * Properties of an application gateway private link ip configuration.
   */
  readonly properties?: any;
}

/**
 * ApplicationGatewayPrivateLinkIpConfigurationProps definition.
 */
export interface ApplicationGatewayPrivateLinkIpConfigurationProps {
  /**
   * Whether the ip configuration is primary or not.
   */
  readonly primary?: boolean | any;
  /**
   * The private IP address of the IP configuration.
   */
  readonly privateIPAddress?: string;
  /**
   * The private IP address allocation method.
   */
  readonly privateIPAllocationMethod?: 'Static' | 'Dynamic' | any;
  /**
   * Reference to the subnet resource.
   */
  readonly subnet?: SubResource | any;
}

/**
 * ApplicationGatewayProbe definition.
 */
export interface ApplicationGatewayProbe {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the probe that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway probe.
   */
  readonly properties?: ApplicationGatewayProbe | any;
}

/**
 * ApplicationGatewayProbeHealthResponseMatch definition.
 */
export interface ApplicationGatewayProbeHealthResponseMatch {
  /**
   * Body that must be contained in the health response. Default value is empty.
   */
  readonly body?: string;
  /**
   * Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
   */
  readonly statusCodes?: string[] | any;
}

/**
 * ApplicationGateway definition.
 */
export interface ApplicationGateway {
  /**
   * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly authenticationCertificates?: ApplicationGatewayAuthenticationCertificate[] | any;
  /**
   * Autoscale Configuration.
   */
  readonly autoscaleConfiguration?: ApplicationGatewayAutoscaleConfiguration | any;
  /**
   * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly backendAddressPools?: ApplicationGatewayBackendAddressPool[] | any;
  /**
   * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly backendHttpSettingsCollection?: ApplicationGatewayBackendHttpSettings[] | any;
  /**
   * Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly backendSettingsCollection?: ApplicationGatewayBackendSettings[] | any;
  /**
   * Custom error configurations of the application gateway resource.
   */
  readonly customErrorConfigurations?: ApplicationGatewayCustomError[] | any;
  /**
   * Whether FIPS is enabled on the application gateway resource.
   */
  readonly enableFips?: boolean | any;
  /**
   * Whether HTTP2 is enabled on the application gateway resource.
   */
  readonly enableHttp2?: boolean | any;
  /**
   * Reference to the FirewallPolicy resource.
   */
  readonly firewallPolicy?: SubResource | any;
  /**
   * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
   */
  readonly forceFirewallPolicyAssociation?: boolean | any;
  /**
   * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly frontendIPConfigurations?: ApplicationGatewayFrontendIPConfiguration[] | any;
  /**
   * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly frontendPorts?: ApplicationGatewayFrontendPort[] | any;
  /**
   * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly gatewayIPConfigurations?: ApplicationGatewayIPConfiguration[] | any;
  /**
   * Global Configuration.
   */
  readonly globalConfiguration?: ApplicationGatewayGlobalConfiguration | any;
  /**
   * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly httpListeners?: ApplicationGatewayHttpListener[] | any;
  /**
   * Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly listeners?: ApplicationGatewayListener[] | any;
  /**
   * Load distribution policies of the application gateway resource.
   */
  readonly loadDistributionPolicies?: ApplicationGatewayLoadDistributionPolicy[] | any;
  /**
   * PrivateLink configurations on application gateway.
   */
  readonly privateLinkConfigurations?: ApplicationGatewayPrivateLinkConfiguration[] | any;
  /**
   * Probes of the application gateway resource.
   */
  readonly probes?: ApplicationGatewayProbe[] | any;
  /**
   * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly redirectConfigurations?: ApplicationGatewayRedirectConfiguration[] | any;
  /**
   * Request routing rules of the application gateway resource.
   */
  readonly requestRoutingRules?: ApplicationGatewayRequestRoutingRule[] | any;
  /**
   * Rewrite rules for the application gateway resource.
   */
  readonly rewriteRuleSets?: ApplicationGatewayRewriteRuleSet[] | any;
  /**
   * Routing rules of the application gateway resource.
   */
  readonly routingRules?: ApplicationGatewayRoutingRule[] | any;
  /**
   * SKU of the application gateway resource.
   */
  readonly sku?: ApplicationGatewaySku | any;
  /**
   * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly sslCertificates?: ApplicationGatewaySslCertificate[] | any;
  /**
   * SSL policy of the application gateway resource.
   */
  readonly sslPolicy?: ApplicationGatewaySslPolicy | any;
  /**
   * SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly sslProfiles?: ApplicationGatewaySslProfile[] | any;
  /**
   * Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly trustedClientCertificates?: ApplicationGatewayTrustedClientCertificate[] | any;
  /**
   * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly trustedRootCertificates?: ApplicationGatewayTrustedRootCertificate[] | any;
  /**
   * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
   */
  readonly urlPathMaps?: ApplicationGatewayUrlPathMap[] | any;
  /**
   * Web application firewall configuration.
   */
  readonly webApplicationFirewallConfiguration?:
    | ApplicationGatewayWebApplicationFirewallConfiguration
    | any;
}

/**
 * ApplicationGatewayRedirectConfiguration definition.
 */
export interface ApplicationGatewayRedirectConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the redirect configuration that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway redirect configuration.
   */
  readonly properties?: ApplicationGatewayRedirectConfiguration | any;
}

/**
 * ApplicationGatewayRequestRoutingRule definition.
 */
export interface ApplicationGatewayRequestRoutingRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the request routing rule that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway request routing rule.
   */
  readonly properties?: ApplicationGatewayRequestRoutingRule | any;
}

/**
 * ApplicationGatewayRewriteRule definition.
 */
export interface ApplicationGatewayRewriteRule {
  /**
   * Set of actions to be done as part of the rewrite Rule.
   */
  readonly actionSet?: ApplicationGatewayRewriteRuleActionSet | any;
  /**
   * Conditions based on which the action set execution will be evaluated.
   */
  readonly conditions?: ApplicationGatewayRewriteRuleCondition[] | any;
  /**
   * Name of the rewrite rule that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
   */
  readonly ruleSequence?: number | any;
}

/**
 * ApplicationGatewayRewriteRuleActionSet definition.
 */
export interface ApplicationGatewayRewriteRuleActionSet {
  /**
   * Request Header Actions in the Action Set.
   */
  readonly requestHeaderConfigurations?: ApplicationGatewayHeaderConfiguration[] | any;
  /**
   * Response Header Actions in the Action Set.
   */
  readonly responseHeaderConfigurations?: ApplicationGatewayHeaderConfiguration[] | any;
  /**
   * Url Configuration Action in the Action Set.
   */
  readonly urlConfiguration?: ApplicationGatewayUrlConfiguration | any;
}

/**
 * ApplicationGatewayRewriteRuleCondition definition.
 */
export interface ApplicationGatewayRewriteRuleCondition {
  /**
   * Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
   */
  readonly ignoreCase?: boolean | any;
  /**
   * Setting this value as truth will force to check the negation of the condition given by the user.
   */
  readonly negate?: boolean | any;
  /**
   * The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
   */
  readonly pattern?: string;
  /**
   * The condition parameter of the RewriteRuleCondition.
   */
  readonly variable?: string;
}

/**
 * ApplicationGatewayRewriteRuleSet definition.
 */
export interface ApplicationGatewayRewriteRuleSet {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the rewrite rule set that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway rewrite rule set.
   */
  readonly properties?: ApplicationGatewayRewriteRuleSet | any;
}

/**
 * ApplicationGatewayRoutingRule definition.
 */
export interface ApplicationGatewayRoutingRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the routing rule that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway routing rule.
   */
  readonly properties?: ApplicationGatewayRoutingRule | any;
}

/**
 * ApplicationGatewaySku definition.
 */
export interface ApplicationGatewaySku {
  /**
   * Capacity (instance count) of an application gateway.
   */
  readonly capacity?: number | any;
  /**
   * Family of an application gateway SKU.
   */
  readonly family?: 'Generation_1' | 'Generation_2' | any;
  /**
   * Name of an application gateway SKU.
   */
  readonly name?:
    | 'Standard_Small'
    | 'Standard_Medium'
    | 'Standard_Large'
    | 'WAF_Medium'
    | 'WAF_Large'
    | 'Standard_v2'
    | 'WAF_v2'
    | 'Basic'
    | any;
  /**
   * Tier of an application gateway.
   */
  readonly tier?: 'Standard' | 'WAF' | 'Standard_v2' | 'WAF_v2' | 'Basic' | any;
}

/**
 * ApplicationGatewaySslCertificate definition.
 */
export interface ApplicationGatewaySslCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the SSL certificate that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway SSL certificate.
   */
  readonly properties?: ApplicationGatewaySslCertificate | any;
}

/**
 * ApplicationGatewaySslPolicy definition.
 */
export interface ApplicationGatewaySslPolicy {
  /**
   * Ssl cipher suites to be enabled in the specified order to application gateway.
   */
  readonly cipherSuites?:
    | 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384'
    | 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'
    | 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA'
    | 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA'
    | 'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384'
    | 'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256'
    | 'TLS_DHE_RSA_WITH_AES_256_CBC_SHA'
    | 'TLS_DHE_RSA_WITH_AES_128_CBC_SHA'
    | 'TLS_RSA_WITH_AES_256_GCM_SHA384'
    | 'TLS_RSA_WITH_AES_128_GCM_SHA256'
    | 'TLS_RSA_WITH_AES_256_CBC_SHA256'
    | 'TLS_RSA_WITH_AES_128_CBC_SHA256'
    | 'TLS_RSA_WITH_AES_256_CBC_SHA'
    | 'TLS_RSA_WITH_AES_128_CBC_SHA'
    | 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'
    | 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'
    | 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384'
    | 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256'
    | 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA'
    | 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA'
    | 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256'
    | 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256'
    | 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA'
    | 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA'
    | 'TLS_RSA_WITH_3DES_EDE_CBC_SHA'
    | 'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA'
    | 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'
    | 'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'[]
    | any;
  /**
   * Ssl protocols to be disabled on application gateway.
   */
  readonly disabledSslProtocols?: 'TLSv1_0' | 'TLSv1_1' | 'TLSv1_2' | 'TLSv1_3'[] | any;
  /**
   * Minimum version of Ssl protocol to be supported on application gateway.
   */
  readonly minProtocolVersion?: 'TLSv1_0' | 'TLSv1_1' | 'TLSv1_2' | 'TLSv1_3' | any;
  /**
   * Name of Ssl predefined policy.
   */
  readonly policyName?:
    | 'AppGwSslPolicy20150501'
    | 'AppGwSslPolicy20170401'
    | 'AppGwSslPolicy20170401S'
    | 'AppGwSslPolicy20220101'
    | 'AppGwSslPolicy20220101S'
    | any;
  /**
   * Type of Ssl Policy.
   */
  readonly policyType?: 'Predefined' | 'Custom' | 'CustomV2' | any;
}

/**
 * ApplicationGatewaySslProfile definition.
 */
export interface ApplicationGatewaySslProfile {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the SSL profile that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway SSL profile.
   */
  readonly properties?: ApplicationGatewaySslProfile | any;
}

/**
 * ApplicationGatewayTrustedClientCertificate definition.
 */
export interface ApplicationGatewayTrustedClientCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the trusted client certificate that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway trusted client certificate.
   */
  readonly properties?: ApplicationGatewayTrustedClientCertificate | any;
}

/**
 * ApplicationGatewayTrustedRootCertificate definition.
 */
export interface ApplicationGatewayTrustedRootCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the trusted root certificate that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway trusted root certificate.
   */
  readonly properties?: ApplicationGatewayTrustedRootCertificate | any;
}

/**
 * ApplicationGatewayUrlConfiguration definition.
 */
export interface ApplicationGatewayUrlConfiguration {
  /**
   * Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
   */
  readonly modifiedPath?: string;
  /**
   * Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
   */
  readonly modifiedQueryString?: string;
  /**
   * If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
   */
  readonly reroute?: boolean | any;
}

/**
 * ApplicationGatewayUrlPathMap definition.
 */
export interface ApplicationGatewayUrlPathMap {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the URL path map that is unique within an Application Gateway.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway URL path map.
   */
  readonly properties?: ApplicationGatewayUrlPathMap | any;
}

/**
 * ApplicationGatewayWebApplicationFirewallConfiguration definition.
 */
export interface ApplicationGatewayWebApplicationFirewallConfiguration {
  /**
   * The disabled rule groups.
   */
  readonly disabledRuleGroups?: ApplicationGatewayFirewallDisabledRuleGroup[] | any;
  /**
   * Whether the web application firewall is enabled or not.
   */
  readonly enabled?: boolean | any;
  /**
   * The exclusion list.
   */
  readonly exclusions?: ApplicationGatewayFirewallExclusion[] | any;
  /**
   * Maximum file upload size in Mb for WAF.
   */
  readonly fileUploadLimitInMb?: number | any;
  /**
   * Web application firewall mode.
   */
  readonly firewallMode?: 'Detection' | 'Prevention' | any;
  /**
   * Maximum request body size for WAF.
   */
  readonly maxRequestBodySize?: number | any;
  /**
   * Maximum request body size in Kb for WAF.
   */
  readonly maxRequestBodySizeInKb?: number | any;
  /**
   * Whether allow WAF to check request Body.
   */
  readonly requestBodyCheck?: boolean | any;
  /**
   * The type of the web application firewall rule set. Possible values are: 'OWASP'.
   */
  readonly ruleSetType?: string;
  /**
   * The version of the rule set type.
   */
  readonly ruleSetVersion?: string;
}

/**
 * ApplicationSecurityGroup definition.
 */
export interface ApplicationSecurityGroup {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the application security group.
   */
  readonly properties?: ApplicationSecurityGroup | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Authorization definition.
 */
export interface Authorization {
  /**
   * The authorization key.
   */
  readonly authorizationKey?: string;
  /**
   * The authorization use status.
   */
  readonly authorizationUseStatus?: 'Available' | 'InUse' | any;
}

/**
 * AzureFirewallApplicationRule definition.
 */
export interface AzureFirewallApplicationRule {
  /**
   * Description of the rule.
   */
  readonly description?: string;
  /**
   * List of FQDN Tags for this rule.
   */
  readonly fqdnTags?: string[] | any;
  /**
   * Name of the application rule.
   */
  readonly name?: string;
  /**
   * Array of ApplicationRuleProtocols.
   */
  readonly protocols?: AzureFirewallApplicationRuleProtocol[] | any;
  /**
   * List of source IP addresses for this rule.
   */
  readonly sourceAddresses?: string[] | any;
  /**
   * List of source IpGroups for this rule.
   */
  readonly sourceIpGroups?: string[] | any;
  /**
   * List of FQDNs for this rule.
   */
  readonly targetFqdns?: string[] | any;
}

/**
 * AzureFirewallApplicationRuleCollection definition.
 */
export interface AzureFirewallApplicationRuleCollection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the azure firewall application rule collection.
   */
  readonly properties?: AzureFirewallApplicationRuleCollection | any;
}

/**
 * AzureFirewallApplicationRuleProtocol definition.
 */
export interface AzureFirewallApplicationRuleProtocol {
  /**
   * Port number for the protocol, cannot be greater than 64000. This field is optional.
   */
  readonly port?: number | any;
  /**
   * Protocol type.
   */
  readonly protocolType?: 'Http' | 'Https' | 'Mssql' | any;
}

/**
 * AzureFirewallAutoscaleConfiguration definition.
 */
export interface AzureFirewallAutoscaleConfiguration {
  /**
   * The maximum number of capacity units for this azure firewall. Use null to reset the value to the service default.
   */
  readonly maxCapacity?: number | any;
  /**
   * The minimum number of capacity units for this azure firewall. Use null to reset the value to the service default.
   */
  readonly minCapacity?: number | any;
}

/**
 * AzureFirewallIPConfiguration definition.
 */
export interface AzureFirewallIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the azure firewall IP configuration.
   */
  readonly properties?: AzureFirewallIPConfiguration | any;
}

/**
 * AzureFirewallNatRCAction definition.
 */
export interface AzureFirewallNatRCAction {}

/**
 * AzureFirewallNatRule definition.
 */
export interface AzureFirewallNatRule {
  /**
   * Description of the rule.
   */
  readonly description?: string;
  /**
   * List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
   */
  readonly destinationAddresses?: string[] | any;
  /**
   * List of destination ports.
   */
  readonly destinationPorts?: string[] | any;
  /**
   * Name of the NAT rule.
   */
  readonly name?: string;
  /**
   * Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
   */
  readonly protocols?: 'TCP' | 'UDP' | 'Any' | 'ICMP'[] | any;
  /**
   * List of source IP addresses for this rule.
   */
  readonly sourceAddresses?: string[] | any;
  /**
   * List of source IpGroups for this rule.
   */
  readonly sourceIpGroups?: string[] | any;
  /**
   * The translated address for this NAT rule.
   */
  readonly translatedAddress?: string;
  /**
   * The translated FQDN for this NAT rule.
   */
  readonly translatedFqdn?: string;
  /**
   * The translated port for this NAT rule.
   */
  readonly translatedPort?: string;
}

/**
 * AzureFirewallNatRuleCollection definition.
 */
export interface AzureFirewallNatRuleCollection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the azure firewall NAT rule collection.
   */
  readonly properties?: any;
}

/**
 * AzureFirewallNatRuleCollectionProps definition.
 */
export interface AzureFirewallNatRuleCollectionProps {
  /**
   * The action type of a NAT rule collection.
   */
  readonly action?: AzureFirewallNatRCAction | any;
  /**
   * Priority of the NAT rule collection resource.
   */
  readonly priority?: number | any;
  /**
   * Collection of rules used by a NAT rule collection.
   */
  readonly rules?: AzureFirewallNatRule[] | any;
}

/**
 * AzureFirewallNetworkRule definition.
 */
export interface AzureFirewallNetworkRule {
  /**
   * Description of the rule.
   */
  readonly description?: string;
  /**
   * List of destination IP addresses.
   */
  readonly destinationAddresses?: string[] | any;
  /**
   * List of destination FQDNs.
   */
  readonly destinationFqdns?: string[] | any;
  /**
   * List of destination IpGroups for this rule.
   */
  readonly destinationIpGroups?: string[] | any;
  /**
   * List of destination ports.
   */
  readonly destinationPorts?: string[] | any;
  /**
   * Name of the network rule.
   */
  readonly name?: string;
  /**
   * Array of AzureFirewallNetworkRuleProtocols.
   */
  readonly protocols?: 'TCP' | 'UDP' | 'Any' | 'ICMP'[] | any;
  /**
   * List of source IP addresses for this rule.
   */
  readonly sourceAddresses?: string[] | any;
  /**
   * List of source IpGroups for this rule.
   */
  readonly sourceIpGroups?: string[] | any;
}

/**
 * AzureFirewallNetworkRuleCollection definition.
 */
export interface AzureFirewallNetworkRuleCollection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the azure firewall network rule collection.
   */
  readonly properties?: AzureFirewallNetworkRuleCollection | any;
}

/**
 * AzureFirewall definition.
 */
export interface AzureFirewall {
  /**
   * The additional properties used to further config this azure firewall.
   */
  readonly additionalProperties?: Record<string, string> | any;
  /**
   * Collection of application rule collections used by Azure Firewall.
   */
  readonly applicationRuleCollections?: AzureFirewallApplicationRuleCollection[] | any;
  /**
   * Properties to provide a custom autoscale configuration to this azure firewall.
   */
  readonly autoscaleConfiguration?: AzureFirewallAutoscaleConfiguration | any;
  /**
   * The firewallPolicy associated with this azure firewall.
   */
  readonly firewallPolicy?: SubResource | any;
  /**
   * IP addresses associated with AzureFirewall.
   */
  readonly hubIPAddresses?: HubIPAddresses | any;
  /**
   * IP configuration of the Azure Firewall resource.
   */
  readonly ipConfigurations?: AzureFirewallIPConfiguration[] | any;
  /**
   * IP configuration of the Azure Firewall used for management traffic.
   */
  readonly managementIpConfiguration?: AzureFirewallIPConfiguration | any;
  /**
   * Collection of NAT rule collections used by Azure Firewall.
   */
  readonly natRuleCollections?: AzureFirewallNatRuleCollection[] | any;
  /**
   * Collection of network rule collections used by Azure Firewall.
   */
  readonly networkRuleCollections?: AzureFirewallNetworkRuleCollection[] | any;
  /**
   * The Azure Firewall Resource SKU.
   */
  readonly sku?: AzureFirewallSku | any;
  /**
   * The operation mode for Threat Intelligence.
   */
  readonly threatIntelMode?: 'Alert' | 'Deny' | 'Off' | any;
  /**
   * The virtualHub to which the firewall belongs.
   */
  readonly virtualHub?: SubResource | any;
}

/**
 * AzureFirewallPublicIPAddress definition.
 */
export interface AzureFirewallPublicIPAddress {
  /**
   * Public IP Address value.
   */
  readonly address?: string;
}

/**
 * AzureFirewallRCAction definition.
 */
export interface AzureFirewallRCAction {}

/**
 * AzureFirewallSku definition.
 */
export interface AzureFirewallSku {
  /**
   * Name of an Azure Firewall SKU.
   */
  readonly name?: 'AZFW_VNet' | 'AZFW_Hub' | any;
  /**
   * Tier of an Azure Firewall.
   */
  readonly tier?: 'Standard' | 'Premium' | 'Basic' | any;
}

/**
 * BackendAddressPool definition.
 */
export interface BackendAddressPool {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer backend address pool.
   */
  readonly properties?: BackendAddressPool | any;
}

/**
 * BastionHostIPConfiguration definition.
 */
export interface BastionHostIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Represents the ip configuration associated with the resource.
   */
  readonly properties?: BastionHostIPConfiguration | any;
}

/**
 * BastionHost definition.
 */
export interface BastionHost {
  /**
   * Enable/Disable Copy/Paste feature of the Bastion Host resource.
   */
  readonly disableCopyPaste?: boolean | any;
  /**
   * FQDN for the endpoint on which bastion host is accessible.
   */
  readonly dnsName?: string;
  /**
   * Enable/Disable File Copy feature of the Bastion Host resource.
   */
  readonly enableFileCopy?: boolean | any;
  /**
   * Enable/Disable IP Connect feature of the Bastion Host resource.
   */
  readonly enableIpConnect?: boolean | any;
  /**
   * Enable/Disable Kerberos feature of the Bastion Host resource.
   */
  readonly enableKerberos?: boolean | any;
  /**
   * Enable/Disable Private Only feature of the Bastion Host resource.
   */
  readonly enablePrivateOnlyBastion?: boolean | any;
  /**
   * Enable/Disable Session Recording feature of the Bastion Host resource.
   */
  readonly enableSessionRecording?: boolean | any;
  /**
   * Enable/Disable Shareable Link of the Bastion Host resource.
   */
  readonly enableShareableLink?: boolean | any;
  /**
   * Enable/Disable Tunneling feature of the Bastion Host resource.
   */
  readonly enableTunneling?: boolean | any;
  /**
   * IP configuration of the Bastion Host resource.
   */
  readonly ipConfigurations?: BastionHostIPConfiguration[] | any;
  /**
   * networkAcls
   */
  readonly networkAcls?: BastionHostPropertiesFormatNetworkAcls | any;
  /**
   * The scale units for the Bastion Host resource.
   */
  readonly scaleUnits?: number | any;
  /**
   * Reference to an existing virtual network required for Developer Bastion Host only.
   */
  readonly virtualNetwork?: SubResource | any;
}

/**
 * BastionHostPropertiesFormatNetworkAcls definition.
 */
export interface BastionHostPropertiesFormatNetworkAcls {
  /**
   * Sets the IP ACL rules for Developer Bastion Host.
   */
  readonly ipRules?: IPRule[] | any;
}

/**
 * BgpConnectionProps definition.
 */
export interface BgpConnectionProps {
  /**
   * The reference to the HubVirtualNetworkConnection resource.
   */
  readonly hubVirtualNetworkConnection?: SubResource | any;
  /**
   * Peer ASN.
   */
  readonly peerAsn?: number | any;
  /**
   * Peer IP.
   */
  readonly peerIp?: string;
}

/**
 * BgpSettings definition.
 */
export interface BgpSettings {
  /**
   * The BGP speaker's ASN.
   */
  readonly asn?: number | any;
  /**
   * The BGP peering address and BGP identifier of this BGP speaker.
   */
  readonly bgpPeeringAddress?: string;
  /**
   * BGP peering address with IP configuration ID for virtual network gateway.
   */
  readonly bgpPeeringAddresses?: IPConfigurationBgpPeeringAddress[] | any;
  /**
   * The weight added to routes learned from this BGP speaker.
   */
  readonly peerWeight?: number | any;
}

/**
 * BreakOutCategoryPolicies definition.
 */
export interface BreakOutCategoryPolicies {
  /**
   * Flag to control breakout of o365 allow category.
   */
  readonly allow?: boolean | any;
  /**
   * Flag to control breakout of o365 default category.
   */
  readonly default?: boolean | any;
  /**
   * Flag to control breakout of o365 optimize category.
   */
  readonly optimize?: boolean | any;
}

/**
 * Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties definition.
 */
export interface Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties {}

/**
 * ConnectionMonitorDestination definition.
 */
export interface ConnectionMonitorDestination {
  /**
   * Address of the connection monitor destination (IP or domain name).
   */
  readonly address?: string;
  /**
   * The destination port used by connection monitor.
   */
  readonly port?: number | any;
  /**
   * The ID of the resource used as the destination by connection monitor.
   */
  readonly resourceId?: string;
}

/**
 * ConnectionMonitorEndpoint definition.
 */
export interface ConnectionMonitorEndpoint {
  /**
   * Address of the connection monitor endpoint. Supported for AzureVM, ExternalAddress, ArcMachine, MMAWorkspaceMachine endpoint type.
   */
  readonly address?: string;
  /**
   * Test coverage for the endpoint.
   */
  readonly coverageLevel?:
    | 'Default'
    | 'Low'
    | 'BelowAverage'
    | 'Average'
    | 'AboveAverage'
    | 'Full'
    | any;
  /**
   * Filter field is getting deprecated and should not be used. Instead use Include/Exclude scope fields for it.
   */
  readonly filter?: ConnectionMonitorEndpointFilter | any;
  /**
   * Location details is optional and only being used for 'AzureArcNetwork' type endpoints, which contains region details.
   */
  readonly locationDetails?: ConnectionMonitorEndpointLocationDetails | any;
  /**
   * The name of the connection monitor endpoint.
   */
  readonly name?: string;
  /**
   * Resource ID of the connection monitor endpoint are supported for AzureVM, AzureVMSS, AzureVNet, AzureSubnet, MMAWorkspaceMachine, MMAWorkspaceNetwork, AzureArcVM endpoint type.
   */
  readonly resourceId?: string;
  /**
   * Endpoint scope defines which target resource to monitor in case of compound resource endpoints like VMSS, AzureSubnet, AzureVNet, MMAWorkspaceNetwork, AzureArcNetwork.
   */
  readonly scope?: ConnectionMonitorEndpointScope | any;
  /**
   * Subscription ID for connection monitor endpoint. It's an optional parameter which is being used for 'AzureArcNetwork' type endpoint.
   */
  readonly subscriptionId?: string;
}

/**
 * ConnectionMonitorEndpointFilter definition.
 */
export interface ConnectionMonitorEndpointFilter {
  /**
   * List of items in the filter.
   */
  readonly items?: ConnectionMonitorEndpointFilterItem[] | any;
}

/**
 * ConnectionMonitorEndpointFilterItem definition.
 */
export interface ConnectionMonitorEndpointFilterItem {
  /**
   * The address of the filter item.
   */
  readonly address?: string;
}

/**
 * ConnectionMonitorEndpointLocationDetails definition.
 */
export interface ConnectionMonitorEndpointLocationDetails {
  /**
   * Region for connection monitor endpoint.
   */
  readonly region?: string;
}

/**
 * ConnectionMonitorEndpointScope definition.
 */
export interface ConnectionMonitorEndpointScope {
  /**
   * List of items which needs to be excluded from the endpoint scope.
   */
  readonly exclude?: ConnectionMonitorEndpointScopeItem[] | any;
  /**
   * List of items which needs to be included to the endpoint scope.
   */
  readonly include?: ConnectionMonitorEndpointScopeItem[] | any;
}

/**
 * ConnectionMonitorEndpointScopeItem definition.
 */
export interface ConnectionMonitorEndpointScopeItem {
  /**
   * The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
   */
  readonly address?: string;
}

/**
 * ConnectionMonitorHttpConfiguration definition.
 */
export interface ConnectionMonitorHttpConfiguration {
  /**
   * The HTTP method to use.
   */
  readonly method?: 'Get' | 'Post' | any;
  /**
   * The path component of the URI. For instance, "/dir1/dir2".
   */
  readonly path?: string;
  /**
   * The port to connect to.
   */
  readonly port?: number | any;
  /**
   * Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
   */
  readonly preferHTTPS?: boolean | any;
  /**
   * The HTTP headers to transmit with the request.
   */
  readonly requestHeaders?: HttpHeader[] | any;
  /**
   * HTTP status codes to consider successful. For instance, "2xx,301-304,418".
   */
  readonly validStatusCodeRanges?: string[] | any;
}

/**
 * ConnectionMonitorIcmpConfiguration definition.
 */
export interface ConnectionMonitorIcmpConfiguration {
  /**
   * Value indicating whether path evaluation with trace route should be disabled.
   */
  readonly disableTraceRoute?: boolean | any;
}

/**
 * ConnectionMonitorOutput definition.
 */
export interface ConnectionMonitorOutput {
  /**
   * Describes the settings for producing output into a log analytics workspace.
   */
  readonly workspaceSettings?: ConnectionMonitorWorkspaceSettings | any;
}

/**
 * ConnectionMonitorParameters definition.
 */
export interface ConnectionMonitorParameters {
  /**
   * Determines if the connection monitor will start automatically once created.
   */
  readonly autoStart?: boolean | any;
  /**
   * Describes the destination of connection monitor.
   */
  readonly destination?: ConnectionMonitorDestination | any;
  /**
   * List of connection monitor endpoints.
   */
  readonly endpoints?: ConnectionMonitorEndpoint[] | any;
  /**
   * Monitoring interval in seconds.
   */
  readonly monitoringIntervalInSeconds?: number | any;
  /**
   * Optional notes to be associated with the connection monitor.
   */
  readonly notes?: string;
  /**
   * List of connection monitor outputs.
   */
  readonly outputs?: ConnectionMonitorOutput[] | any;
  /**
   * Describes the source of connection monitor.
   */
  readonly source?: ConnectionMonitorSource | any;
  /**
   * List of connection monitor test configurations.
   */
  readonly testConfigurations?: ConnectionMonitorTestConfiguration[] | any;
  /**
   * List of connection monitor test groups.
   */
  readonly testGroups?: ConnectionMonitorTestGroup[] | any;
}

/**
 * ConnectionMonitorSource definition.
 */
export interface ConnectionMonitorSource {
  /**
   * The source port used by connection monitor.
   */
  readonly port?: number | any;
  /**
   * The ID of the resource used as the source by connection monitor.
   */
  readonly resourceId?: string;
}

/**
 * ConnectionMonitorSuccessThreshold definition.
 */
export interface ConnectionMonitorSuccessThreshold {
  /**
   * The maximum percentage of failed checks permitted for a test to evaluate as successful.
   */
  readonly checksFailedPercent?: number | any;
  /**
   * The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
   */
  readonly roundTripTimeMs?: number | any;
}

/**
 * ConnectionMonitorTcpConfiguration definition.
 */
export interface ConnectionMonitorTcpConfiguration {
  /**
   * Destination port behavior.
   */
  readonly destinationPortBehavior?: 'None' | 'ListenIfAvailable' | any;
  /**
   * Value indicating whether path evaluation with trace route should be disabled.
   */
  readonly disableTraceRoute?: boolean | any;
  /**
   * The port to connect to.
   */
  readonly port?: number | any;
}

/**
 * ConnectionMonitorTestConfiguration definition.
 */
export interface ConnectionMonitorTestConfiguration {
  /**
   * The parameters used to perform test evaluation over HTTP.
   */
  readonly httpConfiguration?: ConnectionMonitorHttpConfiguration | any;
  /**
   * The parameters used to perform test evaluation over ICMP.
   */
  readonly icmpConfiguration?: ConnectionMonitorIcmpConfiguration | any;
  /**
   * The name of the connection monitor test configuration.
   */
  readonly name?: string;
  /**
   * The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
   */
  readonly preferredIPVersion?: 'IPv4' | 'IPv6' | any;
  /**
   * The protocol to use in test evaluation.
   */
  readonly protocol?: 'Tcp' | 'Http' | 'Icmp' | any;
  /**
   * The threshold for declaring a test successful.
   */
  readonly successThreshold?: ConnectionMonitorSuccessThreshold | any;
  /**
   * The parameters used to perform test evaluation over TCP.
   */
  readonly tcpConfiguration?: ConnectionMonitorTcpConfiguration | any;
  /**
   * The frequency of test evaluation, in seconds.
   */
  readonly testFrequencySec?: number | any;
}

/**
 * ConnectionMonitorTestGroup definition.
 */
export interface ConnectionMonitorTestGroup {
  /**
   * List of destination endpoint names.
   */
  readonly destinations?: string[] | any;
  /**
   * Value indicating whether test group is disabled.
   */
  readonly disable?: boolean | any;
  /**
   * The name of the connection monitor test group.
   */
  readonly name?: string;
  /**
   * List of source endpoint names.
   */
  readonly sources?: string[] | any;
  /**
   * List of test configuration names.
   */
  readonly testConfigurations?: string[] | any;
}

/**
 * ConnectionMonitorWorkspaceSettings definition.
 */
export interface ConnectionMonitorWorkspaceSettings {
  /**
   * Log analytics workspace resource ID.
   */
  readonly workspaceResourceId?: string;
}

/**
 * ConnectivityConfigurationProps definition.
 */
export interface ConnectivityConfigurationProps {
  /**
   * Groups for configuration
   */
  readonly appliesToGroups?: ConnectivityGroupItem[] | any;
  /**
   * Collection of additional settings to enhance specific topology behaviors of the connectivity configuration resource.
   */
  readonly connectivityCapabilities?:
    | ConnectivityConfigurationPropertiesConnectivityCapabilities
    | any;
  /**
   * Connectivity topology type.
   */
  readonly connectivityTopology?: 'HubAndSpoke' | 'Mesh' | any;
  /**
   * Flag if need to remove current existing peerings.
   */
  readonly deleteExistingPeering?: 'False' | 'True' | any;
  /**
   * A description of the connectivity configuration.
   */
  readonly description?: string;
  /**
   * List of hubItems
   */
  readonly hubs?: Hub[] | any;
  /**
   * Flag if global mesh is supported.
   */
  readonly isGlobal?: 'False' | 'True' | any;
}

/**
 * ConnectivityConfigurationPropertiesConnectivityCapabilities definition.
 */
export interface ConnectivityConfigurationPropertiesConnectivityCapabilities {
  /**
   * Behavior to handle overlapped IP address space among members of the connected group of the connectivity configuration.
   */
  readonly connectedGroupAddressOverlap?: 'Allowed' | 'Disallowed' | any;
  /**
   * Option indicating the scale of private endpoints allowed in the connected group of the connectivity configuration.
   */
  readonly connectedGroupPrivateEndpointsScale?: 'Standard' | 'HighScale' | any;
  /**
   * Option indicating enforcement of peerings created by the connectivity configuration.
   */
  readonly peeringEnforcement?: 'Unenforced' | 'Enforced' | any;
}

/**
 * ConnectivityGroupItem definition.
 */
export interface ConnectivityGroupItem {
  /**
   * Group connectivity type.
   */
  readonly groupConnectivity?: 'None' | 'DirectlyConnected' | any;
  /**
   * Flag if global is supported.
   */
  readonly isGlobal?: 'False' | 'True' | any;
  /**
   * Network group Id.
   */
  readonly networkGroupId?: string;
  /**
   * Flag if need to use hub gateway.
   */
  readonly useHubGateway?: 'False' | 'True' | any;
}

/**
 * ContainerNetworkInterfaceConfiguration definition.
 */
export interface ContainerNetworkInterfaceConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Container network interface configuration properties.
   */
  readonly properties?: ContainerNetworkInterfaceConfiguration | any;
}

/**
 * Criterion definition.
 */
export interface Criterion {
  /**
   * List of AS paths which this criteria matches.
   */
  readonly asPath?: string[] | any;
  /**
   * List of BGP communities which this criteria matches.
   */
  readonly community?: string[] | any;
  /**
   * Match condition to apply RouteMap rules.
   */
  readonly matchCondition?: 'Unknown' | 'Contains' | 'Equals' | 'NotContains' | 'NotEquals' | any;
  /**
   * List of route prefixes which this criteria matches.
   */
  readonly routePrefix?: string[] | any;
}

/**
 * CustomDnsConfig definition.
 */
export interface CustomDnsConfig {
  /**
   * Fqdn that resolves to private endpoint ip address.
   */
  readonly fqdn?: string;
  /**
   * A list of private ip addresses of the private endpoint.
   */
  readonly ipAddresses?: string[] | any;
}

/**
 * CustomIpPrefix definition.
 */
export interface CustomIpPrefix {
  /**
   * The ASN for CIDR advertising. Should be an integer as string.
   */
  readonly asn?: string;
  /**
   * Authorization message for WAN validation.
   */
  readonly authorizationMessage?: string;
  /**
   * The prefix range in CIDR notation. Should include the start address and the prefix length.
   */
  readonly cidr?: string;
  /**
   * The commissioned state of the Custom IP Prefix.
   */
  readonly commissionedState?:
    | 'Provisioning'
    | 'Provisioned'
    | 'Commissioning'
    | 'CommissionedNoInternetAdvertise'
    | 'Commissioned'
    | 'Decommissioning'
    | 'Deprovisioning'
    | 'Deprovisioned'
    | any;
  /**
   * The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.
   */
  readonly customIpPrefixParent?: SubResource | any;
  /**
   * Whether to do express route advertise.
   */
  readonly expressRouteAdvertise?: boolean | any;
  /**
   * The Geo for CIDR advertising. Should be an Geo code.
   */
  readonly geo?:
    | 'GLOBAL'
    | 'AFRI'
    | 'APAC'
    | 'EURO'
    | 'LATAM'
    | 'NAM'
    | 'ME'
    | 'OCEANIA'
    | 'AQ'
    | any;
  /**
   * Whether to Advertise the range to Internet.
   */
  readonly noInternetAdvertise?: boolean | any;
  /**
   * Type of custom IP prefix. Should be Singular, Parent, or Child.
   */
  readonly prefixType?: 'Singular' | 'Parent' | 'Child' | any;
  /**
   * Signed message for WAN validation.
   */
  readonly signedMessage?: string;
}

/**
 * DdosCustomPolicy definition.
 */
export interface DdosCustomPolicy {}

/**
 * DdosProtectionPlan definition.
 */
export interface DdosProtectionPlan {}

/**
 * DdosSettings definition.
 */
export interface DdosSettings {
  /**
   * The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
   */
  readonly ddosProtectionPlan?: SubResource | any;
  /**
   * The DDoS protection mode of the public IP
   */
  readonly protectionMode?: 'VirtualNetworkInherited' | 'Enabled' | 'Disabled' | any;
}

/**
 * Delegation definition.
 */
export interface Delegation {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a subnet. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the subnet.
   */
  readonly properties?: ServiceDelegation | any;
}

/**
 * DelegationProps definition.
 */
export interface DelegationProps {
  /**
   * The service name to which the NVA is delegated.
   */
  readonly serviceName?: string;
}

/**
 * DeviceProps definition.
 */
export interface DeviceProps {
  /**
   * Model of the device.
   */
  readonly deviceModel?: string;
  /**
   * Name of the device Vendor.
   */
  readonly deviceVendor?: string;
  /**
   * Link speed.
   */
  readonly linkSpeedInMbps?: number | any;
}

/**
 * DhcpOptions definition.
 */
export interface DhcpOptions {
  /**
   * The list of DNS servers IP addresses.
   */
  readonly dnsServers?: string[] | any;
}

/**
 * DnsSettings definition.
 */
export interface DnsSettings {
  /**
   * Enable DNS Proxy on Firewalls attached to the Firewall Policy.
   */
  readonly enableProxy?: boolean | any;
  /**
   * FQDNs in Network Rules are supported when set to true.
   */
  readonly requireProxyForNetworkRules?: boolean | any;
  /**
   * List of Custom DNS Servers.
   */
  readonly servers?: string[] | any;
}

/**
 * DscpConfiguration definition.
 */
export interface DscpConfiguration {
  /**
   * Destination IP ranges.
   */
  readonly destinationIpRanges?: QosIpRange[] | any;
  /**
   * Destination port ranges.
   */
  readonly destinationPortRanges?: QosPortRange[] | any;
  /**
   * List of markings to be used in the configuration.
   */
  readonly markings?: number[] | any;
  /**
   * RNM supported protocol types.
   */
  readonly protocol?:
    | 'DoNotUse'
    | 'Icmp'
    | 'Tcp'
    | 'Udp'
    | 'Gre'
    | 'Esp'
    | 'Ah'
    | 'Vxlan'
    | 'All'
    | any;
  /**
   * QoS object definitions
   */
  readonly qosDefinitionCollection?: QosDefinition[] | any;
  /**
   * Source IP ranges.
   */
  readonly sourceIpRanges?: QosIpRange[] | any;
  /**
   * Sources port ranges.
   */
  readonly sourcePortRanges?: QosPortRange[] | any;
}

/**
 * ExceptionEntry definition.
 */
export interface ExceptionEntry {
  /**
   * The managed rule sets that are associated with the exception.
   */
  readonly exceptionManagedRuleSets?: ExclusionManagedRuleSet[] | any;
  /**
   * The variable on which we evaluate the exception condition
   */
  readonly matchVariable?: 'RequestURI' | 'RemoteAddr' | 'RequestHeader' | any;
  /**
   * When the matchVariable points to a key-value pair (e.g, RequestHeader), this identifies the key.
   */
  readonly selector?: string;
  /**
   * When the matchVariable points to a key-value pair (e.g, RequestHeader), this operates on the selector
   */
  readonly selectorMatchOperator?: 'Equals' | 'Contains' | 'StartsWith' | 'EndsWith' | any;
  /**
   * Operates on the allowed values for the matchVariable
   */
  readonly valueMatchOperator?: 'Equals' | 'Contains' | 'StartsWith' | 'EndsWith' | 'IPMatch' | any;
  /**
   * Allowed values for the matchVariable
   */
  readonly values?: string[] | any;
}

/**
 * ExclusionManagedRule definition.
 */
export interface ExclusionManagedRule {
  /**
   * Identifier for the managed rule.
   */
  readonly ruleId?: string;
}

/**
 * ExclusionManagedRuleGroup definition.
 */
export interface ExclusionManagedRuleGroup {
  /**
   * The managed rule group for exclusion.
   */
  readonly ruleGroupName?: string;
  /**
   * List of rules that will be excluded. If none specified, all rules in the group will be excluded.
   */
  readonly rules?: ExclusionManagedRule[] | any;
}

/**
 * ExclusionManagedRuleSet definition.
 */
export interface ExclusionManagedRuleSet {
  /**
   * Defines the rule groups to apply to the rule set.
   */
  readonly ruleGroups?: ExclusionManagedRuleGroup[] | any;
  /**
   * Defines the rule set type to use.
   */
  readonly ruleSetType?: string;
  /**
   * Defines the version of the rule set to use.
   */
  readonly ruleSetVersion?: string;
}

/**
 * ExplicitProxy definition.
 */
export interface ExplicitProxy {
  /**
   * When set to true, explicit proxy mode is enabled.
   */
  readonly enableExplicitProxy?: boolean | any;
  /**
   * When set to true, pac file port and url needs to be provided.
   */
  readonly enablePacFile?: boolean | any;
  /**
   * Port number for explicit proxy http protocol, cannot be greater than 64000.
   */
  readonly httpPort?: number | any;
  /**
   * Port number for explicit proxy https protocol, cannot be greater than 64000.
   */
  readonly httpsPort?: number | any;
  /**
   * SAS URL for PAC file.
   */
  readonly pacFile?: string;
  /**
   * Port number for firewall to serve PAC file.
   */
  readonly pacFilePort?: number | any;
}

/**
 * ExpressRouteCircuitAuthorization definition.
 */
export interface ExpressRouteCircuitAuthorization {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit authorization.
   */
  readonly properties?: Authorization | any;
}

/**
 * ExpressRouteCircuitConnection definition.
 */
export interface ExpressRouteCircuitConnection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit connection.
   */
  readonly properties?: ExpressRouteCircuitConnection | any;
}

/**
 * ExpressRouteCircuitPeering definition.
 */
export interface ExpressRouteCircuitPeering {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit peering.
   */
  readonly properties?: ExpressRouteCircuitPeering | any;
}

/**
 * ExpressRouteCircuitPeeringConfig definition.
 */
export interface ExpressRouteCircuitPeeringConfig {
  /**
   * The communities of bgp peering. Specified for microsoft peering.
   */
  readonly advertisedCommunities?: string[] | any;
  /**
   * List of Prefix information required to perform validation.
   */
  readonly advertisedPublicPrefixInfo?: any;
  /**
   * The reference to AdvertisedPublicPrefixes.
   */
  readonly advertisedPublicPrefixes?: string[] | any;
  /**
   * The CustomerASN of the peering.
   */
  readonly customerASN?: number | any;
  /**
   * The legacy mode of the peering.
   */
  readonly legacyMode?: number | any;
  /**
   * The RoutingRegistryName of the configuration.
   */
  readonly routingRegistryName?: string;
}

/**
 * ExpressRouteCircuitPeeringId definition.
 */
export interface ExpressRouteCircuitPeeringId {
  /**
   * The ID of the ExpressRoute circuit peering.
   */
  readonly id?: string;
}

/**
 * ExpressRouteCircuit definition.
 */
export interface ExpressRouteCircuit {
  /**
   * Allow classic operations.
   */
  readonly allowClassicOperations?: boolean | any;
  /**
   * The authorizationKey.
   */
  readonly authorizationKey?: string;
  /**
   * The list of authorizations.
   */
  readonly authorizations?: ExpressRouteCircuitAuthorization[] | any;
  /**
   * The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
   */
  readonly bandwidthInGbps?: number | any;
  /**
   * The CircuitProvisioningState state of the resource.
   */
  readonly circuitProvisioningState?: string;
  /**
   * Flag denoting rate-limiting status of the ExpressRoute direct-port circuit.
   */
  readonly enableDirectPortRateLimit?: boolean | any;
  /**
   * The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
   */
  readonly expressRoutePort?: SubResource | any;
  /**
   * The GatewayManager Etag.
   */
  readonly gatewayManagerEtag?: string;
  /**
   * Flag denoting global reach status.
   */
  readonly globalReachEnabled?: boolean | any;
  /**
   * The list of peerings.
   */
  readonly peerings?: ExpressRouteCircuitPeering[] | any;
  /**
   * The ServiceKey.
   */
  readonly serviceKey?: string;
  /**
   * The ServiceProviderNotes.
   */
  readonly serviceProviderNotes?: string;
  /**
   * The ServiceProviderProperties.
   */
  readonly serviceProviderProperties?: any;
  /**
   * The ServiceProviderProvisioningState state of the resource.
   */
  readonly serviceProviderProvisioningState?:
    | 'NotProvisioned'
    | 'Provisioning'
    | 'Provisioned'
    | 'Deprovisioning'
    | any;
}

/**
 * ExpressRouteCircuitReference definition.
 */
export interface ExpressRouteCircuitReference {
  /**
   * Corresponding Express Route Circuit Id.
   */
  readonly id?: string;
}

/**
 * ExpressRouteCircuitServiceProviderProps definition.
 */
export interface ExpressRouteCircuitServiceProviderProps {
  /**
   * The BandwidthInMbps.
   */
  readonly bandwidthInMbps?: number | any;
  /**
   * The peering location.
   */
  readonly peeringLocation?: string;
  /**
   * The serviceProviderName.
   */
  readonly serviceProviderName?: string;
}

/**
 * ExpressRouteCircuitSku definition.
 */
export interface ExpressRouteCircuitSku {
  /**
   * The family of the SKU.
   */
  readonly family?: 'UnlimitedData' | 'MeteredData' | any;
  /**
   * The name of the SKU.
   */
  readonly name?: string;
  /**
   * The tier of the SKU.
   */
  readonly tier?: 'Standard' | 'Premium' | 'Basic' | 'Local' | any;
}

/**
 * ExpressRouteCircuitStats definition.
 */
export interface ExpressRouteCircuitStats {
  /**
   * The Primary BytesIn of the peering.
   */
  readonly primarybytesIn?: number | any;
  /**
   * The primary BytesOut of the peering.
   */
  readonly primarybytesOut?: number | any;
  /**
   * The secondary BytesIn of the peering.
   */
  readonly secondarybytesIn?: number | any;
  /**
   * The secondary BytesOut of the peering.
   */
  readonly secondarybytesOut?: number | any;
}

/**
 * ExpressRouteConnection definition.
 */
export interface ExpressRouteConnection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   */
  readonly name?: string;
  /**
   * Properties of the express route connection.
   */
  readonly properties?: any;
}

/**
 * ExpressRouteConnectionId definition.
 */
export interface ExpressRouteConnectionId {}

/**
 * ExpressRouteConnectionProps definition.
 */
export interface ExpressRouteConnectionProps {
  /**
   * Authorization key to establish the connection.
   */
  readonly authorizationKey?: string;
  /**
   * Enable internet security.
   */
  readonly enableInternetSecurity?: boolean | any;
  /**
   * Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
   */
  readonly enablePrivateLinkFastPath?: boolean | any;
  /**
   * The ExpressRoute circuit peering.
   */
  readonly expressRouteCircuitPeering?: ExpressRouteCircuitPeeringId | any;
  /**
   * Enable FastPath to vWan Firewall hub.
   */
  readonly expressRouteGatewayBypass?: boolean | any;
  /**
   * The Routing Configuration indicating the associated and propagated route tables on this connection.
   */
  readonly routingConfiguration?: RoutingConfiguration | any;
  /**
   * The routing weight associated to the connection.
   */
  readonly routingWeight?: number | any;
}

/**
 * ExpressRouteCrossConnectionPeering definition.
 */
export interface ExpressRouteCrossConnectionPeering {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the express route cross connection peering.
   */
  readonly properties?: any;
}

/**
 * ExpressRouteCrossConnectionPeeringProps definition.
 */
export interface ExpressRouteCrossConnectionPeeringProps {
  /**
   * The GatewayManager Etag.
   */
  readonly gatewayManagerEtag?: string;
  /**
   * The IPv6 peering configuration.
   */
  readonly ipv6PeeringConfig?: Ipv6ExpressRouteCircuitPeeringConfig | any;
  /**
   * The Microsoft peering configuration.
   */
  readonly microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig | any;
  /**
   * The peer ASN.
   */
  readonly peerASN?: number | any;
  /**
   * The peering type.
   */
  readonly peeringType?: 'AzurePublicPeering' | 'AzurePrivatePeering' | 'MicrosoftPeering' | any;
  /**
   * The primary address prefix.
   */
  readonly primaryPeerAddressPrefix?: string;
  /**
   * The secondary address prefix.
   */
  readonly secondaryPeerAddressPrefix?: string;
  /**
   * The shared key.
   */
  readonly sharedKey?: string;
  /**
   * The peering state.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
  /**
   * The VLAN ID.
   */
  readonly vlanId?: number | any;
}

/**
 * ExpressRouteCrossConnectionProps definition.
 */
export interface ExpressRouteCrossConnectionProps {
  /**
   * The ExpressRouteCircuit.
   */
  readonly expressRouteCircuit?: ExpressRouteCircuitReference | any;
  /**
   * The list of peerings.
   */
  readonly peerings?: ExpressRouteCrossConnectionPeering[] | any;
  /**
   * Additional read only notes set by the connectivity provider.
   */
  readonly serviceProviderNotes?: string;
  /**
   * The provisioning state of the circuit in the connectivity provider system.
   */
  readonly serviceProviderProvisioningState?:
    | 'NotProvisioned'
    | 'Provisioning'
    | 'Provisioned'
    | 'Deprovisioning'
    | any;
}

/**
 * ExpressRouteGatewayProps definition.
 */
export interface ExpressRouteGatewayProps {
  /**
   * Configures this gateway to accept traffic from non Virtual WAN networks.
   */
  readonly allowNonVirtualWanTraffic?: boolean | any;
  /**
   * Configuration for auto scaling.
   */
  readonly autoScaleConfiguration?: anyAutoScaleConfiguration | any;
  /**
   * List of ExpressRoute connections to the ExpressRoute gateway.
   */
  readonly expressRouteConnections?: ExpressRouteConnection[] | any;
  /**
   * The Virtual Hub where the ExpressRoute gateway is or will be deployed.
   */
  readonly virtualHub?: VirtualHubId | any;
}

/**
 * anyAutoScaleConfiguration definition.
 */
export interface anyAutoScaleConfiguration {
  /**
   * Minimum and maximum number of scale units to deploy.
   */
  readonly bounds?: anyAutoScaleConfigurationBounds | any;
}

/**
 * anyAutoScaleConfigurationBounds definition.
 */
export interface anyAutoScaleConfigurationBounds {
  /**
   * Maximum number of scale units deployed for ExpressRoute gateway.
   */
  readonly max?: number | any;
  /**
   * Minimum number of scale units deployed for ExpressRoute gateway.
   */
  readonly min?: number | any;
}

/**
 * ExpressRouteLink definition.
 */
export interface ExpressRouteLink {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Name of child port resource that is unique among child port resources of the parent.
   */
  readonly name?: string;
  /**
   * ExpressRouteLink properties.
   */
  readonly properties?: ExpressRouteLink | any;
}

/**
 * ExpressRouteLinkMacSecConfig definition.
 */
export interface ExpressRouteLinkMacSecConfig {
  /**
   * Keyvault Secret Identifier URL containing Mac security CAK key.
   */
  readonly cakSecretIdentifier?: string;
  /**
   * Mac security cipher.
   */
  readonly cipher?: 'GcmAes256' | 'GcmAes128' | 'GcmAesXpn128' | 'GcmAesXpn256' | any;
  /**
   * Keyvault Secret Identifier URL containing Mac security CKN key.
   */
  readonly cknSecretIdentifier?: string;
  /**
   * Sci mode enabled/disabled.
   */
  readonly sciState?: 'Disabled' | 'Enabled' | any;
}

/**
 * ExpressRoutePortAuthorization definition.
 */
export interface ExpressRoutePortAuthorization {}

/**
 * ExpressRoutePort definition.
 */
export interface ExpressRoutePort {
  /**
   * Bandwidth of procured ports in Gbps.
   */
  readonly bandwidthInGbps?: number | any;
  /**
   * The billing type of the ExpressRoutePort resource.
   */
  readonly billingType?: 'MeteredData' | 'UnlimitedData' | any;
  /**
   * Encapsulation method on physical ports.
   */
  readonly encapsulation?: 'Dot1Q' | 'QinQ' | any;
  /**
   * The set of physical links of the ExpressRoutePort resource.
   */
  readonly links?: ExpressRouteLink[] | any;
  /**
   * The name of the peering location that the ExpressRoutePort is mapped to physically.
   */
  readonly peeringLocation?: string;
}

/**
 * ExtendedLocation definition.
 */
export interface ExtendedLocation {
  /**
   * The name of the extended location.
   */
  readonly name?: string;
}

/**
 * FirewallPolicyCertificateAuthority definition.
 */
export interface FirewallPolicyCertificateAuthority {
  /**
   * Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
   */
  readonly keyVaultSecretId?: string;
  /**
   * Name of the CA certificate.
   */
  readonly name?: string;
}

/**
 * FirewallPolicyDraftProps definition.
 */
export interface FirewallPolicyDraftProps {
  /**
   * The parent firewall policy from which rules are inherited.
   */
  readonly basePolicy?: SubResource | any;
  /**
   * DNS Proxy Settings definition.
   */
  readonly dnsSettings?: DnsSettings | any;
  /**
   * Explicit Proxy Settings definition.
   */
  readonly explicitProxy?: ExplicitProxy | any;
  /**
   * Insights on Firewall Policy.
   */
  readonly insights?: FirewallPolicyInsights | any;
  /**
   * The configuration for Intrusion detection.
   */
  readonly intrusionDetection?: FirewallPolicyIntrusionDetection | any;
  /**
   * The private IP addresses/IP ranges to which traffic will not be SNAT.
   */
  readonly snat?: FirewallPolicySnat | any;
  /**
   * SQL Settings definition.
   */
  readonly sql?: FirewallPolicySQL | any;
  /**
   * The operation mode for Threat Intelligence.
   */
  readonly threatIntelMode?: 'Alert' | 'Deny' | 'Off' | any;
  /**
   * ThreatIntel Whitelist for Firewall Policy.
   */
  readonly threatIntelWhitelist?: FirewallPolicyThreatIntelWhitelist | any;
}

/**
 * FirewallPolicyFilterRuleCollectionAction definition.
 */
export interface FirewallPolicyFilterRuleCollectionAction {}

/**
 * FirewallPolicyHttpHeaderToInsert definition.
 */
export interface FirewallPolicyHttpHeaderToInsert {
  /**
   * Contains the name of the header
   */
  readonly headerName?: string;
  /**
   * Contains the value of the header
   */
  readonly headerValue?: string;
}

/**
 * FirewallPolicyInsights definition.
 */
export interface FirewallPolicyInsights {
  /**
   * A flag to indicate if the insights are enabled on the policy.
   */
  readonly isEnabled?: boolean | any;
  /**
   * Workspaces needed to configure the Firewall Policy Insights.
   */
  readonly logAnalyticsResources?: FirewallPolicyLogAnalyticsResources | any;
  /**
   * Number of days the insights should be enabled on the policy.
   */
  readonly retentionDays?: number | any;
}

/**
 * FirewallPolicyIntrusionDetection definition.
 */
export interface FirewallPolicyIntrusionDetection {
  /**
   * Intrusion detection configuration properties.
   */
  readonly configuration?: FirewallPolicyIntrusionDetectionConfiguration | any;
  /**
   * Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
   */
  readonly mode?: 'Off' | 'Alert' | 'Deny' | any;
  /**
   * IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
   */
  readonly profile?: 'Basic' | 'Standard' | 'Advanced' | 'Extended' | any;
}

/**
 * FirewallPolicyIntrusionDetectionBypassTrafficSpecifications definition.
 */
export interface FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
  /**
   * Description of the bypass traffic rule.
   */
  readonly description?: string;
  /**
   * List of destination IP addresses or ranges for this rule.
   */
  readonly destinationAddresses?: string[] | any;
  /**
   * List of destination IpGroups for this rule.
   */
  readonly destinationIpGroups?: string[] | any;
  /**
   * List of destination ports or ranges.
   */
  readonly destinationPorts?: string[] | any;
  /**
   * Name of the bypass traffic rule.
   */
  readonly name?: string;
  /**
   * The rule bypass protocol.
   */
  readonly protocol?: 'TCP' | 'UDP' | 'ICMP' | 'ANY' | any;
  /**
   * List of source IP addresses or ranges for this rule.
   */
  readonly sourceAddresses?: string[] | any;
  /**
   * List of source IpGroups for this rule.
   */
  readonly sourceIpGroups?: string[] | any;
}

/**
 * FirewallPolicyIntrusionDetectionConfiguration definition.
 */
export interface FirewallPolicyIntrusionDetectionConfiguration {
  /**
   * List of rules for traffic to bypass.
   */
  readonly bypassTrafficSettings?:
    | FirewallPolicyIntrusionDetectionBypassTrafficSpecifications[]
    | any;
  /**
   * IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
   */
  readonly privateRanges?: string[] | any;
  /**
   * List of specific signatures states.
   */
  readonly signatureOverrides?: FirewallPolicyIntrusionDetectionSignatureSpecification[] | any;
}

/**
 * FirewallPolicyIntrusionDetectionSignatureSpecification definition.
 */
export interface FirewallPolicyIntrusionDetectionSignatureSpecification {
  /**
   * Signature id.
   */
  readonly id?: string;
  /**
   * The signature state.
   */
  readonly mode?: 'Off' | 'Alert' | 'Deny' | any;
}

/**
 * FirewallPolicyLogAnalyticsResources definition.
 */
export interface FirewallPolicyLogAnalyticsResources {
  /**
   * The default workspace Id for Firewall Policy Insights.
   */
  readonly defaultWorkspaceId?: SubResource | any;
  /**
   * List of workspaces for Firewall Policy Insights.
   */
  readonly workspaces?: FirewallPolicyLogAnalyticsWorkspace[] | any;
}

/**
 * FirewallPolicyLogAnalyticsWorkspace definition.
 */
export interface FirewallPolicyLogAnalyticsWorkspace {
  /**
   * Region to configure the Workspace.
   */
  readonly region?: string;
  /**
   * The workspace Id for Firewall Policy Insights.
   */
  readonly workspaceId?: SubResource | any;
}

/**
 * FirewallPolicyNatRuleCollectionAction definition.
 */
export interface FirewallPolicyNatRuleCollectionAction {}

/**
 * FirewallPolicy definition.
 */
export interface FirewallPolicy {
  /**
   * The parent firewall policy from which rules are inherited.
   */
  readonly basePolicy?: SubResource | any;
  /**
   * DNS Proxy Settings definition.
   */
  readonly dnsSettings?: DnsSettings | any;
  /**
   * Explicit Proxy Settings definition.
   */
  readonly explicitProxy?: ExplicitProxy | any;
  /**
   * Insights on Firewall Policy.
   */
  readonly insights?: FirewallPolicyInsights | any;
  /**
   * The configuration for Intrusion detection.
   */
  readonly intrusionDetection?: FirewallPolicyIntrusionDetection | any;
  /**
   * The Firewall Policy SKU.
   */
  readonly sku?: FirewallPolicySku | any;
  /**
   * The private IP addresses/IP ranges to which traffic will not be SNAT.
   */
  readonly snat?: FirewallPolicySnat | any;
  /**
   * SQL Settings definition.
   */
  readonly sql?: FirewallPolicySQL | any;
  /**
   * The operation mode for Threat Intelligence.
   */
  readonly threatIntelMode?: 'Alert' | 'Deny' | 'Off' | any;
  /**
   * ThreatIntel Whitelist for Firewall Policy.
   */
  readonly threatIntelWhitelist?: FirewallPolicyThreatIntelWhitelist | any;
  /**
   * TLS Configuration definition.
   */
  readonly transportSecurity?: FirewallPolicyTransportSecurity | any;
}

/**
 * FirewallPolicyRuleApplicationProtocol definition.
 */
export interface FirewallPolicyRuleApplicationProtocol {
  /**
   * Port number for the protocol, cannot be greater than 64000.
   */
  readonly port?: number | any;
  /**
   * Protocol type.
   */
  readonly protocolType?: 'Http' | 'Https' | any;
}

/**
 * FirewallPolicyRuleCollectionGroupDraftProps definition.
 */
export interface FirewallPolicyRuleCollectionGroupDraftProps {
  /**
   * Priority of the Firewall Policy Rule Collection Group resource.
   */
  readonly priority?: number | any;
  /**
   * Group of Firewall Policy rule collections.
   */
  readonly ruleCollections?: any;
}

/**
 * FirewallPolicyRuleCollectionGroupProps definition.
 */
export interface FirewallPolicyRuleCollectionGroupProps {
  /**
   * Priority of the Firewall Policy Rule Collection Group resource.
   */
  readonly priority?: number | any;
  /**
   * Group of Firewall Policy rule collections.
   */
  readonly ruleCollections?: any;
}

/**
 * FirewallPolicySQL definition.
 */
export interface FirewallPolicySQL {
  /**
   * A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
   */
  readonly allowSqlRedirect?: boolean | any;
}

/**
 * FirewallPolicySku definition.
 */
export interface FirewallPolicySku {
  /**
   * Tier of Firewall Policy.
   */
  readonly tier?: 'Standard' | 'Premium' | 'Basic' | any;
}

/**
 * FirewallPolicySnat definition.
 */
export interface FirewallPolicySnat {
  /**
   * The operation mode for automatically learning private ranges to not be SNAT
   */
  readonly autoLearnPrivateRanges?: 'Enabled' | 'Disabled' | any;
  /**
   * List of private IP addresses/IP address ranges to not be SNAT.
   */
  readonly privateRanges?: string[] | any;
}

/**
 * FirewallPolicyThreatIntelWhitelist definition.
 */
export interface FirewallPolicyThreatIntelWhitelist {
  /**
   * List of FQDNs for the ThreatIntel Whitelist.
   */
  readonly fqdns?: string[] | any;
  /**
   * List of IP addresses for the ThreatIntel Whitelist.
   */
  readonly ipAddresses?: string[] | any;
}

/**
 * FirewallPolicyTransportSecurity definition.
 */
export interface FirewallPolicyTransportSecurity {
  /**
   * The CA used for intermediate CA generation.
   */
  readonly certificateAuthority?: FirewallPolicyCertificateAuthority | any;
}

/**
 * FlowLogFormatParameters definition.
 */
export interface FlowLogFormatParameters {
  /**
   * The version (revision) of the flow log.
   */
  readonly version?: number | any;
}

/**
 * FlowLog definition.
 */
export interface FlowLog {
  /**
   * Flag to enable/disable flow logging.
   */
  readonly enabled?: boolean | any;
  /**
   * Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.
   */
  readonly enabledFilteringCriteria?: string;
  /**
   * Parameters that define the configuration of traffic analytics.
   */
  readonly flowAnalyticsConfiguration?: any;
  /**
   * Parameters that define the flow log format.
   */
  readonly format?: FlowLogFormatParameters | any;
  /**
   * Parameters that define the retention policy for flow log.
   */
  readonly retentionPolicy?: RetentionPolicyParameters | any;
  /**
   * ID of the storage account which is used to store the flow log.
   */
  readonly storageId?: string;
  /**
   * ID of network security group to which flow log will be applied.
   */
  readonly targetResourceId?: string;
}

/**
 * FrontendIPConfiguration definition.
 */
export interface FrontendIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the load balancer probe.
   */
  readonly properties?: FrontendIPConfiguration | any;
  /**
   * A list of availability zones denoting the IP allocated for the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * GatewayCustomBgpIpAddressIpConfiguration definition.
 */
export interface GatewayCustomBgpIpAddressIpConfiguration {
  /**
   * The custom BgpPeeringAddress which belongs to IpconfigurationId.
   */
  readonly customBgpIpAddress?: string;
  /**
   * The IpconfigurationId of ipconfiguration which belongs to gateway.
   */
  readonly ipConfigurationId?: string;
}

/**
 * GatewayLoadBalancerTunnelInterface definition.
 */
export interface GatewayLoadBalancerTunnelInterface {
  /**
   * Identifier of gateway load balancer tunnel interface.
   */
  readonly identifier?: number | any;
  /**
   * Port of gateway load balancer tunnel interface.
   */
  readonly port?: number | any;
  /**
   * Protocol of gateway load balancer tunnel interface.
   */
  readonly protocol?: 'None' | 'Native' | 'VXLAN' | any;
}

/**
 * GroupByUserSession definition.
 */
export interface GroupByUserSession {
  /**
   * List of group by clause variables.
   */
  readonly groupByVariables?: GroupByVariable[] | any;
}

/**
 * GroupByVariable definition.
 */
export interface GroupByVariable {
  /**
   * User Session clause variable.
   */
  readonly variableName?:
    | 'ClientAddr'
    | 'GeoLocation'
    | 'None'
    | 'ClientAddrXFFHeader'
    | 'GeoLocationXFFHeader'
    | any;
}

/**
 * HeaderValueMatcher definition.
 */
export interface HeaderValueMatcher {
  /**
   * Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
   */
  readonly ignoreCase?: boolean | any;
  /**
   * Setting this value as truth will force to check the negation of the condition given by the user in the pattern field.
   */
  readonly negate?: boolean | any;
  /**
   * The pattern, either fixed string or regular expression, that evaluates if a header value should be selected for rewrite.
   */
  readonly pattern?: string;
}

/**
 * HttpHeader definition.
 */
export interface HttpHeader {
  /**
   * The name in HTTP header.
   */
  readonly name?: string;
  /**
   * The value in HTTP header.
   */
  readonly value?: string;
}

/**
 * Hub definition.
 */
export interface Hub {
  /**
   * Resource Id.
   */
  readonly resourceId?: string;
  /**
   * Resource Type.
   */
  readonly resourceType?: string;
}

/**
 * HubIPAddresses definition.
 */
export interface HubIPAddresses {
  /**
   * Private IP Address associated with azure firewall.
   */
  readonly privateIPAddress?: string;
  /**
   * Public IP addresses associated with azure firewall.
   */
  readonly publicIPs?: HubPublicIPAddresses | any;
}

/**
 * HubIPConfiguration definition.
 */
export interface HubIPConfiguration {
  /**
   * The private IP address of the IP configuration.
   */
  readonly privateIPAddress?: string;
  /**
   * The private IP address allocation method.
   */
  readonly privateIPAllocationMethod?: 'Static' | 'Dynamic' | any;
  /**
   * The reference to the public IP resource.
   */
  readonly publicIPAddress?: PublicIPAddress | any;
  /**
   * The reference to the subnet resource.
   */
  readonly subnet?: Subnet | any;
}

/**
 * HubPublicIPAddresses definition.
 */
export interface HubPublicIPAddresses {
  /**
   * The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
   */
  readonly addresses?: AzureFirewallPublicIPAddress[] | any;
  /**
   * The number of Public IP addresses associated with azure firewall.
   */
  readonly count?: number | any;
}

/**
 * HubRoute definition.
 */
export interface HubRoute {
  /**
   * The type of destinations (eg: CIDR, ResourceId, Service).
   */
  readonly destinationType?: string;
  /**
   * List of all destinations.
   */
  readonly destinations?: string[] | any;
  /**
   * The name of the Route that is unique within a RouteTable. This name can be used to access this route.
   */
  readonly name?: string;
  /**
   * NextHop resource ID.
   */
  readonly nextHop?: string;
  /**
   * The type of next hop (eg: ResourceId).
   */
  readonly nextHopType?: string;
}

/**
 * HubRouteTableProps definition.
 */
export interface HubRouteTableProps {
  /**
   * List of labels associated with this route table.
   */
  readonly labels?: string[] | any;
  /**
   * List of all routes.
   */
  readonly routes?: HubRoute[] | any;
}

/**
 * HubVirtualNetworkConnectionProps definition.
 */
export interface HubVirtualNetworkConnectionProps {
  /**
   * Deprecated: VirtualHub to RemoteVnet transit to enabled or not.
   */
  readonly allowHubToRemoteVnetTransit?: boolean | any;
  /**
   * Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.
   */
  readonly allowRemoteVnetToUseHubVnetGateways?: boolean | any;
  /**
   * Enable internet security.
   */
  readonly enableInternetSecurity?: boolean | any;
  /**
   * Reference to the remote virtual network.
   */
  readonly remoteVirtualNetwork?: SubResource | any;
  /**
   * The Routing Configuration indicating the associated and propagated route tables on this connection.
   */
  readonly routingConfiguration?: RoutingConfiguration | any;
}

/**
 * IPConfigurationBgpPeeringAddress definition.
 */
export interface IPConfigurationBgpPeeringAddress {
  /**
   * The list of custom BGP peering addresses which belong to IP configuration.
   */
  readonly customBgpIpAddresses?: string[] | any;
  /**
   * The ID of IP configuration which belongs to gateway.
   */
  readonly ipconfigurationId?: string;
}

/**
 * IPConfigurationProfile definition.
 */
export interface IPConfigurationProfile {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the IP configuration profile.
   */
  readonly properties?: IPConfigurationProfile | any;
}

/**
 * IPRule definition.
 */
export interface IPRule {
  /**
   * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
   */
  readonly addressPrefix?: string;
}

/**
 * IPTraffic definition.
 */
export interface IPTraffic {
  /**
   * List of destination IP addresses of the traffic..
   */
  readonly destinationIps?: string[] | any;
  /**
   * The destination ports of the traffic.
   */
  readonly destinationPorts?: string[] | any;
  /**
   * Array of NetworkProtocol
   */
  readonly protocols?: 'Any' | 'TCP' | 'UDP' | 'ICMP'[] | any;
  /**
   * List of source IP addresses of the traffic..
   */
  readonly sourceIps?: string[] | any;
  /**
   * The source ports of the traffic.
   */
  readonly sourcePorts?: string[] | any;
}

/**
 * InboundNatPool definition.
 */
export interface InboundNatPool {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer inbound nat pool.
   */
  readonly properties?: InboundNatPool | any;
}

/**
 * InboundNatRule definition.
 */
export interface InboundNatRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer inbound NAT rule.
   */
  readonly properties?: InboundNatRule | any;
}

/**
 * InboundSecurityRuleProps definition.
 */
export interface InboundSecurityRuleProps {
  /**
   * Rule Type. This should be either AutoExpire or Permanent. Auto Expire Rule only creates NSG rules. Permanent Rule creates NSG rule and SLB LB Rule.
   */
  readonly ruleType?: 'AutoExpire' | 'Permanent' | any;
  /**
   * List of allowed rules.
   */
  readonly rules?: InboundSecurityRules[] | any;
}

/**
 * InboundSecurityRules definition.
 */
export interface InboundSecurityRules {
  /**
   * Public IP name in case of Permanent Rule type & Interface Name in case of Auto Expire Rule type
   */
  readonly appliesOn?: string[] | any;
  /**
   * NVA port ranges to be opened up. One needs to provide specific ports.
   */
  readonly destinationPortRange?: number | any;
  /**
   * NVA port ranges to be opened up. One can provide a range of ports. Allowed port value between 0 and 65535.
   */
  readonly destinationPortRanges?: string[] | any;
  /**
   * Name of the rule.
   */
  readonly name?: string;
  /**
   * Protocol. This should be either TCP or UDP.
   */
  readonly protocol?: 'TCP' | 'UDP' | any;
  /**
   * The CIDR or source IP range.
   */
  readonly sourceAddressPrefix?: string;
}

/**
 * InternetIngressPublicIpsProps definition.
 */
export interface InternetIngressPublicIpsProps {
  /**
   * Resource Uri of Public Ip
   */
  readonly id?: string;
}

/**
 * IpAllocation definition.
 */
export interface IpAllocation {
  /**
   * IpAllocation tags.
   */
  readonly allocationTags?: Record<string, string> | any;
  /**
   * The IPAM allocation ID.
   */
  readonly ipamAllocationId?: string;
  /**
   * The address prefix for the IpAllocation.
   */
  readonly prefix?: string;
  /**
   * The address prefix length for the IpAllocation.
   */
  readonly prefixLength?: number | any;
  /**
   * The address prefix Type for the IpAllocation.
   */
  readonly prefixType?: 'IPv4' | 'IPv6' | any;
}

/**
 * IpGroup definition.
 */
export interface IpGroup {
  /**
   * IpAddresses/IpAddressPrefixes in the IpGroups resource.
   */
  readonly ipAddresses?: string[] | any;
}

/**
 * IpTag definition.
 */
export interface IpTag {
  /**
   * The IP tag type. Example: FirstPartyUsage.
   */
  readonly ipTagType?: string;
  /**
   * The value of the IP tag associated with the public IP. Example: SQL.
   */
  readonly tag?: string;
}

/**
 * IpamPoolPrefixAllocation definition.
 */
export interface IpamPoolPrefixAllocation {
  /**
   * Number of IP addresses to allocate.
   */
  readonly numberOfIpAddresses?: string;
  /**
   * pool
   */
  readonly pool?: IpamPoolPrefixAllocationPool | any;
}

/**
 * IpamPoolPrefixAllocationPool definition.
 */
export interface IpamPoolPrefixAllocationPool {
  /**
   * Resource id of the associated Azure IpamPool resource.
   */
  readonly id?: string;
}

/**
 * IpamPoolProps definition.
 */
export interface IpamPoolProps {
  /**
   * List of IP address prefixes of the resource.
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * description
   */
  readonly description?: string;
  /**
   * String representing a friendly name for the resource.
   */
  readonly displayName?: string;
  /**
   * String representing parent IpamPool resource name. If empty the IpamPool will be a root pool.
   */
  readonly parentPoolName?: string;
  /**
   * Provisioning states of a resource.
   */
  readonly provisioningState?:
    | 'Failed'
    | 'Succeeded'
    | 'Canceled'
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | any;
}

/**
 * IpsecPolicy definition.
 */
export interface IpsecPolicy {
  /**
   * The DH Group used in IKE Phase 1 for initial SA.
   */
  readonly dhGroup?:
    | 'None'
    | 'DHGroup1'
    | 'DHGroup2'
    | 'DHGroup14'
    | 'DHGroup2048'
    | 'ECP256'
    | 'ECP384'
    | 'DHGroup24'
    | any;
  /**
   * The IKE encryption algorithm (IKE phase 2).
   */
  readonly ikeEncryption?:
    | 'DES'
    | 'DES3'
    | 'AES128'
    | 'AES192'
    | 'AES256'
    | 'GCMAES256'
    | 'GCMAES128'
    | any;
  /**
   * The IKE integrity algorithm (IKE phase 2).
   */
  readonly ikeIntegrity?: 'MD5' | 'SHA1' | 'SHA256' | 'SHA384' | 'GCMAES256' | 'GCMAES128' | any;
  /**
   * The IPSec encryption algorithm (IKE phase 1).
   */
  readonly ipsecEncryption?:
    | 'None'
    | 'DES'
    | 'DES3'
    | 'AES128'
    | 'AES192'
    | 'AES256'
    | 'GCMAES128'
    | 'GCMAES192'
    | 'GCMAES256'
    | any;
  /**
   * The IPSec integrity algorithm (IKE phase 1).
   */
  readonly ipsecIntegrity?:
    | 'MD5'
    | 'SHA1'
    | 'SHA256'
    | 'GCMAES128'
    | 'GCMAES192'
    | 'GCMAES256'
    | any;
  /**
   * The Pfs Group used in IKE Phase 2 for new child SA.
   */
  readonly pfsGroup?:
    | 'None'
    | 'PFS1'
    | 'PFS2'
    | 'PFS2048'
    | 'ECP256'
    | 'ECP384'
    | 'PFS24'
    | 'PFS14'
    | 'PFSMM'
    | any;
  /**
   * The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
   */
  readonly saDataSizeKilobytes?: number | any;
  /**
   * The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
   */
  readonly saLifeTimeSeconds?: number | any;
}

/**
 * Ipv6CircuitConnectionConfig definition.
 */
export interface Ipv6CircuitConnectionConfig {
  /**
   * /125 IP address space to carve out customer addresses for global reach.
   */
  readonly addressPrefix?: string;
}

/**
 * Ipv6ExpressRouteCircuitPeeringConfig definition.
 */
export interface Ipv6ExpressRouteCircuitPeeringConfig {
  /**
   * The Microsoft peering configuration.
   */
  readonly microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig | any;
  /**
   * The primary address prefix.
   */
  readonly primaryPeerAddressPrefix?: string;
  /**
   * The reference to the RouteFilter resource.
   */
  readonly routeFilter?: SubResource | any;
  /**
   * The secondary address prefix.
   */
  readonly secondaryPeerAddressPrefix?: string;
  /**
   * The state of peering.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
}

/**
 * LoadBalancerBackendAddress definition.
 */
export interface LoadBalancerBackendAddress {
  /**
   * Name of the backend address.
   */
  readonly name?: string;
  /**
   * Properties of load balancer backend address pool.
   */
  readonly properties?: LoadBalancerBackendAddress | any;
}

/**
 * LoadBalancer definition.
 */
export interface LoadBalancer {
  /**
   * Collection of backend address pools used by a load balancer.
   */
  readonly backendAddressPools?: BackendAddressPool[] | any;
  /**
   * Object representing the frontend IPs to be used for the load balancer.
   */
  readonly frontendIPConfigurations?: FrontendIPConfiguration[] | any;
  /**
   * Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
   */
  readonly inboundNatPools?: InboundNatPool[] | any;
  /**
   * Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
   */
  readonly inboundNatRules?: InboundNatRule[] | any;
  /**
   * Object collection representing the load balancing rules Gets the provisioning.
   */
  readonly loadBalancingRules?: LoadBalancingRule[] | any;
  /**
   * The outbound rules.
   */
  readonly outboundRules?: OutboundRule[] | any;
  /**
   * Collection of probe objects used in the load balancer.
   */
  readonly probes?: Probe[] | any;
}

/**
 * LoadBalancerSku definition.
 */
export interface LoadBalancerSku {
  /**
   * Name of a load balancer SKU.
   */
  readonly name?: 'Basic' | 'Standard' | 'Gateway' | any;
  /**
   * Tier of a load balancer SKU.
   */
  readonly tier?: 'Regional' | 'Global' | any;
}

/**
 * LoadBalancingRule definition.
 */
export interface LoadBalancingRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer load balancing rule.
   */
  readonly properties?: LoadBalancingRule | any;
}

/**
 * LocalNetworkGateway definition.
 */
export interface LocalNetworkGateway {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the local network gateway.
   */
  readonly properties?: LocalNetworkGateway | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * ManagedRuleGroupOverride definition.
 */
export interface ManagedRuleGroupOverride {
  /**
   * The managed rule group to override.
   */
  readonly ruleGroupName?: string;
  /**
   * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
   */
  readonly rules?: ManagedRuleOverride[] | any;
}

/**
 * ManagedRuleOverride definition.
 */
export interface ManagedRuleOverride {
  /**
   * Describes the override action to be applied when rule matches.
   */
  readonly action?: 'AnomalyScoring' | 'Allow' | 'Block' | 'Log' | 'JSChallenge' | any;
  /**
   * Identifier for the managed rule.
   */
  readonly ruleId?: string;
  /**
   * Describes the override sensitivity to be applied when rule matches.
   */
  readonly sensitivity?: 'None' | 'Low' | 'Medium' | 'High' | any;
  /**
   * The state of the managed rule. Defaults to Disabled if not specified.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
}

/**
 * ManagedRuleSet definition.
 */
export interface ManagedRuleSet {
  /**
   * Defines the rule group overrides to apply to the rule set.
   */
  readonly ruleGroupOverrides?: ManagedRuleGroupOverride[] | any;
  /**
   * Defines the rule set type to use.
   */
  readonly ruleSetType?: string;
  /**
   * Defines the version of the rule set to use.
   */
  readonly ruleSetVersion?: string;
}

/**
 * ManagedRulesDefinition definition.
 */
export interface ManagedRulesDefinition {
  /**
   * The exceptions that are applied on the policy.
   */
  readonly exceptions?: ExceptionEntry[] | any;
  /**
   * The Exclusions that are applied on the policy.
   */
  readonly exclusions?: OwaspCrsExclusionEntry[] | any;
  /**
   * The managed rule sets that are associated with the policy.
   */
  readonly managedRuleSets?: ManagedRuleSet[] | any;
}

/**
 * ManagedServiceIdentity definition.
 */
export interface ManagedServiceIdentity {
  /**
   * The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  readonly userAssignedIdentities?:
    | Record<
        string,
        Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties
      >
    | any;
}

/**
 * MatchCondition definition.
 */
export interface MatchCondition {
  /**
   * Match value.
   */
  readonly matchValues?: string[] | any;
  /**
   * List of match variables.
   */
  readonly matchVariables?: MatchVariable[] | any;
  /**
   * Whether this is negate condition or not.
   */
  readonly negationConditon?: boolean | any;
  /**
   * The operator to be matched.
   */
  readonly operator?:
    | 'IPMatch'
    | 'Equal'
    | 'Contains'
    | 'LessThan'
    | 'GreaterThan'
    | 'LessThanOrEqual'
    | 'GreaterThanOrEqual'
    | 'BeginsWith'
    | 'EndsWith'
    | 'Regex'
    | 'GeoMatch'
    | 'Any'
    | any;
  /**
   * List of transforms.
   */
  readonly transforms?:
    | 'Uppercase'
    | 'Lowercase'
    | 'Trim'
    | 'UrlDecode'
    | 'UrlEncode'
    | 'RemoveNulls'
    | 'HtmlEntityDecode'[]
    | any;
}

/**
 * MatchVariable definition.
 */
export interface MatchVariable {
  /**
   * The selector of match variable.
   */
  readonly selector?: string;
  /**
   * Match Variable.
   */
  readonly variableName?:
    | 'RemoteAddr'
    | 'RequestMethod'
    | 'QueryString'
    | 'PostArgs'
    | 'RequestUri'
    | 'RequestHeaders'
    | 'RequestBody'
    | 'RequestCookies'
    | any;
}

/**
 * NatGateway definition.
 */
export interface NatGateway {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Nat Gateway properties.
   */
  readonly properties?: NatGateway | any;
  /**
   * The nat gateway SKU.
   */
  readonly sku?: NatGatewaySku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the zone in which Nat Gateway should be deployed.
   */
  readonly zones?: string[] | any;
}

/**
 * NatGatewaySku definition.
 */
export interface NatGatewaySku {
  /**
   * Name of Nat Gateway SKU.
   */
  readonly name?: 'Standard' | 'StandardV2' | any;
}

/**
 * NetworkGroupProps definition.
 */
export interface NetworkGroupProps {
  /**
   * A description of the network group.
   */
  readonly description?: string;
  /**
   * The type of the group member.
   */
  readonly memberType?: 'VirtualNetwork' | 'Subnet' | any;
}

/**
 * NetworkInterfaceDnsSettings definition.
 */
export interface NetworkInterfaceDnsSettings {
  /**
   * List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
   */
  readonly dnsServers?: string[] | any;
  /**
   * Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
   */
  readonly internalDnsNameLabel?: string;
}

/**
 * NetworkInterfaceIPConfiguration definition.
 */
export interface NetworkInterfaceIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Network interface IP configuration properties.
   */
  readonly properties?: NetworkInterfaceIPConfiguration | any;
}

/**
 * NetworkInterface definition.
 */
export interface NetworkInterface {
  /**
   * Auxiliary mode of Network Interface resource.
   */
  readonly auxiliaryMode?: 'None' | 'MaxConnections' | 'Floating' | 'AcceleratedConnections' | any;
  /**
   * Auxiliary sku of Network Interface resource.
   */
  readonly auxiliarySku?: 'None' | 'A1' | 'A2' | 'A4' | 'A8' | any;
  /**
   * Indicates whether to disable tcp state tracking.
   */
  readonly disableTcpStateTracking?: boolean | any;
  /**
   * The DNS settings in network interface.
   */
  readonly dnsSettings?: NetworkInterfaceDnsSettings | any;
  /**
   * If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.
   */
  readonly enableAcceleratedNetworking?: boolean | any;
  /**
   * Indicates whether IP forwarding is enabled on this network interface.
   */
  readonly enableIPForwarding?: boolean | any;
  /**
   * A list of IPConfigurations of the network interface.
   */
  readonly ipConfigurations?: NetworkInterfaceIPConfiguration[] | any;
  /**
   * Migration phase of Network Interface resource.
   */
  readonly migrationPhase?: 'None' | 'Prepare' | 'Commit' | 'Abort' | 'Committed' | any;
  /**
   * The reference to the NetworkSecurityGroup resource.
   */
  readonly networkSecurityGroup?: NetworkSecurityGroup | any;
  /**
   * Type of Network Interface resource.
   */
  readonly nicType?: 'Standard' | 'Elastic' | any;
  /**
   * Privatelinkservice of the network interface resource.
   */
  readonly privateLinkService?: PrivateLinkService | any;
  /**
   * WorkloadType of the NetworkInterface for BareMetal resources
   */
  readonly workloadType?: string;
}

/**
 * NetworkInterfaceTapConfiguration definition.
 */
export interface NetworkInterfaceTapConfiguration {
  /**
   * The reference to the Virtual Network Tap resource.
   */
  readonly virtualNetworkTap?: VirtualNetworkTap | any;
}

/**
 * NetworkManagerConnectionProps definition.
 */
export interface NetworkManagerConnectionProps {
  /**
   * A description of the network manager connection.
   */
  readonly description?: string;
  /**
   * Network Manager Id.
   */
  readonly networkManagerId?: string;
}

/**
 * NetworkManagerProps definition.
 */
export interface NetworkManagerProps {
  /**
   * A description of the network manager.
   */
  readonly description?: string;
  /**
   * Scope Access.
   */
  readonly networkManagerScopeAccesses?:
    | 'SecurityAdmin'
    | 'Connectivity'
    | 'SecurityUser'
    | 'Routing'[]
    | any;
  /**
   * Scope of Network Manager.
   */
  readonly networkManagerScopes?: anyNetworkManagerScopes | any;
}

/**
 * anyNetworkManagerScopes definition.
 */
export interface anyNetworkManagerScopes {
  /**
   * List of management groups.
   */
  readonly managementGroups?: string[] | any;
  /**
   * List of subscriptions.
   */
  readonly subscriptions?: string[] | any;
}

/**
 * NetworkManagerSecurityGroupItem definition.
 */
export interface NetworkManagerSecurityGroupItem {
  /**
   * Network manager group Id.
   */
  readonly networkGroupId?: string;
}

/**
 * NetworkProfile definition.
 */
export interface NetworkProfile {
  /**
   * List of chid container network interface configurations.
   */
  readonly containerNetworkInterfaceConfigurations?: ContainerNetworkInterfaceConfiguration[] | any;
}

/**
 * NetworkSecurityGroup definition.
 */
export interface NetworkSecurityGroup {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the network security group.
   */
  readonly properties?: NetworkSecurityGroup | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * NetworkSecurityPerimeterProps definition.
 */
export interface NetworkSecurityPerimeterProps {}

/**
 * NetworkVirtualApplianceConnectionProps definition.
 */
export interface NetworkVirtualApplianceConnectionProps {
  /**
   * Network Virtual Appliance ASN.
   */
  readonly asn?: number | any;
  /**
   * List of bgpPeerAddresses for the NVA instances
   */
  readonly bgpPeerAddress?: string[] | any;
  /**
   * Enable internet security.
   */
  readonly enableInternetSecurity?: boolean | any;
  /**
   * The name of the resource.
   */
  readonly name?: string;
  /**
   * The Routing Configuration indicating the associated and propagated route tables on this connection.
   */
  readonly routingConfiguration?: RoutingConfiguration | any;
  /**
   * Unique identifier for the connection.
   */
  readonly tunnelIdentifier?: number | any;
}

/**
 * NetworkVirtualAppliance definition.
 */
export interface NetworkVirtualAppliance {
  /**
   * Details required for Additional Network Interface.
   */
  readonly additionalNics?: any;
  /**
   * BootStrapConfigurationBlobs storage URLs.
   */
  readonly bootStrapConfigurationBlobs?: string[] | any;
  /**
   * CloudInitConfiguration string in plain text.
   */
  readonly cloudInitConfiguration?: string;
  /**
   * CloudInitConfigurationBlob storage URLs.
   */
  readonly cloudInitConfigurationBlobs?: string[] | any;
  /**
   * The delegation for the Virtual Appliance
   */
  readonly delegation?: any;
  /**
   * List of Resource Uri of Public IPs for Internet Ingress Scenario.
   */
  readonly internetIngressPublicIps?: any;
  /**
   * Network Profile containing configurations for Public and Private NIC.
   */
  readonly networkProfile?: NetworkVirtualAppliancePropertiesFormatNetworkProfile | any;
  /**
   * Network Virtual Appliance SKU.
   */
  readonly nvaSku?: any;
  /**
   * The delegation for the Virtual Appliance
   */
  readonly partnerManagedResource?: any;
  /**
   * Public key for SSH login.
   */
  readonly sshPublicKey?: string;
  /**
   * VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported.
   */
  readonly virtualApplianceAsn?: number | any;
  /**
   * The Virtual Hub where Network Virtual Appliance is being deployed.
   */
  readonly virtualHub?: SubResource | any;
}

/**
 * NetworkVirtualAppliancePropertiesFormatNetworkProfile definition.
 */
export interface NetworkVirtualAppliancePropertiesFormatNetworkProfile {
  /**
   * Array of VirtualApplianceNetworkInterfaceConfiguration
   */
  readonly networkInterfaceConfigurations?: VirtualApplianceNetworkInterfaceConfiguration[] | any;
}

/**
 * NetworkWatcher definition.
 */
export interface NetworkWatcher {}

/**
 * NspAccessRuleProps definition.
 */
export interface NspAccessRuleProps {
  /**
   * Inbound address prefixes (IPv4/IPv6)
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * Direction that specifies whether the access rules is inbound/outbound.
   */
  readonly direction?: 'Inbound' | 'Outbound' | any;
  /**
   * Outbound rules in email address format. This access rule type is currently unavailable for use.
   */
  readonly emailAddresses?: string[] | any;
  /**
   * Outbound rules in fully qualified domain name format.
   */
  readonly fullyQualifiedDomainNames?: string[] | any;
  /**
   * Outbound rules in phone number format. This access rule type is currently unavailable for use.
   */
  readonly phoneNumbers?: string[] | any;
  /**
   * Inbound rules of type service tag. This access rule type is currently unavailable for use.
   */
  readonly serviceTags?: string[] | any;
  /**
   * List of subscription ids
   */
  readonly subscriptions?: SubscriptionId[] | any;
}

/**
 * NspAssociationProps definition.
 */
export interface NspAssociationProps {
  /**
   * Access mode on the association.
   */
  readonly accessMode?: 'Learning' | 'Enforced' | 'Audit' | any;
  /**
   * The PaaS resource to be associated.
   */
  readonly privateLinkResource?: SubResource | any;
  /**
   * Profile id to which the PaaS resource is associated.
   */
  readonly profile?: SubResource | any;
}

/**
 * NspLinkProps definition.
 */
export interface NspLinkProps {
  /**
   * Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
   */
  readonly autoApprovedRemotePerimeterResourceId?: string;
  /**
   * A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
   */
  readonly description?: string;
  /**
   * Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
   */
  readonly localInboundProfiles?: string[] | any;
  /**
   * Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
   */
  readonly remoteInboundProfiles?: string[] | any;
}

/**
 * NspLoggingConfigurationProps definition.
 */
export interface NspLoggingConfigurationProps {
  /**
   * The log categories to enable in the NSP logging configuration.
   */
  readonly enabledLogCategories?: string[] | any;
  /**
   * The version of the NSP logging configuration.
   */
  readonly version?: string;
}

/**
 * NspProfileProps definition.
 */
export interface NspProfileProps {}

/**
 * O365BreakOutCategoryPolicies definition.
 */
export interface O365BreakOutCategoryPolicies {
  /**
   * Flag to control allow category.
   */
  readonly allow?: boolean | any;
  /**
   * Flag to control default category.
   */
  readonly default?: boolean | any;
  /**
   * Flag to control optimize category.
   */
  readonly optimize?: boolean | any;
}

/**
 * O365PolicyProps definition.
 */
export interface O365PolicyProps {
  /**
   * Office365 breakout categories.
   */
  readonly breakOutCategories?: O365BreakOutCategoryPolicies | any;
}

/**
 * Office365PolicyProps definition.
 */
export interface Office365PolicyProps {
  /**
   * Office 365 breakout categories.
   */
  readonly breakOutCategories?: BreakOutCategoryPolicies | any;
}

/**
 * OutboundRule definition.
 */
export interface OutboundRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer outbound rule.
   */
  readonly properties?: OutboundRule | any;
}

/**
 * OwaspCrsExclusionEntry definition.
 */
export interface OwaspCrsExclusionEntry {
  /**
   * The managed rule sets that are associated with the exclusion.
   */
  readonly exclusionManagedRuleSets?: ExclusionManagedRuleSet[] | any;
  /**
   * The variable to be excluded.
   */
  readonly matchVariable?:
    | 'RequestHeaderNames'
    | 'RequestCookieNames'
    | 'RequestArgNames'
    | 'RequestHeaderKeys'
    | 'RequestHeaderValues'
    | 'RequestCookieKeys'
    | 'RequestCookieValues'
    | 'RequestArgKeys'
    | 'RequestArgValues'
    | any;
  /**
   * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
   */
  readonly selector?: string;
  /**
   * When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
   */
  readonly selectorMatchOperator?:
    | 'Equals'
    | 'Contains'
    | 'StartsWith'
    | 'EndsWith'
    | 'EqualsAny'
    | any;
}

/**
 * P2SConnectionConfiguration definition.
 */
export interface P2SConnectionConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the P2S connection configuration.
   */
  readonly properties?: any;
}

/**
 * P2SConnectionConfigurationProps definition.
 */
export interface P2SConnectionConfigurationProps {
  /**
   * List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
   */
  readonly configurationPolicyGroupAssociations?: SubResource[] | any;
  /**
   * Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
   */
  readonly enableInternetSecurity?: boolean | any;
  /**
   * The Routing Configuration indicating the associated and propagated route tables on this connection.
   */
  readonly routingConfiguration?: RoutingConfiguration | any;
  /**
   * The reference to the address space resource which represents Address space for P2S VpnClient.
   */
  readonly vpnClientAddressPool?: AddressSpace | any;
}

/**
 * P2SVpnGatewayProps definition.
 */
export interface P2SVpnGatewayProps {
  /**
   * List of all customer specified DNS servers IP addresses.
   */
  readonly customDnsServers?: string[] | any;
  /**
   * Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
   */
  readonly isRoutingPreferenceInternet?: boolean | any;
  /**
   * List of all p2s connection configurations of the gateway.
   */
  readonly p2SConnectionConfigurations?: P2SConnectionConfiguration[] | any;
  /**
   * The VirtualHub to which the gateway belongs.
   */
  readonly virtualHub?: SubResource | any;
  /**
   * The scale unit for this p2s vpn gateway.
   */
  readonly vpnGatewayScaleUnit?: number | any;
  /**
   * The VpnServerConfiguration to which the p2sVpnGateway is attached to.
   */
  readonly vpnServerConfiguration?: SubResource | any;
}

/**
 * PacketCaptureFilter definition.
 */
export interface PacketCaptureFilter {
  /**
   * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
   */
  readonly localIPAddress?: string;
  /**
   * Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
   */
  readonly localPort?: string;
  /**
   * Protocol to be filtered on.
   */
  readonly protocol?: 'TCP' | 'UDP' | 'Any' | any;
  /**
   * Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
   */
  readonly remoteIPAddress?: string;
  /**
   * Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
   */
  readonly remotePort?: string;
}

/**
 * PacketCaptureMachineScope definition.
 */
export interface PacketCaptureMachineScope {
  /**
   * List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
   */
  readonly exclude?: string[] | any;
  /**
   * List of AzureVMSS instances to run packet capture on.
   */
  readonly include?: string[] | any;
}

/**
 * PacketCaptureParameters definition.
 */
export interface PacketCaptureParameters {
  /**
   * Number of bytes captured per packet, the remaining bytes are truncated.
   */
  readonly bytesToCapturePerPacket?: number | any;
  /**
   * The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values.
   */
  readonly captureSettings?: PacketCaptureSettings | any;
  /**
   * This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'.
   */
  readonly continuousCapture?: boolean | any;
  /**
   * A list of packet capture filters.
   */
  readonly filters?: PacketCaptureFilter[] | any;
  /**
   * A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
   */
  readonly scope?: PacketCaptureMachineScope | any;
  /**
   * The storage location for a packet capture session.
   */
  readonly storageLocation?: PacketCaptureStorageLocation | any;
  /**
   * The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.
   */
  readonly target?: string;
  /**
   * Target type of the resource provided.
   */
  readonly targetType?: 'AzureVM' | 'AzureVMSS' | any;
  /**
   * Maximum duration of the capture session in seconds.
   */
  readonly timeLimitInSeconds?: number | any;
  /**
   * Maximum size of the capture output.
   */
  readonly totalBytesPerSession?: number | any;
}

/**
 * PacketCaptureSettings definition.
 */
export interface PacketCaptureSettings {
  /**
   * Number of file count. Default value of count is 10 and maximum number is 10000.
   */
  readonly fileCount?: number | any;
  /**
   * Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB).
   */
  readonly fileSizeInBytes?: number | any;
  /**
   * Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day).
   */
  readonly sessionTimeLimitInSeconds?: number | any;
}

/**
 * PacketCaptureStorageLocation definition.
 */
export interface PacketCaptureStorageLocation {
  /**
   * This path is invalid if 'Continuous Capture' is provided with 'true' or 'false'. A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
   */
  readonly filePath?: string;
  /**
   * This path is valid if 'Continuous Capture' is provided with 'true' or 'false' and required if no storage ID is provided, otherwise optional. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures.
   */
  readonly localPath?: string;
  /**
   * The ID of the storage account to save the packet capture session. Required if no localPath or filePath is provided.
   */
  readonly storageId?: string;
  /**
   * The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
   */
  readonly storagePath?: string;
}

/**
 * Parameter definition.
 */
export interface Parameter {
  /**
   * List of AS paths.
   */
  readonly asPath?: string[] | any;
  /**
   * List of BGP communities.
   */
  readonly community?: string[] | any;
  /**
   * List of route prefixes.
   */
  readonly routePrefix?: string[] | any;
}

/**
 * PartnerManagedResourceProps definition.
 */
export interface PartnerManagedResourceProps {}

/**
 * PolicySettings definition.
 */
export interface PolicySettings {
  /**
   * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
   */
  readonly customBlockResponseBody?: string | any;
  /**
   * If the action type is block, customer can override the response status code.
   */
  readonly customBlockResponseStatusCode?: number | any;
  /**
   * Whether allow WAF to enforce file upload limits.
   */
  readonly fileUploadEnforcement?: boolean | any;
  /**
   * Maximum file upload size in Mb for WAF.
   */
  readonly fileUploadLimitInMb?: number | any;
  /**
   * Web Application Firewall JavaScript Challenge Cookie Expiration time in minutes.
   */
  readonly jsChallengeCookieExpirationInMins?: number | any;
  /**
   * To scrub sensitive log fields
   */
  readonly logScrubbing?: PolicySettingsLogScrubbing | any;
  /**
   * Maximum request body size in Kb for WAF.
   */
  readonly maxRequestBodySizeInKb?: number | any;
  /**
   * The mode of the policy.
   */
  readonly mode?: 'Prevention' | 'Detection' | any;
  /**
   * Whether to allow WAF to check request Body.
   */
  readonly requestBodyCheck?: boolean | any;
  /**
   * Whether allow WAF to enforce request body limits.
   */
  readonly requestBodyEnforcement?: boolean | any;
  /**
   * Max inspection limit in KB for request body inspection for WAF.
   */
  readonly requestBodyInspectLimitInKB?: number | any;
  /**
   * The state of the policy.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
}

/**
 * PolicySettingsLogScrubbing definition.
 */
export interface PolicySettingsLogScrubbing {
  /**
   * The rules that are applied to the logs for scrubbing.
   */
  readonly scrubbingRules?: WebApplicationFirewallScrubbingRules[] | any;
  /**
   * State of the log scrubbing config. Default value is Enabled.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
}

/**
 * PrivateDnsZoneConfig definition.
 */
export interface PrivateDnsZoneConfig {
  /**
   * Name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the private dns zone configuration.
   */
  readonly properties?: PrivateDnsZone | any;
}

/**
 * PrivateDnsZoneGroup definition.
 */
export interface PrivateDnsZoneGroup {
  /**
   * A collection of private dns zone configurations of the private dns zone group.
   */
  readonly privateDnsZoneConfigs?: PrivateDnsZoneConfig[] | any;
}

/**
 * PrivateDnsZone definition.
 */
export interface PrivateDnsZone {
  /**
   * The resource id of the private dns zone.
   */
  readonly privateDnsZoneId?: string;
}

/**
 * PrivateEndpointConnectionProps definition.
 */
export interface PrivateEndpointConnectionProps {
  /**
   * A collection of information about the state of the connection between service consumer and provider.
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState | any;
}

/**
 * PrivateEndpointIPConfiguration definition.
 */
export interface PrivateEndpointIPConfiguration {
  /**
   * The name of the resource that is unique within a resource group.
   */
  readonly name?: string;
  /**
   * Properties of private endpoint IP configurations.
   */
  readonly properties?: any;
}

/**
 * PrivateEndpointIPConfigurationProps definition.
 */
export interface PrivateEndpointIPConfigurationProps {
  /**
   * The ID of a group obtained from the remote resource that this private endpoint should connect to.
   */
  readonly groupId?: string;
  /**
   * The member name of a group obtained from the remote resource that this private endpoint should connect to.
   */
  readonly memberName?: string;
  /**
   * A private ip address obtained from the private endpoint's subnet.
   */
  readonly privateIPAddress?: string;
}

/**
 * PrivateEndpointProps definition.
 */
export interface PrivateEndpointProps {
  /**
   * Application security groups in which the private endpoint IP configuration is included.
   */
  readonly applicationSecurityGroups?: ApplicationSecurityGroup[] | any;
  /**
   * An array of custom dns configurations.
   */
  readonly customDnsConfigs?: CustomDnsConfig[] | any;
  /**
   * The custom name of the network interface attached to the private endpoint.
   */
  readonly customNetworkInterfaceName?: string;
  /**
   * A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
   */
  readonly ipConfigurations?: PrivateEndpointIPConfiguration[] | any;
  /**
   * A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
   */
  readonly manualPrivateLinkServiceConnections?: PrivateLinkServiceConnection[] | any;
  /**
   * A grouping of information about the connection to the remote resource.
   */
  readonly privateLinkServiceConnections?: PrivateLinkServiceConnection[] | any;
  /**
   * The ID of the subnet from which the private IP will be allocated.
   */
  readonly subnet?: Subnet | any;
}

/**
 * PrivateLinkService definition.
 */
export interface PrivateLinkService {
  /**
   * The extended location of the load balancer.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the private link service.
   */
  readonly properties?: any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * PrivateLinkServiceConnection definition.
 */
export interface PrivateLinkServiceConnection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the private link service connection.
   */
  readonly properties?: any;
}

/**
 * PrivateLinkServiceConnectionProps definition.
 */
export interface PrivateLinkServiceConnectionProps {
  /**
   * The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
   */
  readonly groupIds?: string[] | any;
  /**
   * A collection of read-only information about the state of the connection to the remote resource.
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState | any;
  /**
   * The resource id of private link service.
   */
  readonly privateLinkServiceId?: string;
  /**
   * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
   */
  readonly requestMessage?: string;
}

/**
 * PrivateLinkServiceConnectionState definition.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  readonly actionsRequired?: string;
  /**
   * The reason for approval/rejection of the connection.
   */
  readonly description?: string;
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
   */
  readonly status?: string;
}

/**
 * PrivateLinkServiceIpConfiguration definition.
 */
export interface PrivateLinkServiceIpConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of private link service ip configuration.
   */
  readonly name?: string;
  /**
   * Properties of the private link service ip configuration.
   */
  readonly properties?: any;
}

/**
 * PrivateLinkServiceIpConfigurationProps definition.
 */
export interface PrivateLinkServiceIpConfigurationProps {
  /**
   * Whether the ip configuration is primary or not.
   */
  readonly primary?: boolean | any;
  /**
   * The private IP address of the IP configuration.
   */
  readonly privateIPAddress?: string;
  /**
   * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
   */
  readonly privateIPAddressVersion?: 'IPv4' | 'IPv6' | any;
  /**
   * The private IP address allocation method.
   */
  readonly privateIPAllocationMethod?: 'Static' | 'Dynamic' | any;
  /**
   * The reference to the subnet resource.
   */
  readonly subnet?: Subnet | any;
}

/**
 * PrivateLinkServiceProps definition.
 */
export interface PrivateLinkServiceProps {
  /**
   * The auto-approval list of the private link service.
   */
  readonly autoApproval?: PrivateLinkServicePropertiesAutoApproval | any;
  /**
   * The destination IP address of the private link service.
   */
  readonly destinationIPAddress?: string;
  /**
   * Whether the private link service is enabled for proxy protocol or not.
   */
  readonly enableProxyProtocol?: boolean | any;
  /**
   * The list of Fqdn.
   */
  readonly fqdns?: string[] | any;
  /**
   * An array of private link service IP configurations.
   */
  readonly ipConfigurations?: PrivateLinkServiceIpConfiguration[] | any;
  /**
   * An array of references to the load balancer IP configurations.
   */
  readonly loadBalancerFrontendIpConfigurations?: FrontendIPConfiguration[] | any;
  /**
   * The visibility list of the private link service.
   */
  readonly visibility?: PrivateLinkServicePropertiesVisibility | any;
}

/**
 * PrivateLinkServicePropertiesAutoApproval definition.
 */
export interface PrivateLinkServicePropertiesAutoApproval {
  /**
   * The list of subscriptions.
   */
  readonly subscriptions?: string[] | any;
}

/**
 * PrivateLinkServicePropertiesVisibility definition.
 */
export interface PrivateLinkServicePropertiesVisibility {
  /**
   * The list of subscriptions.
   */
  readonly subscriptions?: string[] | any;
}

/**
 * Probe definition.
 */
export interface Probe {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of load balancer probe.
   */
  readonly properties?: Probe | any;
}

/**
 * PropagatedRouteTable definition.
 */
export interface PropagatedRouteTable {
  /**
   * The list of resource ids of all the RouteTables.
   */
  readonly ids?: SubResource[] | any;
  /**
   * The list of labels.
   */
  readonly labels?: string[] | any;
}

/**
 * PublicIPAddress definition.
 */
export interface PublicIPAddress {
  /**
   * The extended location of the public ip address.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Public IP address properties.
   */
  readonly properties?: PublicIPAddress | any;
  /**
   * The public IP address SKU.
   */
  readonly sku?: PublicIPAddressSku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the IP allocated for the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * PublicIPAddressDnsSettings definition.
 */
export interface PublicIPAddressDnsSettings {
  /**
   * The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
   */
  readonly domainNameLabel?: string;
  /**
   * The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
   */
  readonly domainNameLabelScope?:
    | 'TenantReuse'
    | 'SubscriptionReuse'
    | 'ResourceGroupReuse'
    | 'NoReuse'
    | any;
  /**
   * The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
   */
  readonly fqdn?: string;
  /**
   * The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
   */
  readonly reverseFqdn?: string;
}

/**
 * PublicIPAddressSku definition.
 */
export interface PublicIPAddressSku {
  /**
   * Name of a public IP address SKU.
   */
  readonly name?: 'Basic' | 'Standard' | 'StandardV2' | any;
  /**
   * Tier of a public IP address SKU.
   */
  readonly tier?: 'Regional' | 'Global' | any;
}

/**
 * PublicIPPrefix definition.
 */
export interface PublicIPPrefix {
  /**
   * The customIpPrefix that this prefix is associated with.
   */
  readonly customIPPrefix?: SubResource | any;
  /**
   * The list of tags associated with the public IP prefix.
   */
  readonly ipTags?: IpTag[] | any;
  /**
   * NatGateway of Public IP Prefix.
   */
  readonly natGateway?: NatGateway | any;
  /**
   * The Length of the Public IP Prefix.
   */
  readonly prefixLength?: number | any;
  /**
   * The public IP address version.
   */
  readonly publicIPAddressVersion?: 'IPv4' | 'IPv6' | any;
}

/**
 * PublicIPPrefixSku definition.
 */
export interface PublicIPPrefixSku {
  /**
   * Name of a public IP prefix SKU.
   */
  readonly name?: 'Standard' | 'StandardV2' | any;
  /**
   * Tier of a public IP prefix SKU.
   */
  readonly tier?: 'Regional' | 'Global' | any;
}

/**
 * QosDefinition definition.
 */
export interface QosDefinition {
  /**
   * Destination IP ranges.
   */
  readonly destinationIpRanges?: QosIpRange[] | any;
  /**
   * Destination port ranges.
   */
  readonly destinationPortRanges?: QosPortRange[] | any;
  /**
   * List of markings to be used in the configuration.
   */
  readonly markings?: number[] | any;
  /**
   * RNM supported protocol types.
   */
  readonly protocol?:
    | 'DoNotUse'
    | 'Icmp'
    | 'Tcp'
    | 'Udp'
    | 'Gre'
    | 'Esp'
    | 'Ah'
    | 'Vxlan'
    | 'All'
    | any;
  /**
   * Source IP ranges.
   */
  readonly sourceIpRanges?: QosIpRange[] | any;
  /**
   * Sources port ranges.
   */
  readonly sourcePortRanges?: QosPortRange[] | any;
}

/**
 * QosIpRange definition.
 */
export interface QosIpRange {
  /**
   * End IP Address.
   */
  readonly endIP?: string;
  /**
   * Start IP Address.
   */
  readonly startIP?: string;
}

/**
 * QosPortRange definition.
 */
export interface QosPortRange {
  /**
   * Qos Port Range end.
   */
  readonly end?: number | any;
  /**
   * Qos Port Range start.
   */
  readonly start?: number | any;
}

/**
 * RadiusServer definition.
 */
export interface RadiusServer {
  /**
   * The address of this radius server.
   */
  readonly radiusServerAddress?: string;
  /**
   * The initial score assigned to this radius server.
   */
  readonly radiusServerScore?: number | any;
  /**
   * The secret used for this radius server.
   */
  readonly radiusServerSecret?: string;
}

/**
 * ReachabilityAnalysisIntentProps definition.
 */
export interface ReachabilityAnalysisIntentProps {
  /**
   * description
   */
  readonly description?: string;
  /**
   * Destination resource id to verify the reachability path of.
   */
  readonly destinationResourceId?: string;
  /**
   * IP traffic information.
   */
  readonly ipTraffic?: IPTraffic | any;
  /**
   * Provisioning states of a resource.
   */
  readonly provisioningState?:
    | 'Failed'
    | 'Succeeded'
    | 'Canceled'
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | any;
  /**
   * Source resource id to verify the reachability path of.
   */
  readonly sourceResourceId?: string;
}

/**
 * ReachabilityAnalysisRunProps definition.
 */
export interface ReachabilityAnalysisRunProps {
  /**
   * description
   */
  readonly description?: string;
  /**
   * Id of the intent resource to run analysis on.
   */
  readonly intentId?: string;
  /**
   * Provisioning states of a resource.
   */
  readonly provisioningState?:
    | 'Failed'
    | 'Succeeded'
    | 'Canceled'
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | any;
}

/**
 * RetentionPolicyParameters definition.
 */
export interface RetentionPolicyParameters {
  /**
   * Number of days to retain flow log records.
   */
  readonly days?: number | any;
  /**
   * Flag to enable/disable retention.
   */
  readonly enabled?: boolean | any;
}

/**
 * Route definition.
 */
export interface Route {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the route.
   */
  readonly properties?: Route | any;
}

/**
 * RouteFilter definition.
 */
export interface RouteFilter {
  /**
   * Collection of RouteFilterRules contained within a route filter.
   */
  readonly rules?: RouteFilterRule[] | any;
}

/**
 * RouteFilterRule definition.
 */
export interface RouteFilterRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the route filter rule.
   */
  readonly properties?: RouteFilterRule | any;
}

/**
 * RouteMapProps definition.
 */
export interface RouteMapProps {
  /**
   * List of connections which have this RoutMap associated for inbound traffic.
   */
  readonly associatedInboundConnections?: string[] | any;
  /**
   * List of connections which have this RoutMap associated for outbound traffic.
   */
  readonly associatedOutboundConnections?: string[] | any;
  /**
   * List of RouteMap rules to be applied.
   */
  readonly rules?: RouteMapRule[] | any;
}

/**
 * RouteMapRule definition.
 */
export interface RouteMapRule {
  /**
   * List of actions which will be applied on a match.
   */
  readonly actions?: Action[] | any;
  /**
   * List of matching criterion which will be applied to traffic.
   */
  readonly matchCriteria?: Criterion[] | any;
  /**
   * The unique name for the rule.
   */
  readonly name?: string;
  /**
   * Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
   */
  readonly nextStepIfMatched?: 'Unknown' | 'Continue' | 'Terminate' | any;
}

/**
 * RouteTable definition.
 */
export interface RouteTable {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the route table.
   */
  readonly properties?: RouteTable | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * RoutingConfiguration definition.
 */
export interface RoutingConfiguration {
  /**
   * The resource id RouteTable associated with this RoutingConfiguration.
   */
  readonly associatedRouteTable?: SubResource | any;
  /**
   * The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
   */
  readonly inboundRouteMap?: SubResource | any;
  /**
   * The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
   */
  readonly outboundRouteMap?: SubResource | any;
  /**
   * The list of RouteTables to advertise the routes to.
   */
  readonly propagatedRouteTables?: PropagatedRouteTable | any;
  /**
   * List of routes that control routing from VirtualHub into a virtual network connection.
   */
  readonly vnetRoutes?: VnetRoute | any;
}

/**
 * RoutingIntentProps definition.
 */
export interface RoutingIntentProps {
  /**
   * List of routing policies.
   */
  readonly routingPolicies?: RoutingPolicy[] | any;
}

/**
 * RoutingPolicy definition.
 */
export interface RoutingPolicy {
  /**
   * List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
   */
  readonly destinations?: string[] | any;
  /**
   * The unique name for the routing policy.
   */
  readonly name?: string;
  /**
   * The next hop resource id on which this routing policy is applicable to.
   */
  readonly nextHop?: string;
}

/**
 * ScopeConnectionProps definition.
 */
export interface ScopeConnectionProps {
  /**
   * A description of the scope connection.
   */
  readonly description?: string;
  /**
   * Resource ID.
   */
  readonly resourceId?: string;
  /**
   * Tenant ID.
   */
  readonly tenantId?: string;
}

/**
 * SecurityAdminConfiguration definition.
 */
export interface SecurityAdminConfiguration {
  /**
   * Enum list of network intent policy based services.
   */
  readonly applyOnNetworkIntentPolicyBasedServices?: 'None' | 'All' | 'AllowRulesOnly'[] | any;
  /**
   * A description of the security configuration.
   */
  readonly description?: string;
  /**
   * Determine update behavior for changes to network groups referenced within the rules in this configuration.
   */
  readonly networkGroupAddressSpaceAggregationOption?: 'None' | 'Manual' | any;
}

/**
 * SecurityPartnerProvider definition.
 */
export interface SecurityPartnerProvider {
  /**
   * The security provider name.
   */
  readonly securityProviderName?: 'ZScaler' | 'IBoss' | 'Checkpoint' | any;
  /**
   * The virtualHub to which the Security Partner Provider belongs.
   */
  readonly virtualHub?: SubResource | any;
}

/**
 * SecurityRule definition.
 */
export interface SecurityRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the security rule.
   */
  readonly properties?: SecurityRule | any;
}

/**
 * SecurityUserConfiguration definition.
 */
export interface SecurityUserConfiguration {
  /**
   * A description of the security user configuration.
   */
  readonly description?: string;
}

/**
 * SecurityUserGroupItem definition.
 */
export interface SecurityUserGroupItem {
  /**
   * Network manager group Id.
   */
  readonly networkGroupId?: string;
}

/**
 * SecurityUserRuleCollection definition.
 */
export interface SecurityUserRuleCollection {
  /**
   * Groups for configuration
   */
  readonly appliesToGroups?: SecurityUserGroupItem[] | any;
  /**
   * A description of the security user rule collection.
   */
  readonly description?: string;
}

/**
 * SecurityUserRule definition.
 */
export interface SecurityUserRule {
  /**
   * A description for this rule.
   */
  readonly description?: string;
  /**
   * The destination port ranges.
   */
  readonly destinationPortRanges?: string[] | any;
  /**
   * The destination address prefixes. CIDR or destination IP ranges.
   */
  readonly destinations?: AddressPrefixItem[] | any;
  /**
   * Indicates if the traffic matched against the rule in inbound or outbound.
   */
  readonly direction?: 'Inbound' | 'Outbound' | any;
  /**
   * Network protocol this rule applies to.
   */
  readonly protocol?: 'Tcp' | 'Udp' | 'Icmp' | 'Esp' | 'Any' | 'Ah' | any;
  /**
   * The source port ranges.
   */
  readonly sourcePortRanges?: string[] | any;
  /**
   * The CIDR or source IP ranges.
   */
  readonly sources?: AddressPrefixItem[] | any;
}

/**
 * ServiceDelegation definition.
 */
export interface ServiceDelegation {
  /**
   * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
   */
  readonly serviceName?: string;
}

/**
 * ServiceEndpointPolicy definition.
 */
export interface ServiceEndpointPolicy {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the service end point policy.
   */
  readonly properties?: ServiceEndpointPolicy | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * ServiceEndpointPolicyDefinition definition.
 */
export interface ServiceEndpointPolicyDefinition {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the service endpoint policy definition.
   */
  readonly properties?: ServiceEndpointPolicyDefinition | any;
}

/**
 * ServiceEndpoint definition.
 */
export interface ServiceEndpoint {
  /**
   * A list of locations.
   */
  readonly locations?: string[] | any;
  /**
   * SubResource as network identifier.
   */
  readonly networkIdentifier?: SubResource | any;
  /**
   * The type of the endpoint service.
   */
  readonly service?: string;
}

/**
 * SharedKeyProps definition.
 */
export interface SharedKeyProps {
  /**
   * The value of the shared key for the vpn link connection.
   */
  readonly sharedKey?: string;
  /**
   * The length of the shared key for the vpn link connection.
   */
  readonly sharedKeyLength?: number | any;
}

/**
 * SignaturesOverridesProps definition.
 */
export interface SignaturesOverridesProps {
  /**
   * Dictionary of <string>
   */
  readonly signatures?: Record<string, string> | any;
}

/**
 * Sku definition.
 */
export interface Sku {
  /**
   * The name of the sku of this Bastion Host.
   */
  readonly name?: 'Basic' | 'Standard' | 'Developer' | 'Premium' | any;
}

/**
 * StaticCidrProps definition.
 */
export interface StaticCidrProps {
  /**
   * List of IP address prefixes of the resource.
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * description
   */
  readonly description?: string;
  /**
   * Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
   */
  readonly numberOfIPAddressesToAllocate?: string;
  /**
   * Provisioning states of a resource.
   */
  readonly provisioningState?:
    | 'Failed'
    | 'Succeeded'
    | 'Canceled'
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | any;
}

/**
 * StaticMemberProps definition.
 */
export interface StaticMemberProps {
  /**
   * Resource Id.
   */
  readonly resourceId?: string;
}

/**
 * StaticRoute definition.
 */
export interface StaticRoute {
  /**
   * List of all address prefixes.
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * The name of the StaticRoute that is unique within a VnetRoute.
   */
  readonly name?: string;
  /**
   * The ip address of the next hop.
   */
  readonly nextHopIpAddress?: string;
}

/**
 * StaticRoutesConfig definition.
 */
export interface StaticRoutesConfig {
  /**
   * Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
   */
  readonly vnetLocalRouteOverrideCriteria?: 'Contains' | 'Equal' | any;
}

/**
 * SubResource definition.
 */
export interface SubResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
}

/**
 * Subnet definition.
 */
export interface Subnet {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the subnet.
   */
  readonly properties?: Subnet | any;
}

/**
 * SubscriptionId definition.
 */
export interface SubscriptionId {
  /**
   * Subscription id in the ARM id format.
   */
  readonly id?: string;
}

/**
 * SwapResourceProps definition.
 */
export interface SwapResourceProps {
  /**
   * Specifies slot info on a cloud service
   */
  readonly slotType?: 'Production' | 'Staging' | any;
}

/**
 * TrafficAnalyticsConfigurationProps definition.
 */
export interface TrafficAnalyticsConfigurationProps {
  /**
   * Flag to enable/disable traffic analytics.
   */
  readonly enabled?: boolean | any;
  /**
   * The interval in minutes which would decide how frequently TA service should do flow analytics.
   */
  readonly trafficAnalyticsInterval?: number | any;
  /**
   * The resource guid of the attached workspace.
   */
  readonly workspaceId?: string;
  /**
   * The location of the attached workspace.
   */
  readonly workspaceRegion?: string;
  /**
   * Resource Id of the attached workspace.
   */
  readonly workspaceResourceId?: string;
}

/**
 * TrafficAnalyticsProps definition.
 */
export interface TrafficAnalyticsProps {
  /**
   * Parameters that define the configuration of traffic analytics.
   */
  readonly networkWatcherFlowAnalyticsConfiguration?: any;
}

/**
 * TrafficSelectorPolicy definition.
 */
export interface TrafficSelectorPolicy {
  /**
   * A collection of local address spaces in CIDR format.
   */
  readonly localAddressRanges?: string[] | any;
  /**
   * A collection of remote address spaces in CIDR format.
   */
  readonly remoteAddressRanges?: string[] | any;
}

/**
 * VerifierWorkspaceProps definition.
 */
export interface VerifierWorkspaceProps {
  /**
   * description
   */
  readonly description?: string;
  /**
   * Provisioning states of a resource.
   */
  readonly provisioningState?:
    | 'Failed'
    | 'Succeeded'
    | 'Canceled'
    | 'Creating'
    | 'Updating'
    | 'Deleting'
    | any;
}

/**
 * VirtualApplianceAdditionalNicProps definition.
 */
export interface VirtualApplianceAdditionalNicProps {
  /**
   * Flag (true or false) for Intent for Public Ip on additional nic
   */
  readonly hasPublicIp?: boolean | any;
  /**
   * Name of additional nic
   */
  readonly name?: string;
}

/**
 * VirtualApplianceIPConfiguration definition.
 */
export interface VirtualApplianceIPConfiguration {
  /**
   * Name of the IP configuration.
   */
  readonly name?: string;
  /**
   * Represents a single IP configuration properties.
   */
  readonly properties?: any;
}

/**
 * VirtualApplianceIPConfigurationProps definition.
 */
export interface VirtualApplianceIPConfigurationProps {
  /**
   * Whether or not this is primary IP configuration of the NIC.
   */
  readonly primary?: boolean | any;
}

/**
 * VirtualApplianceNetworkInterfaceConfiguration definition.
 */
export interface VirtualApplianceNetworkInterfaceConfiguration {
  /**
   * Represents a single NIC configuration properties.
   */
  readonly properties?: any;
}

/**
 * VirtualApplianceNetworkInterfaceConfigurationProps definition.
 */
export interface VirtualApplianceNetworkInterfaceConfigurationProps {
  /**
   * Array of VirtualApplianceIPConfiguration
   */
  readonly ipConfigurations?: VirtualApplianceIPConfiguration[] | any;
}

/**
 * VirtualApplianceSiteProps definition.
 */
export interface VirtualApplianceSiteProps {
  /**
   * Address Prefix.
   */
  readonly addressPrefix?: string;
  /**
   * Office 365 Policy.
   */
  readonly o365Policy?: any;
}

/**
 * VirtualApplianceSkuProps definition.
 */
export interface VirtualApplianceSkuProps {
  /**
   * Virtual Appliance Scale Unit.
   */
  readonly bundledScaleUnit?: string;
  /**
   * Virtual Appliance Version.
   */
  readonly marketPlaceVersion?: string;
  /**
   * Virtual Appliance Vendor.
   */
  readonly vendor?: string;
}

/**
 * VirtualHubId definition.
 */
export interface VirtualHubId {
  /**
   * The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
   */
  readonly id?: string;
}

/**
 * VirtualHubProps definition.
 */
export interface VirtualHubProps {
  /**
   * Address-prefix for this VirtualHub.
   */
  readonly addressPrefix?: string;
  /**
   * Flag to control transit for VirtualRouter hub.
   */
  readonly allowBranchToBranchTraffic?: boolean | any;
  /**
   * The azureFirewall associated with this VirtualHub.
   */
  readonly azureFirewall?: SubResource | any;
  /**
   * The expressRouteGateway associated with this VirtualHub.
   */
  readonly expressRouteGateway?: SubResource | any;
  /**
   * The hubRoutingPreference of this VirtualHub.
   */
  readonly hubRoutingPreference?: 'ExpressRoute' | 'VpnGateway' | 'ASPath' | any;
  /**
   * The P2SVpnGateway associated with this VirtualHub.
   */
  readonly p2SVpnGateway?: SubResource | any;
  /**
   * The preferred gateway to route on-prem traffic
   */
  readonly preferredRoutingGateway?: 'ExpressRoute' | 'VpnGateway' | 'None' | any;
  /**
   * The routeTable associated with this virtual hub.
   */
  readonly routeTable?: VirtualHubRouteTable | any;
  /**
   * The securityPartnerProvider associated with this VirtualHub.
   */
  readonly securityPartnerProvider?: SubResource | any;
  /**
   * The Security Provider name.
   */
  readonly securityProviderName?: string;
  /**
   * The sku of this VirtualHub.
   */
  readonly sku?: string;
  /**
   * List of all virtual hub route table v2s associated with this VirtualHub.
   */
  readonly virtualHubRouteTableV2s?: VirtualHubRouteTableV2[] | any;
  /**
   * VirtualRouter ASN.
   */
  readonly virtualRouterAsn?: number | any;
  /**
   * The VirtualHub Router autoscale configuration.
   */
  readonly virtualRouterAutoScaleConfiguration?: VirtualRouterAutoScaleConfiguration | any;
  /**
   * VirtualRouter IPs.
   */
  readonly virtualRouterIps?: string[] | any;
  /**
   * The VirtualWAN to which the VirtualHub belongs.
   */
  readonly virtualWan?: SubResource | any;
  /**
   * The VpnGateway associated with this VirtualHub.
   */
  readonly vpnGateway?: SubResource | any;
}

/**
 * VirtualHubRoute definition.
 */
export interface VirtualHubRoute {
  /**
   * List of all addressPrefixes.
   */
  readonly addressPrefixes?: string[] | any;
  /**
   * NextHop ip address.
   */
  readonly nextHopIpAddress?: string;
}

/**
 * VirtualHubRouteTable definition.
 */
export interface VirtualHubRouteTable {
  /**
   * List of all routes.
   */
  readonly routes?: VirtualHubRoute[] | any;
}

/**
 * VirtualHubRouteTableV2 definition.
 */
export interface VirtualHubRouteTableV2 {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the virtual hub route table v2.
   */
  readonly properties?: any;
}

/**
 * VirtualHubRouteTableV2Props definition.
 */
export interface VirtualHubRouteTableV2Props {
  /**
   * List of all connections attached to this route table v2.
   */
  readonly attachedConnections?: string[] | any;
  /**
   * List of all routes.
   */
  readonly routes?: VirtualHubRouteV2[] | any;
}

/**
 * VirtualHubRouteV2 definition.
 */
export interface VirtualHubRouteV2 {
  /**
   * The type of destinations.
   */
  readonly destinationType?: string;
  /**
   * List of all destinations.
   */
  readonly destinations?: string[] | any;
  /**
   * The type of next hops.
   */
  readonly nextHopType?: string;
  /**
   * NextHops ip address.
   */
  readonly nextHops?: string[] | any;
}

/**
 * VirtualNetworkBgpCommunities definition.
 */
export interface VirtualNetworkBgpCommunities {
  /**
   * The BGP community associated with the virtual network.
   */
  readonly virtualNetworkCommunity?: string;
}

/**
 * VirtualNetworkEncryption definition.
 */
export interface VirtualNetworkEncryption {
  /**
   * Indicates if encryption is enabled on the virtual network.
   */
  readonly enabled?: boolean | any;
  /**
   * If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
   */
  readonly enforcement?: 'DropUnencrypted' | 'AllowUnencrypted' | any;
}

/**
 * VirtualNetworkGateway definition.
 */
export interface VirtualNetworkGateway {
  /**
   * The extended location of type local virtual network gateway.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The identity of the virtual network gateway, if configured.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Properties of the virtual network gateway.
   */
  readonly properties?: VirtualNetworkGateway | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * VirtualNetworkGatewayAutoScaleBounds definition.
 */
export interface VirtualNetworkGatewayAutoScaleBounds {
  /**
   * Maximum Scale Units for Autoscale configuration
   */
  readonly max?: number | any;
  /**
   * Minimum scale Units for Autoscale configuration
   */
  readonly min?: number | any;
}

/**
 * VirtualNetworkGatewayAutoScaleConfiguration definition.
 */
export interface VirtualNetworkGatewayAutoScaleConfiguration {
  /**
   * The bounds of the autoscale configuration
   */
  readonly bounds?: VirtualNetworkGatewayAutoScaleBounds | any;
}

/**
 * VirtualNetworkGatewayConnection definition.
 */
export interface VirtualNetworkGatewayConnection {
  /**
   * The authorizationKey.
   */
  readonly authorizationKey?: string;
  /**
   * The connection mode for this connection.
   */
  readonly connectionMode?: 'Default' | 'ResponderOnly' | 'InitiatorOnly' | any;
  /**
   * Connection protocol used for this connection.
   */
  readonly connectionProtocol?: 'IKEv2' | 'IKEv1' | any;
  /**
   * Gateway connection type.
   */
  readonly connectionType?: 'IPsec' | 'Vnet2Vnet' | 'ExpressRoute' | 'VPNClient' | any;
  /**
   * The dead peer detection timeout of this connection in seconds.
   */
  readonly dpdTimeoutSeconds?: number | any;
  /**
   * List of egress NatRules.
   */
  readonly egressNatRules?: SubResource[] | any;
  /**
   * EnableBgp flag.
   */
  readonly enableBgp?: boolean | any;
  /**
   * Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
   */
  readonly enablePrivateLinkFastPath?: boolean | any;
  /**
   * Bypass ExpressRoute Gateway for data forwarding.
   */
  readonly expressRouteGatewayBypass?: boolean | any;
  /**
   * GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.
   */
  readonly gatewayCustomBgpIpAddresses?: GatewayCustomBgpIpAddressIpConfiguration[] | any;
  /**
   * List of ingress NatRules.
   */
  readonly ingressNatRules?: SubResource[] | any;
  /**
   * The IPSec Policies to be considered by this connection.
   */
  readonly ipsecPolicies?: IpsecPolicy[] | any;
  /**
   * The reference to local network gateway resource.
   */
  readonly localNetworkGateway2?: LocalNetworkGateway | any;
  /**
   * The reference to peerings resource.
   */
  readonly peer?: SubResource | any;
  /**
   * The routing weight.
   */
  readonly routingWeight?: number | any;
  /**
   * The IPSec shared key.
   */
  readonly sharedKey?: string;
  /**
   * The Traffic Selector Policies to be considered by this connection.
   */
  readonly trafficSelectorPolicies?: TrafficSelectorPolicy[] | any;
  /**
   * Tunnel properties for virtual network gateway connection
   */
  readonly tunnelProperties?: any;
  /**
   * Use private local Azure IP for the connection.
   */
  readonly useLocalAzureIpAddress?: boolean | any;
  /**
   * Enable policy-based traffic selectors.
   */
  readonly usePolicyBasedTrafficSelectors?: boolean | any;
  /**
   * The reference to virtual network gateway resource.
   */
  readonly virtualNetworkGateway1?: VirtualNetworkGateway | any;
  /**
   * The reference to virtual network gateway resource.
   */
  readonly virtualNetworkGateway2?: VirtualNetworkGateway | any;
}

/**
 * VirtualNetworkGatewayConnectionTunnelProps definition.
 */
export interface VirtualNetworkGatewayConnectionTunnelProps {
  /**
   * Tunnel BGP peering address
   */
  readonly bgpPeeringAddress?: string;
  /**
   * Tunnel remote IP address
   */
  readonly tunnelIpAddress?: string;
}

/**
 * VirtualNetworkGatewayIPConfiguration definition.
 */
export interface VirtualNetworkGatewayIPConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the virtual network gateway ip configuration.
   */
  readonly properties?: VirtualNetworkGatewayIPConfiguration | any;
}

/**
 * VirtualNetworkGatewayMigrationStatus definition.
 */
export interface VirtualNetworkGatewayMigrationStatus {
  /**
   * Error if any occurs during migration.
   */
  readonly errorMessage?: string;
  /**
   * Represent the current migration phase of gateway.
   */
  readonly phase?:
    | 'None'
    | 'Prepare'
    | 'PrepareSucceeded'
    | 'Execute'
    | 'ExecuteSucceeded'
    | 'Commit'
    | 'CommitSucceeded'
    | 'AbortSucceeded'
    | 'Abort'
    | any;
  /**
   * Represent the current state of gateway migration.
   */
  readonly state?: 'None' | 'InProgress' | 'Succeeded' | 'Failed' | any;
}

/**
 * VirtualNetworkGatewayNatRule definition.
 */
export interface VirtualNetworkGatewayNatRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the Virtual Network Gateway NAT rule.
   */
  readonly properties?: any;
}

/**
 * VirtualNetworkGatewayNatRuleProps definition.
 */
export interface VirtualNetworkGatewayNatRuleProps {
  /**
   * The private IP address external mapping for NAT.
   */
  readonly externalMappings?: VpnNatRuleMapping[] | any;
  /**
   * The private IP address internal mapping for NAT.
   */
  readonly internalMappings?: VpnNatRuleMapping[] | any;
  /**
   * The IP Configuration ID this NAT rule applies to.
   */
  readonly ipConfigurationId?: string;
  /**
   * The Source NAT direction of a VPN NAT.
   */
  readonly mode?: 'EgressSnat' | 'IngressSnat' | any;
}

/**
 * VirtualNetworkGatewayPolicyGroup definition.
 */
export interface VirtualNetworkGatewayPolicyGroup {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of tVirtualNetworkGatewayPolicyGroup.
   */
  readonly properties?: any;
}

/**
 * VirtualNetworkGatewayPolicyGroupMember definition.
 */
export interface VirtualNetworkGatewayPolicyGroupMember {
  /**
   * The Vpn Policy member attribute type.
   */
  readonly attributeType?: 'CertificateGroupId' | 'AADGroupId' | 'RadiusAzureGroupId' | any;
  /**
   * The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
   */
  readonly attributeValue?: string;
  /**
   * Name of the VirtualNetworkGatewayPolicyGroupMember.
   */
  readonly name?: string;
}

/**
 * VirtualNetworkGatewayPolicyGroupProps definition.
 */
export interface VirtualNetworkGatewayPolicyGroupProps {
  /**
   * Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
   */
  readonly isDefault?: boolean | any;
  /**
   * Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
   */
  readonly policyMembers?: VirtualNetworkGatewayPolicyGroupMember[] | any;
  /**
   * Priority for VirtualNetworkGatewayPolicyGroup.
   */
  readonly priority?: number | any;
}

/**
 * VirtualNetworkGatewaySku definition.
 */
export interface VirtualNetworkGatewaySku {
  /**
   * Gateway SKU name.
   */
  readonly name?:
    | 'Basic'
    | 'HighPerformance'
    | 'Standard'
    | 'UltraPerformance'
    | 'VpnGw1'
    | 'VpnGw2'
    | 'VpnGw3'
    | 'VpnGw4'
    | 'VpnGw5'
    | 'VpnGw1AZ'
    | 'VpnGw2AZ'
    | 'VpnGw3AZ'
    | 'VpnGw4AZ'
    | 'VpnGw5AZ'
    | 'ErGw1AZ'
    | 'ErGw2AZ'
    | 'ErGw3AZ'
    | 'ErGwScale'
    | any;
  /**
   * Gateway SKU tier.
   */
  readonly tier?:
    | 'Basic'
    | 'HighPerformance'
    | 'Standard'
    | 'UltraPerformance'
    | 'VpnGw1'
    | 'VpnGw2'
    | 'VpnGw3'
    | 'VpnGw4'
    | 'VpnGw5'
    | 'VpnGw1AZ'
    | 'VpnGw2AZ'
    | 'VpnGw3AZ'
    | 'VpnGw4AZ'
    | 'VpnGw5AZ'
    | 'ErGw1AZ'
    | 'ErGw2AZ'
    | 'ErGw3AZ'
    | 'ErGwScale'
    | any;
}

/**
 * VirtualNetworkPeering definition.
 */
export interface VirtualNetworkPeering {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the virtual network peering.
   */
  readonly properties?: VirtualNetworkPeering | any;
}

/**
 * VirtualNetwork definition.
 */
export interface VirtualNetwork {
  /**
   * The AddressSpace that contains an array of IP address ranges that can be used by subnets.
   */
  readonly addressSpace?: AddressSpace | any;
  /**
   * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
   */
  readonly bgpCommunities?: VirtualNetworkBgpCommunities | any;
  /**
   * The DDoS protection plan associated with the virtual network.
   */
  readonly ddosProtectionPlan?: SubResource | any;
  /**
   * The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
   */
  readonly dhcpOptions?: DhcpOptions | any;
  /**
   * Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
   */
  readonly enableDdosProtection?: boolean | any;
  /**
   * Indicates if VM protection is enabled for all the subnets in the virtual network.
   */
  readonly enableVmProtection?: boolean | any;
  /**
   * Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
   */
  readonly encryption?: VirtualNetworkEncryption | any;
  /**
   * The FlowTimeout value (in minutes) for the Virtual Network
   */
  readonly flowTimeoutInMinutes?: number | any;
  /**
   * Array of IpAllocation which reference this VNET.
   */
  readonly ipAllocations?: SubResource[] | any;
  /**
   * Private Endpoint VNet Policies.
   */
  readonly privateEndpointVNetPolicies?: 'Disabled' | 'Basic' | any;
  /**
   * A list of subnets in a Virtual Network.
   */
  readonly subnets?: Subnet[] | any;
  /**
   * A list of peerings in a Virtual Network.
   */
  readonly virtualNetworkPeerings?: VirtualNetworkPeering[] | any;
}

/**
 * VirtualNetworkTap definition.
 */
export interface VirtualNetworkTap {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * Virtual Network Tap Properties.
   */
  readonly properties?: VirtualNetworkTap | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * VirtualRouterAutoScaleConfiguration definition.
 */
export interface VirtualRouterAutoScaleConfiguration {
  /**
   * The minimum number of scale units for VirtualHub Router.
   */
  readonly minCapacity?: number | any;
}

/**
 * VirtualRouterPeeringProps definition.
 */
export interface VirtualRouterPeeringProps {
  /**
   * Peer ASN.
   */
  readonly peerAsn?: number | any;
  /**
   * Peer IP.
   */
  readonly peerIp?: string;
}

/**
 * VirtualRouter definition.
 */
export interface VirtualRouter {
  /**
   * The Gateway on which VirtualRouter is hosted.
   */
  readonly hostedGateway?: SubResource | any;
  /**
   * The Subnet on which VirtualRouter is hosted.
   */
  readonly hostedSubnet?: SubResource | any;
  /**
   * VirtualRouter ASN.
   */
  readonly virtualRouterAsn?: number | any;
  /**
   * VirtualRouter IPs.
   */
  readonly virtualRouterIps?: string[] | any;
}

/**
 * VirtualWanProps definition.
 */
export interface VirtualWanProps {
  /**
   * True if branch to branch traffic is allowed.
   */
  readonly allowBranchToBranchTraffic?: boolean | any;
  /**
   * True if Vnet to Vnet traffic is allowed.
   */
  readonly allowVnetToVnetTraffic?: boolean | any;
  /**
   * Vpn encryption to be disabled or not.
   */
  readonly disableVpnEncryption?: boolean | any;
}

/**
 * VnetRoute definition.
 */
export interface VnetRoute {
  /**
   * List of all Static Routes.
   */
  readonly staticRoutes?: StaticRoute[] | any;
  /**
   * Configuration for static routes on this HubVnetConnection.
   */
  readonly staticRoutesConfig?: StaticRoutesConfig | any;
}

/**
 * VngClientConnectionConfiguration definition.
 */
export interface VngClientConnectionConfiguration {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the vpn client root certificate.
   */
  readonly properties?: any;
}

/**
 * VngClientConnectionConfigurationProps definition.
 */
export interface VngClientConnectionConfigurationProps {
  /**
   * List of references to virtualNetworkGatewayPolicyGroups
   */
  readonly virtualNetworkGatewayPolicyGroups?: SubResource[] | any;
  /**
   * The reference to the address space resource which represents Address space for P2S VpnClient.
   */
  readonly vpnClientAddressPool?: AddressSpace | any;
}

/**
 * VpnClientConfiguration definition.
 */
export interface VpnClientConfiguration {
  /**
   * The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
   */
  readonly aadAudience?: string;
  /**
   * The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
   */
  readonly aadIssuer?: string;
  /**
   * The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
   */
  readonly aadTenant?: string;
  /**
   * The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
   */
  readonly radiusServerAddress?: string;
  /**
   * The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
   */
  readonly radiusServerSecret?: string;
  /**
   * The radiusServers property for multiple radius server configuration.
   */
  readonly radiusServers?: RadiusServer[] | any;
  /**
   * per ip address pool connection policy for virtual network gateway P2S client.
   */
  readonly vngClientConnectionConfigurations?: VngClientConnectionConfiguration[] | any;
  /**
   * VPN authentication types for the virtual network gateway..
   */
  readonly vpnAuthenticationTypes?: 'Certificate' | 'Radius' | 'AAD'[] | any;
  /**
   * The reference to the address space resource which represents Address space for P2S VpnClient.
   */
  readonly vpnClientAddressPool?: AddressSpace | any;
  /**
   * VpnClientIpsecPolicies for virtual network gateway P2S client.
   */
  readonly vpnClientIpsecPolicies?: IpsecPolicy[] | any;
  /**
   * VpnClientProtocols for Virtual network gateway.
   */
  readonly vpnClientProtocols?: 'IkeV2' | 'SSTP' | 'OpenVPN'[] | any;
  /**
   * VpnClientRevokedCertificate for Virtual network gateway.
   */
  readonly vpnClientRevokedCertificates?: VpnClientRevokedCertificate[] | any;
  /**
   * VpnClientRootCertificate for virtual network gateway.
   */
  readonly vpnClientRootCertificates?: VpnClientRootCertificate[] | any;
}

/**
 * VpnClientRevokedCertificate definition.
 */
export interface VpnClientRevokedCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the vpn client revoked certificate.
   */
  readonly properties?: VpnClientRevokedCertificate | any;
}

/**
 * VpnClientRootCertificate definition.
 */
export interface VpnClientRootCertificate {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the vpn client root certificate.
   */
  readonly properties?: VpnClientRootCertificate | any;
}

/**
 * VpnConnection definition.
 */
export interface VpnConnection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the VPN connection.
   */
  readonly properties?: any;
}

/**
 * VpnConnectionProps definition.
 */
export interface VpnConnectionProps {
  /**
   * Expected bandwidth in MBPS.
   */
  readonly connectionBandwidth?: number | any;
  /**
   * DPD timeout in seconds for vpn connection.
   */
  readonly dpdTimeoutSeconds?: number | any;
  /**
   * EnableBgp flag.
   */
  readonly enableBgp?: boolean | any;
  /**
   * Enable internet security.
   */
  readonly enableInternetSecurity?: boolean | any;
  /**
   * EnableBgp flag.
   */
  readonly enableRateLimiting?: boolean | any;
  /**
   * The IPSec Policies to be considered by this connection.
   */
  readonly ipsecPolicies?: IpsecPolicy[] | any;
  /**
   * Id of the connected vpn site.
   */
  readonly remoteVpnSite?: SubResource | any;
  /**
   * The Routing Configuration indicating the associated and propagated route tables on this connection.
   */
  readonly routingConfiguration?: RoutingConfiguration | any;
  /**
   * Routing weight for vpn connection.
   */
  readonly routingWeight?: number | any;
  /**
   * SharedKey for the vpn connection.
   */
  readonly sharedKey?: string;
  /**
   * The Traffic Selector Policies to be considered by this connection.
   */
  readonly trafficSelectorPolicies?: TrafficSelectorPolicy[] | any;
  /**
   * Use local azure ip to initiate connection.
   */
  readonly useLocalAzureIpAddress?: boolean | any;
  /**
   * Enable policy-based traffic selectors.
   */
  readonly usePolicyBasedTrafficSelectors?: boolean | any;
  /**
   * Connection protocol used for this connection.
   */
  readonly vpnConnectionProtocolType?: 'IKEv2' | 'IKEv1' | any;
  /**
   * List of all vpn site link connections to the gateway.
   */
  readonly vpnLinkConnections?: VpnSiteLinkConnection[] | any;
}

/**
 * VpnGatewayNatRule definition.
 */
export interface VpnGatewayNatRule {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the VpnGateway NAT rule.
   */
  readonly properties?: any;
}

/**
 * VpnGatewayNatRuleProps definition.
 */
export interface VpnGatewayNatRuleProps {
  /**
   * The private IP address external mapping for NAT.
   */
  readonly externalMappings?: VpnNatRuleMapping[] | any;
  /**
   * The private IP address internal mapping for NAT.
   */
  readonly internalMappings?: VpnNatRuleMapping[] | any;
  /**
   * The IP Configuration ID this NAT rule applies to.
   */
  readonly ipConfigurationId?: string;
  /**
   * The Source NAT direction of a VPN NAT.
   */
  readonly mode?: 'EgressSnat' | 'IngressSnat' | any;
}

/**
 * VpnGatewayProps definition.
 */
export interface VpnGatewayProps {
  /**
   * Local network gateway's BGP speaker settings.
   */
  readonly bgpSettings?: BgpSettings | any;
  /**
   * List of all vpn connections to the gateway.
   */
  readonly connections?: VpnConnection[] | any;
  /**
   * Enable BGP routes translation for NAT on this VpnGateway.
   */
  readonly enableBgpRouteTranslationForNat?: boolean | any;
  /**
   * Enable Routing Preference property for the Public IP Interface of the VpnGateway.
   */
  readonly isRoutingPreferenceInternet?: boolean | any;
  /**
   * List of all the nat Rules associated with the gateway.
   */
  readonly natRules?: VpnGatewayNatRule[] | any;
  /**
   * The VirtualHub to which the gateway belongs.
   */
  readonly virtualHub?: SubResource | any;
  /**
   * The scale unit for this vpn gateway.
   */
  readonly vpnGatewayScaleUnit?: number | any;
}

/**
 * VpnLinkBgpSettings definition.
 */
export interface VpnLinkBgpSettings {
  /**
   * The BGP speaker's ASN.
   */
  readonly asn?: number | any;
  /**
   * The BGP peering address and BGP identifier of this BGP speaker.
   */
  readonly bgpPeeringAddress?: string;
}

/**
 * VpnLinkProviderProps definition.
 */
export interface VpnLinkProviderProps {
  /**
   * Name of the link provider.
   */
  readonly linkProviderName?: string;
  /**
   * Link speed.
   */
  readonly linkSpeedInMbps?: number | any;
}

/**
 * VpnNatRuleMapping definition.
 */
export interface VpnNatRuleMapping {
  /**
   * Address space for Vpn NatRule mapping.
   */
  readonly addressSpace?: string;
  /**
   * Port range for Vpn NatRule mapping.
   */
  readonly portRange?: string;
}

/**
 * VpnServerConfigRadiusClientRootCertificate definition.
 */
export interface VpnServerConfigRadiusClientRootCertificate {
  /**
   * The certificate name.
   */
  readonly name?: string;
  /**
   * The Radius client root certificate thumbprint.
   */
  readonly thumbprint?: string;
}

/**
 * VpnServerConfigRadiusServerRootCertificate definition.
 */
export interface VpnServerConfigRadiusServerRootCertificate {
  /**
   * The certificate name.
   */
  readonly name?: string;
  /**
   * The certificate public data.
   */
  readonly publicCertData?: string;
}

/**
 * VpnServerConfigVpnClientRevokedCertificate definition.
 */
export interface VpnServerConfigVpnClientRevokedCertificate {
  /**
   * The certificate name.
   */
  readonly name?: string;
  /**
   * The revoked VPN client certificate thumbprint.
   */
  readonly thumbprint?: string;
}

/**
 * VpnServerConfigVpnClientRootCertificate definition.
 */
export interface VpnServerConfigVpnClientRootCertificate {
  /**
   * The certificate name.
   */
  readonly name?: string;
  /**
   * The certificate public data.
   */
  readonly publicCertData?: string;
}

/**
 * VpnServerConfigurationPolicyGroup definition.
 */
export interface VpnServerConfigurationPolicyGroup {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the VpnServerConfigurationPolicyGroup.
   */
  readonly properties?: any;
}

/**
 * VpnServerConfigurationPolicyGroupMember definition.
 */
export interface VpnServerConfigurationPolicyGroupMember {
  /**
   * The Vpn Policy member attribute type.
   */
  readonly attributeType?: 'CertificateGroupId' | 'AADGroupId' | 'RadiusAzureGroupId' | any;
  /**
   * The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
   */
  readonly attributeValue?: string;
  /**
   * Name of the VpnServerConfigurationPolicyGroupMember.
   */
  readonly name?: string;
}

/**
 * VpnServerConfigurationPolicyGroupProps definition.
 */
export interface VpnServerConfigurationPolicyGroupProps {
  /**
   * Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
   */
  readonly isDefault?: boolean | any;
  /**
   * Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
   */
  readonly policyMembers?: VpnServerConfigurationPolicyGroupMember[] | any;
  /**
   * Priority for VpnServerConfigurationPolicyGroup.
   */
  readonly priority?: number | any;
}

/**
 * VpnServerConfigurationProps definition.
 */
export interface VpnServerConfigurationProps {
  /**
   * The set of aad vpn authentication parameters.
   */
  readonly aadAuthenticationParameters?: AadAuthenticationParameters | any;
  /**
   * List of all VpnServerConfigurationPolicyGroups.
   */
  readonly configurationPolicyGroups?: VpnServerConfigurationPolicyGroup[] | any;
  /**
   * The name of the VpnServerConfiguration that is unique within a resource group.
   */
  readonly name?: string;
  /**
   * Radius client root certificate of VpnServerConfiguration.
   */
  readonly radiusClientRootCertificates?: VpnServerConfigRadiusClientRootCertificate[] | any;
  /**
   * The radius server address property of the VpnServerConfiguration resource for point to site client connection.
   */
  readonly radiusServerAddress?: string;
  /**
   * Radius Server root certificate of VpnServerConfiguration.
   */
  readonly radiusServerRootCertificates?: VpnServerConfigRadiusServerRootCertificate[] | any;
  /**
   * The radius secret property of the VpnServerConfiguration resource for point to site client connection.
   */
  readonly radiusServerSecret?: string;
  /**
   * Multiple Radius Server configuration for VpnServerConfiguration.
   */
  readonly radiusServers?: RadiusServer[] | any;
  /**
   * VPN authentication types for the VpnServerConfiguration.
   */
  readonly vpnAuthenticationTypes?: 'Certificate' | 'Radius' | 'AAD'[] | any;
  /**
   * VpnClientIpsecPolicies for VpnServerConfiguration.
   */
  readonly vpnClientIpsecPolicies?: IpsecPolicy[] | any;
  /**
   * VPN client revoked certificate of VpnServerConfiguration.
   */
  readonly vpnClientRevokedCertificates?: VpnServerConfigVpnClientRevokedCertificate[] | any;
  /**
   * VPN client root certificate of VpnServerConfiguration.
   */
  readonly vpnClientRootCertificates?: VpnServerConfigVpnClientRootCertificate[] | any;
  /**
   * VPN protocols for the VpnServerConfiguration.
   */
  readonly vpnProtocols?: 'IkeV2' | 'OpenVPN'[] | any;
}

/**
 * VpnSiteLink definition.
 */
export interface VpnSiteLink {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the VPN site link.
   */
  readonly properties?: any;
}

/**
 * VpnSiteLinkConnection definition.
 */
export interface VpnSiteLinkConnection {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   */
  readonly name?: string;
  /**
   * Properties of the VPN site link connection.
   */
  readonly properties?: any;
}

/**
 * VpnSiteLinkConnectionProps definition.
 */
export interface VpnSiteLinkConnectionProps {
  /**
   * Expected bandwidth in MBPS.
   */
  readonly connectionBandwidth?: number | any;
  /**
   * Dead Peer Detection timeout in seconds for VpnLink connection.
   */
  readonly dpdTimeoutSeconds?: number | any;
  /**
   * List of egress NatRules.
   */
  readonly egressNatRules?: SubResource[] | any;
  /**
   * EnableBgp flag.
   */
  readonly enableBgp?: boolean | any;
  /**
   * EnableBgp flag.
   */
  readonly enableRateLimiting?: boolean | any;
  /**
   * List of ingress NatRules.
   */
  readonly ingressNatRules?: SubResource[] | any;
  /**
   * The IPSec Policies to be considered by this connection.
   */
  readonly ipsecPolicies?: IpsecPolicy[] | any;
  /**
   * Routing weight for vpn connection.
   */
  readonly routingWeight?: number | any;
  /**
   * SharedKey for the vpn connection.
   */
  readonly sharedKey?: string;
  /**
   * Use local azure ip to initiate connection.
   */
  readonly useLocalAzureIpAddress?: boolean | any;
  /**
   * Enable policy-based traffic selectors.
   */
  readonly usePolicyBasedTrafficSelectors?: boolean | any;
  /**
   * Connection protocol used for this connection.
   */
  readonly vpnConnectionProtocolType?: 'IKEv2' | 'IKEv1' | any;
  /**
   * vpnGatewayCustomBgpAddresses used by this connection.
   */
  readonly vpnGatewayCustomBgpAddresses?: GatewayCustomBgpIpAddressIpConfiguration[] | any;
  /**
   * Vpn link connection mode.
   */
  readonly vpnLinkConnectionMode?: 'Default' | 'ResponderOnly' | 'InitiatorOnly' | any;
  /**
   * Id of the connected vpn site link.
   */
  readonly vpnSiteLink?: SubResource | any;
}

/**
 * VpnSiteLinkProps definition.
 */
export interface VpnSiteLinkProps {
  /**
   * The set of bgp properties.
   */
  readonly bgpProperties?: VpnLinkBgpSettings | any;
  /**
   * FQDN of vpn-site-link.
   */
  readonly fqdn?: string;
  /**
   * The ip-address for the vpn-site-link.
   */
  readonly ipAddress?: string;
  /**
   * The link provider properties.
   */
  readonly linkProperties?: any;
}

/**
 * VpnSiteProps definition.
 */
export interface VpnSiteProps {
  /**
   * The AddressSpace that contains an array of IP address ranges.
   */
  readonly addressSpace?: AddressSpace | any;
  /**
   * The set of bgp properties.
   */
  readonly bgpProperties?: BgpSettings | any;
  /**
   * The device properties.
   */
  readonly deviceProperties?: any;
  /**
   * The ip-address for the vpn-site.
   */
  readonly ipAddress?: string;
  /**
   * IsSecuritySite flag.
   */
  readonly isSecuritySite?: boolean | any;
  /**
   * Office365 Policy.
   */
  readonly o365Policy?: any;
  /**
   * The key for vpn-site that can be used for connections.
   */
  readonly siteKey?: string;
  /**
   * The VirtualWAN to which the vpnSite belongs.
   */
  readonly virtualWan?: SubResource | any;
  /**
   * List of all vpn site links.
   */
  readonly vpnSiteLinks?: VpnSiteLink[] | any;
}

/**
 * WebApplicationFirewallCustomRule definition.
 */
export interface WebApplicationFirewallCustomRule {
  /**
   * Type of Actions.
   */
  readonly action?: 'Allow' | 'Block' | 'Log' | 'JSChallenge' | any;
  /**
   * List of user session identifier group by clauses.
   */
  readonly groupByUserSession?: GroupByUserSession[] | any;
  /**
   * List of match conditions.
   */
  readonly matchConditions?: MatchCondition[] | any;
  /**
   * The name of the resource that is unique within a policy. This name can be used to access the resource.
   *
   * @remarks
   * Length: 0-128 characters
   */
  readonly name?: string;
  /**
   * Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
   */
  readonly priority?: number | any;
  /**
   * Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
   */
  readonly rateLimitDuration?: 'OneMin' | 'FiveMins' | any;
  /**
   * Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
   */
  readonly rateLimitThreshold?: number | any;
  /**
   * The rule type.
   */
  readonly ruleType?: 'MatchRule' | 'RateLimitRule' | 'Invalid' | any;
  /**
   * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
   */
  readonly state?: 'Disabled' | 'Enabled' | any;
}

/**
 * WebApplicationFirewallPolicy definition.
 */
export interface WebApplicationFirewallPolicy {
  /**
   * The custom rules inside the policy.
   */
  readonly customRules?: WebApplicationFirewallCustomRule[] | any;
  /**
   * Describes the managedRules structure.
   */
  readonly managedRules?: ManagedRulesDefinition | any;
  /**
   * The PolicySettings for policy.
   */
  readonly policySettings?: PolicySettings | any;
}

/**
 * WebApplicationFirewallScrubbingRules definition.
 */
export interface WebApplicationFirewallScrubbingRules {
  /**
   * The variable to be scrubbed from the logs.
   */
  readonly matchVariable?:
    | 'RequestHeaderNames'
    | 'RequestCookieNames'
    | 'RequestArgNames'
    | 'RequestPostArgNames'
    | 'RequestJSONArgNames'
    | 'RequestIPAddress'
    | any;
  /**
   * When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
   */
  readonly selector?: string;
  /**
   * When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
   */
  readonly selectorMatchOperator?: 'Equals' | 'EqualsAny' | any;
  /**
   * Defines the state of log scrubbing rule. Default value is Enabled.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * applicationGateways_privateEndpointConnections_childResource definition.
 */
export interface applicationGateways_privateEndpointConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the application gateway private endpoint connection.
   */
  readonly name?: string;
  /**
   * Properties of the application gateway private endpoint connection.
   */
  readonly properties?: any;
}

/**
 * expressRouteCircuits_authorizations_childResource definition.
 */
export interface expressRouteCircuits_authorizations_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the authorization.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit authorization.
   */
  readonly properties?: Authorization | any;
}

/**
 * expressRouteCircuits_peerings_childResource definition.
 */
export interface expressRouteCircuits_peerings_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit peering.
   */
  readonly properties?: ExpressRouteCircuitPeering | any;
}

/**
 * expressRouteCircuits_peerings_connections_childResource definition.
 */
export interface expressRouteCircuits_peerings_connections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the express route circuit connection.
   */
  readonly name?: string;
  /**
   * Properties of the express route circuit connection.
   */
  readonly properties?: ExpressRouteCircuitConnection | any;
}

/**
 * expressRouteCrossConnections_peerings_childResource definition.
 */
export interface expressRouteCrossConnections_peerings_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name?: string;
  /**
   * Properties of the express route cross connection peering.
   */
  readonly properties?: any;
}

/**
 * expressRouteGateways_expressRouteConnections_childResource definition.
 */
export interface expressRouteGateways_expressRouteConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection subresource.
   */
  readonly name?: string;
  /**
   * Properties of the express route connection.
   */
  readonly properties?: any;
}

/**
 * expressRoutePorts_authorizations_childResource definition.
 */
export interface expressRoutePorts_authorizations_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the authorization.
   */
  readonly name?: string;
  /**
   * ExpressRoutePort properties.
   */
  readonly properties?: ExpressRoutePortAuthorization | any;
}

/**
 * firewallPolicies_firewallPolicyDrafts_childResource definition.
 */
export interface firewallPolicies_firewallPolicyDrafts_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Properties of the firewall policy.
   */
  readonly properties?: any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * firewallPolicies_ruleCollectionGroups_childResource definition.
 */
export interface firewallPolicies_ruleCollectionGroups_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the FirewallPolicyRuleCollectionGroup.
   */
  readonly name?: string;
  /**
   * The properties of the firewall policy rule collection group.
   */
  readonly properties?: any;
}

/**
 * firewallPolicies_ruleCollectionGroups_ruleCollectionGroupDrafts_childResource definition.
 */
export interface firewallPolicies_ruleCollectionGroups_ruleCollectionGroupDrafts_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * The properties of the firewall policy rule collection group.
   */
  readonly properties?: any;
}

/**
 * firewallPolicies_signatureOverrides_childResource definition.
 */
export interface firewallPolicies_signatureOverrides_childResource {
  /**
   * Will contain the resource id of the signature override resource
   */
  readonly id?: string;
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Will contain the properties of the resource (the actual signature overrides)
   */
  readonly properties?: any;
}

/**
 * loadBalancers_backendAddressPools_childResource definition.
 */
export interface loadBalancers_backendAddressPools_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the backend address pool.
   */
  readonly name?: string;
  /**
   * Properties of load balancer backend address pool.
   */
  readonly properties?: BackendAddressPool | any;
}

/**
 * loadBalancers_inboundNatRules_childResource definition.
 */
export interface loadBalancers_inboundNatRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the inbound NAT rule.
   */
  readonly name?: string;
  /**
   * Properties of load balancer inbound NAT rule.
   */
  readonly properties?: InboundNatRule | any;
}

/**
 * networkInterfaces_tapConfigurations_childResource definition.
 */
export interface networkInterfaces_tapConfigurations_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the tap configuration.
   */
  readonly name?: string;
  /**
   * Properties of the Virtual Network Tap configuration.
   */
  readonly properties?: NetworkInterfaceTapConfiguration | any;
}

/**
 * networkManagers_connectivityConfigurations_childResource definition.
 */
export interface networkManagers_connectivityConfigurations_childResource {
  /**
   * The name of the network manager connectivity configuration.
   */
  readonly name?: string;
  /**
   * Properties of a network manager connectivity configuration
   */
  readonly properties?: any;
}

/**
 * networkManagers_ipamPools_childResource definition.
 */
export interface networkManagers_ipamPools_childResource {
  /**
   * The geo-location where the resource lives
   */
  readonly location?: string;
  /**
   * IP Address Manager Pool resource name.
   */
  readonly name?: string | any;
  /**
   * Properties of IpamPool resource properties which are specific to the Pool resource.
   */
  readonly properties?: IpamPoolProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * networkManagers_ipamPools_staticCidrs_childResource definition.
 */
export interface networkManagers_ipamPools_staticCidrs_childResource {
  /**
   * Static Cidr allocation name.
   */
  readonly name?: string | any;
  /**
   * Properties of static CIDR resource.
   */
  readonly properties?: StaticCidrProps | any;
}

/**
 * networkManagers_networkGroups_childResource definition.
 */
export interface networkManagers_networkGroups_childResource {
  /**
   * The name of the network group.
   */
  readonly name?: string;
  /**
   * The Network Group properties
   */
  readonly properties?: NetworkGroupProps | any;
}

/**
 * networkManagers_networkGroups_staticMembers_childResource definition.
 */
export interface networkManagers_networkGroups_staticMembers_childResource {
  /**
   * The name of the static member.
   */
  readonly name?: string;
  /**
   * The Static Member properties
   */
  readonly properties?: StaticMemberProps | any;
}

/**
 * networkManagers_scopeConnections_childResource definition.
 */
export interface networkManagers_scopeConnections_childResource {
  /**
   * Name for the cross-tenant connection.
   */
  readonly name?: string;
  /**
   * The scope connection properties
   */
  readonly properties?: ScopeConnectionProps | any;
}

/**
 * networkManagers_securityAdminConfigurations_childResource definition.
 */
export interface networkManagers_securityAdminConfigurations_childResource {
  /**
   * The name of the network manager Security Configuration.
   */
  readonly name?: string;
  /**
   * Indicates the properties for the network manager security admin configuration.
   */
  readonly properties?: SecurityAdminConfiguration | any;
}

/**
 * networkManagers_securityAdminConfigurations_ruleCollections_childResource definition.
 */
export interface networkManagers_securityAdminConfigurations_ruleCollections_childResource {
  /**
   * The name of the network manager security Configuration rule collection.
   */
  readonly name?: string;
  /**
   * Indicates the properties for the network manager admin rule collection.
   */
  readonly properties?: AdminRuleCollection | any;
}

/**
 * networkManagers_securityAdminConfigurations_ruleCollections_rules_childResource definition.
 */
export interface networkManagers_securityAdminConfigurations_ruleCollections_rules_childResource {
  /**
   * The name of the rule.
   */
  readonly name?: string;
}

/**
 * networkManagers_securityUserConfigurations_childResource definition.
 */
export interface networkManagers_securityUserConfigurations_childResource {
  /**
   * The name of the network manager Security Configuration.
   */
  readonly name?: string | any;
  /**
   * Indicates the properties for the network manager security user configuration.
   */
  readonly properties?: SecurityUserConfiguration | any;
}

/**
 * networkManagers_securityUserConfigurations_ruleCollections_childResource definition.
 */
export interface networkManagers_securityUserConfigurations_ruleCollections_childResource {
  /**
   * The name of the network manager security Configuration rule collection.
   */
  readonly name?: string | any;
  /**
   * Indicates the properties for the network manager security user rule collection.
   */
  readonly properties?: SecurityUserRuleCollection | any;
}

/**
 * networkManagers_securityUserConfigurations_ruleCollections_rules_childResource definition.
 */
export interface networkManagers_securityUserConfigurations_ruleCollections_rules_childResource {
  /**
   * The name of the rule.
   */
  readonly name?: string | any;
  /**
   * Indicates the properties of the security user rule
   */
  readonly properties?: SecurityUserRule | any;
}

/**
 * networkManagers_verifierWorkspaces_childResource definition.
 */
export interface networkManagers_verifierWorkspaces_childResource {
  /**
   * The geo-location where the resource lives
   */
  readonly location?: string;
  /**
   * Workspace name.
   */
  readonly name?: string | any;
  /**
   * Properties of Verifier Workspace resource.
   */
  readonly properties?: VerifierWorkspaceProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * networkManagers_verifierWorkspaces_reachabilityAnalysisIntents_childResource definition.
 */
export interface networkManagers_verifierWorkspaces_reachabilityAnalysisIntents_childResource {
  /**
   * Reachability Analysis Intent name.
   */
  readonly name?: string | any;
  /**
   * Represents the Reachability Analysis Intent properties.
   */
  readonly properties?: ReachabilityAnalysisIntentProps | any;
}

/**
 * networkManagers_verifierWorkspaces_reachabilityAnalysisRuns_childResource definition.
 */
export interface networkManagers_verifierWorkspaces_reachabilityAnalysisRuns_childResource {
  /**
   * Reachability Analysis Run name.
   */
  readonly name?: string | any;
  /**
   * Represents the Reachability Analysis Run properties.
   */
  readonly properties?: ReachabilityAnalysisRunProps | any;
}

/**
 * networkSecurityGroups_securityRules_childResource definition.
 */
export interface networkSecurityGroups_securityRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the security rule.
   */
  readonly name?: string;
  /**
   * Properties of the security rule.
   */
  readonly properties?: SecurityRule | any;
}

/**
 * networkSecurityPerimeters_links_childResource definition.
 */
export interface networkSecurityPerimeters_links_childResource {
  /**
   * The name of the NSP link.
   */
  readonly name?: string | any;
  /**
   * Properties of the network security perimeter link resource.
   */
  readonly properties?: NspLinkProps | any;
}

/**
 * networkSecurityPerimeters_loggingConfigurations_childResource definition.
 */
export interface networkSecurityPerimeters_loggingConfigurations_childResource {
  /**
   * The name of the NSP logging configuration. Accepts 'instance' as name.
   */
  readonly name?: string | any;
  /**
   * Properties of the NSP logging configuration.
   */
  readonly properties?: NspLoggingConfigurationProps | any;
}

/**
 * networkSecurityPerimeters_profiles_accessRules_childResource definition.
 */
export interface networkSecurityPerimeters_profiles_accessRules_childResource {
  /**
   * The name of the NSP access rule.
   */
  readonly name?: string | any;
  /**
   * Properties of the NSP access rule.
   */
  readonly properties?: any | any;
}

/**
 * networkSecurityPerimeters_profiles_childResource definition.
 */
export interface networkSecurityPerimeters_profiles_childResource {
  /**
   * The name of the NSP profile.
   */
  readonly name?: string | any;
  /**
   * Properties of the network security perimeter profile
   */
  readonly properties?: any | any;
}

/**
 * networkSecurityPerimeters_resourceAssociations_childResource definition.
 */
export interface networkSecurityPerimeters_resourceAssociations_childResource {
  /**
   * The name of the NSP association.
   */
  readonly name?: string | any;
  /**
   * Properties of the NSP resource association.
   */
  readonly properties?: any | any;
}

/**
 * networkVirtualAppliances_inboundSecurityRules_childResource definition.
 */
export interface networkVirtualAppliances_inboundSecurityRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of security rule collection.
   */
  readonly name?: string;
  /**
   * The properties of the Inbound Security Rules.
   */
  readonly properties?: any | any;
}

/**
 * networkVirtualAppliances_networkVirtualApplianceConnections_childResource definition.
 */
export interface networkVirtualAppliances_networkVirtualApplianceConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the NVA connection.
   */
  readonly name?: string | any;
  /**
   * Properties of the express route connection.
   */
  readonly properties?: any | any;
}

/**
 * networkVirtualAppliances_virtualApplianceSites_childResource definition.
 */
export interface networkVirtualAppliances_virtualApplianceSites_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the site.
   */
  readonly name?: string;
  /**
   * The properties of the Virtual Appliance Sites.
   */
  readonly properties?: any | any;
}

/**
 * networkWatchers_connectionMonitors_childResource definition.
 */
export interface networkWatchers_connectionMonitors_childResource {
  /**
   * Connection monitor location.
   */
  readonly location?: string;
  /**
   * The name of the connection monitor.
   */
  readonly name?: string;
  /**
   * Properties of the connection monitor.
   */
  readonly properties?: ConnectionMonitorParameters | any;
  /**
   * Connection monitor tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * networkWatchers_flowLogs_childResource definition.
 */
export interface networkWatchers_flowLogs_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * FlowLog resource Managed Identity
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the flow log.
   */
  readonly name?: string;
  /**
   * Properties of the flow log.
   */
  readonly properties?: FlowLog | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * networkWatchers_packetCaptures_childResource definition.
 */
export interface networkWatchers_packetCaptures_childResource {
  /**
   * The name of the packet capture session.
   */
  readonly name?: string;
  /**
   * Properties of the packet capture.
   */
  readonly properties?: PacketCaptureParameters | any;
}

/**
 * privateEndpoints_privateDnsZoneGroups_childResource definition.
 */
export interface privateEndpoints_privateDnsZoneGroups_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the private dns zone group.
   */
  readonly name?: string;
  /**
   * Properties of the private dns zone group.
   */
  readonly properties?: PrivateDnsZoneGroup | any;
}

/**
 * privateLinkServices_privateEndpointConnections_childResource definition.
 */
export interface privateLinkServices_privateEndpointConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the private end point connection.
   */
  readonly name?: string;
  /**
   * Properties of the private end point connection.
   */
  readonly properties?: any | any;
}

/**
 * routeFilters_routeFilterRules_childResource definition.
 */
export interface routeFilters_routeFilterRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the route filter rule.
   */
  readonly name?: string;
  /**
   * Properties of the route filter rule.
   */
  readonly properties?: RouteFilterRule | any;
}

/**
 * routeTables_routes_childResource definition.
 */
export interface routeTables_routes_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the route.
   */
  readonly name?: string;
  /**
   * Properties of the route.
   */
  readonly properties?: Route | any;
}

/**
 * serviceEndpointPolicies_serviceEndpointPolicyDefinitions_childResource definition.
 */
export interface serviceEndpointPolicies_serviceEndpointPolicyDefinitions_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the service endpoint policy definition name.
   */
  readonly name?: string;
  /**
   * Properties of the service endpoint policy definition.
   */
  readonly properties?: ServiceEndpointPolicyDefinition | any;
}

/**
 * virtualHubs_bgpConnections_childResource definition.
 */
export interface virtualHubs_bgpConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection.
   */
  readonly name?: string;
  /**
   * The properties of the Bgp connections.
   */
  readonly properties?: any | any;
}

/**
 * virtualHubs_hubRouteTables_childResource definition.
 */
export interface virtualHubs_hubRouteTables_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the RouteTable.
   */
  readonly name?: string;
  /**
   * Properties of the RouteTable resource.
   */
  readonly properties?: any | any;
}

/**
 * virtualHubs_hubVirtualNetworkConnections_childResource definition.
 */
export interface virtualHubs_hubVirtualNetworkConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the HubVirtualNetworkConnection.
   */
  readonly name?: string;
  /**
   * Properties of the hub virtual network connection.
   */
  readonly properties?: any | any;
}

/**
 * virtualHubs_ipConfigurations_childResource definition.
 */
export interface virtualHubs_ipConfigurations_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the ipconfig.
   */
  readonly name?: string;
  /**
   * The properties of the Virtual Hub IPConfigurations.
   */
  readonly properties?: HubIPConfiguration | any;
}

/**
 * virtualHubs_routeMaps_childResource definition.
 */
export interface virtualHubs_routeMaps_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the RouteMap.
   */
  readonly name?: string;
  /**
   * Properties of the RouteMap resource.
   */
  readonly properties?: any | any;
}

/**
 * virtualHubs_routeTables_childResource definition.
 */
export interface virtualHubs_routeTables_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the VirtualHubRouteTableV2.
   */
  readonly name?: string;
  /**
   * Properties of the virtual hub route table v2.
   */
  readonly properties?: any;
}

/**
 * virtualHubs_routingIntent_childResource definition.
 */
export interface virtualHubs_routingIntent_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the per VirtualHub singleton Routing Intent resource.
   */
  readonly name?: string;
  /**
   * Properties of the RoutingIntent resource.
   */
  readonly properties?: any | any;
}

/**
 * virtualNetworkGateways_natRules_childResource definition.
 */
export interface virtualNetworkGateways_natRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the nat rule.
   */
  readonly name?: string;
  /**
   * Properties of the Virtual Network Gateway NAT rule.
   */
  readonly properties?: any;
}

/**
 * virtualNetworks_subnets_childResource definition.
 */
export interface virtualNetworks_subnets_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the subnet.
   */
  readonly name?: string;
  /**
   * Properties of the subnet.
   */
  readonly properties?: Subnet | any;
}

/**
 * virtualNetworks_virtualNetworkPeerings_childResource definition.
 */
export interface virtualNetworks_virtualNetworkPeerings_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name?: string;
  /**
   * Properties of the virtual network peering.
   */
  readonly properties?: VirtualNetworkPeering | any;
}

/**
 * virtualRouters_peerings_childResource definition.
 */
export interface virtualRouters_peerings_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the Virtual Router Peering.
   */
  readonly name?: string;
  /**
   * The properties of the Virtual Router Peering.
   */
  readonly properties?: any | any;
}

/**
 * vpnGateways_natRules_childResource definition.
 */
export interface vpnGateways_natRules_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the nat rule.
   */
  readonly name?: string;
  /**
   * Properties of the VpnGateway NAT rule.
   */
  readonly properties?: any;
}

/**
 * vpnGateways_vpnConnections_childResource definition.
 */
export interface vpnGateways_vpnConnections_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection.
   */
  readonly name?: string;
  /**
   * Properties of the VPN connection.
   */
  readonly properties?: any;
}

/**
 * vpnServerConfigurations_configurationPolicyGroups_childResource definition.
 */
export interface vpnServerConfigurations_configurationPolicyGroups_childResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the ConfigurationPolicyGroup.
   */
  readonly name?: string;
  /**
   * Properties of the VpnServerConfigurationPolicyGroup.
   */
  readonly properties?: any;
}

/**
 * Properties for Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies
 *
 * **ARM Resource Type**: `Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmApplicationGatewayWebApplicationFirewallPoliciesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the policy.
   *
   * @remarks
   * Length: 0-128 characters
   */
  readonly name: string;
  /**
   * Properties of the web application firewall policy.
   */
  readonly properties: WebApplicationFirewallPolicy | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/ExpressRoutePorts (L1 construct).
 *
 * @remarks
 * Microsoft.Network/ExpressRoutePorts
 *
 * **ARM Resource Type**: `Microsoft.Network/ExpressRoutePorts`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRoutePortsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The identity of ExpressRoutePort, if configured.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the ExpressRoutePort resource.
   */
  readonly name: string;
  /**
   * ExpressRoutePort properties.
   */
  readonly properties: ExpressRoutePort | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/IpAllocations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/IpAllocations
 *
 * **ARM Resource Type**: `Microsoft.Network/IpAllocations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmIpAllocationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the IpAllocation.
   */
  readonly name: string;
  /**
   * Properties of the IpAllocation.
   */
  readonly properties: IpAllocation | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/applicationGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/applicationGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/applicationGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmApplicationGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The identity of the application gateway, if configured.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the application gateway.
   */
  readonly name: string;
  /**
   * Properties of the application gateway.
   */
  readonly properties: ApplicationGateway | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting where the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/applicationGateways/privateEndpointConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/applicationGateways/privateEndpointConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/applicationGateways/privateEndpointConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmApplicationGatewaysPrivateEndpointConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the application gateway private endpoint connection.
   */
  readonly name: string;
  /**
   * Properties of the application gateway private endpoint connection.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/applicationSecurityGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/applicationSecurityGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/applicationSecurityGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmApplicationSecurityGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the application security group.
   */
  readonly name: string;
  /**
   * Properties of the application security group.
   */
  readonly properties: ApplicationSecurityGroup | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/azureFirewalls (L1 construct).
 *
 * @remarks
 * Microsoft.Network/azureFirewalls
 *
 * **ARM Resource Type**: `Microsoft.Network/azureFirewalls`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmAzureFirewallsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the Azure Firewall.
   *
   * @remarks
   * Length: 1-56 characters
   */
  readonly name: string;
  /**
   * Properties of the azure firewall.
   */
  readonly properties: AzureFirewall | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting where the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/bastionHosts (L1 construct).
 *
 * @remarks
 * Microsoft.Network/bastionHosts
 *
 * **ARM Resource Type**: `Microsoft.Network/bastionHosts`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmBastionHostsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the Bastion Host.
   */
  readonly name: string;
  /**
   * Represents the bastion host resource.
   */
  readonly properties: BastionHost | any;
  /**
   * The sku of this Bastion Host.
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting where the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/connections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/connections
 *
 * **ARM Resource Type**: `Microsoft.Network/connections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the virtual network gateway connection.
   */
  readonly name: string;
  /**
   * Properties of the virtual network gateway connection.
   */
  readonly properties: VirtualNetworkGatewayConnection | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/customIpPrefixes (L1 construct).
 *
 * @remarks
 * Microsoft.Network/customIpPrefixes
 *
 * **ARM Resource Type**: `Microsoft.Network/customIpPrefixes`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmCustomIpPrefixesProps {
  /**
   * The extended location of the custom IP prefix.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the custom IP prefix.
   */
  readonly name: string;
  /**
   * Custom IP prefix properties.
   */
  readonly properties: CustomIpPrefix | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the IP allocated for the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/ddosCustomPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Network/ddosCustomPolicies
 *
 * **ARM Resource Type**: `Microsoft.Network/ddosCustomPolicies`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDdosCustomPoliciesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the DDoS custom policy.
   */
  readonly name: string;
  /**
   * Properties of the DDoS custom policy.
   */
  readonly properties: DdosCustomPolicy | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/ddosProtectionPlans (L1 construct).
 *
 * @remarks
 * Microsoft.Network/ddosProtectionPlans
 *
 * **ARM Resource Type**: `Microsoft.Network/ddosProtectionPlans`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDdosProtectionPlansProps {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the DDoS protection plan.
   */
  readonly name: string;
  /**
   * Properties of the DDoS protection plan.
   */
  readonly properties: DdosProtectionPlan | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/dscpConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/dscpConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/dscpConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmDscpConfigurationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the resource.
   */
  readonly name: string;
  /**
   * Properties of the network interface.
   */
  readonly properties: DscpConfiguration | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCircuits (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCircuits
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCircuits`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCircuitsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the circuit.
   */
  readonly name: string;
  /**
   * Properties of the express route circuit.
   */
  readonly properties: ExpressRouteCircuit | any;
  /**
   * The SKU.
   */
  readonly sku?: ExpressRouteCircuitSku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCircuits/authorizations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCircuits/authorizations
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCircuits/authorizations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCircuitsAuthorizationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the authorization.
   */
  readonly name: string;
  /**
   * Properties of the express route circuit authorization.
   */
  readonly properties: Authorization | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCircuits/peerings (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCircuits/peerings
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCircuits/peerings`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCircuitsPeeringsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name: string;
  /**
   * Properties of the express route circuit peering.
   */
  readonly properties: ExpressRouteCircuitPeering | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCircuits/peerings/connections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCircuits/peerings/connections
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCircuits/peerings/connections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCircuitsPeeringsConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the express route circuit connection.
   */
  readonly name: string;
  /**
   * Properties of the express route circuit connection.
   */
  readonly properties: ExpressRouteCircuitConnection | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCrossConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCrossConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCrossConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCrossConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the ExpressRouteCrossConnection.
   */
  readonly name: string;
  /**
   * Properties of the express route cross connection.
   */
  readonly properties: any | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/expressRouteCrossConnections/peerings (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteCrossConnections/peerings
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteCrossConnections/peerings`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteCrossConnectionsPeeringsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name: string;
  /**
   * Properties of the express route cross connection peering.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/expressRouteGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the ExpressRoute gateway.
   */
  readonly name: string;
  /**
   * Properties of the express route gateway.
   */
  readonly properties: any | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/expressRouteGateways/expressRouteConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRouteGateways/expressRouteConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRouteGateways/expressRouteConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRouteGatewaysExpressRouteConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection subresource.
   */
  readonly name: string;
  /**
   * Properties of the express route connection.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/expressRoutePorts/authorizations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/expressRoutePorts/authorizations
 *
 * **ARM Resource Type**: `Microsoft.Network/expressRoutePorts/authorizations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmExpressRoutePortsAuthorizationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the authorization.
   */
  readonly name: string;
  /**
   * ExpressRoutePort properties.
   */
  readonly properties: ExpressRoutePortAuthorization | any;
}

/**
 * Properties for Microsoft.Network/firewallPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Network/firewallPolicies
 *
 * **ARM Resource Type**: `Microsoft.Network/firewallPolicies`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmFirewallPoliciesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The identity of the firewall policy.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the Firewall Policy.
   */
  readonly name: string;
  /**
   * Properties of the firewall policy.
   */
  readonly properties: FirewallPolicy | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/firewallPolicies/firewallPolicyDrafts (L1 construct).
 *
 * @remarks
 * Microsoft.Network/firewallPolicies/firewallPolicyDrafts
 *
 * **ARM Resource Type**: `Microsoft.Network/firewallPolicies/firewallPolicyDrafts`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmFirewallPoliciesFirewallPolicyDraftsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties of the firewall policy.
   */
  readonly properties: any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/firewallPolicies/ruleCollectionGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/firewallPolicies/ruleCollectionGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/firewallPolicies/ruleCollectionGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmFirewallPoliciesRuleCollectionGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the FirewallPolicyRuleCollectionGroup.
   */
  readonly name: string;
  /**
   * The properties of the firewall policy rule collection group.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollectionGroupDrafts (L1 construct).
 *
 * @remarks
 * Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollectionGroupDrafts
 *
 * **ARM Resource Type**: `Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollectionGroupDrafts`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmFirewallPoliciesRuleCollectionGroupsRuleCollectionGroupDraftsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * The properties of the firewall policy rule collection group.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/firewallPolicies/signatureOverrides (L1 construct).
 *
 * @remarks
 * Microsoft.Network/firewallPolicies/signatureOverrides
 *
 * **ARM Resource Type**: `Microsoft.Network/firewallPolicies/signatureOverrides`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmFirewallPoliciesSignatureOverridesProps {
  /**
   * Will contain the resource id of the signature override resource
   */
  readonly id?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Will contain the properties of the resource (the actual signature overrides)
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/ipGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/ipGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/ipGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmIpGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the ipGroups.
   */
  readonly name: string;
  /**
   * Properties of the IpGroups.
   */
  readonly properties: IpGroup | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/loadBalancers (L1 construct).
 *
 * @remarks
 * Microsoft.Network/loadBalancers
 *
 * **ARM Resource Type**: `Microsoft.Network/loadBalancers`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLoadBalancersProps {
  /**
   * The extended location of the load balancer.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the load balancer.
   */
  readonly name: string;
  /**
   * Properties of load balancer.
   */
  readonly properties: LoadBalancer | any;
  /**
   * The load balancer SKU.
   */
  readonly sku?: LoadBalancerSku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/loadBalancers/backendAddressPools (L1 construct).
 *
 * @remarks
 * Microsoft.Network/loadBalancers/backendAddressPools
 *
 * **ARM Resource Type**: `Microsoft.Network/loadBalancers/backendAddressPools`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLoadBalancersBackendAddressPoolsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the backend address pool.
   */
  readonly name: string;
  /**
   * Properties of load balancer backend address pool.
   */
  readonly properties: BackendAddressPool | any;
}

/**
 * Properties for Microsoft.Network/loadBalancers/inboundNatRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/loadBalancers/inboundNatRules
 *
 * **ARM Resource Type**: `Microsoft.Network/loadBalancers/inboundNatRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLoadBalancersInboundNatRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the inbound NAT rule.
   */
  readonly name: string;
  /**
   * Properties of load balancer inbound NAT rule.
   */
  readonly properties: InboundNatRule | any;
}

/**
 * Properties for Microsoft.Network/localNetworkGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/localNetworkGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/localNetworkGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLocalNetworkGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the local network gateway.
   *
   * @remarks
   * Length: 1-unlimited characters
   */
  readonly name: string;
  /**
   * Properties of the local network gateway.
   */
  readonly properties: LocalNetworkGateway | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/natGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/natGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/natGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNatGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the nat gateway.
   */
  readonly name: string;
  /**
   * Nat Gateway properties.
   */
  readonly properties: NatGateway | any;
  /**
   * The nat gateway SKU.
   */
  readonly sku?: NatGatewaySku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the zone in which Nat Gateway should be deployed.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/networkInterfaces (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkInterfaces
 *
 * **ARM Resource Type**: `Microsoft.Network/networkInterfaces`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkInterfacesProps {
  /**
   * The extended location of the network interface.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the network interface.
   */
  readonly name: string;
  /**
   * Properties of the network interface.
   */
  readonly properties: NetworkInterface | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkInterfaces/tapConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkInterfaces/tapConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkInterfaces/tapConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkInterfacesTapConfigurationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the tap configuration.
   */
  readonly name: string;
  /**
   * Properties of the Virtual Network Tap configuration.
   */
  readonly properties: NetworkInterfaceTapConfiguration | any;
}

/**
 * Properties for Microsoft.Network/networkManagers (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the network manager.
   */
  readonly name: string | any;
  /**
   * The network manager properties
   */
  readonly properties: any | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/connectivityConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/connectivityConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/connectivityConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersConnectivityConfigurationsProps {
  /**
   * The name of the network manager connectivity configuration.
   */
  readonly name: string;
  /**
   * Properties of a network manager connectivity configuration
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/networkManagers/ipamPools (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/ipamPools
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/ipamPools`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersIpamPoolsProps {
  /**
   * The geo-location where the resource lives
   */
  readonly location?: string;
  /**
   * IP Address Manager Pool resource name.
   */
  readonly name: string | any;
  /**
   * Properties of IpamPool resource properties which are specific to the Pool resource.
   */
  readonly properties: IpamPoolProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/ipamPools/staticCidrs (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/ipamPools/staticCidrs
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/ipamPools/staticCidrs`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersIpamPoolsStaticCidrsProps {
  /**
   * Static Cidr allocation name.
   */
  readonly name: string | any;
  /**
   * Properties of static CIDR resource.
   */
  readonly properties: StaticCidrProps | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/networkGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/networkGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/networkGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersNetworkGroupsProps {
  /**
   * The name of the network group.
   */
  readonly name: string;
  /**
   * The Network Group properties
   */
  readonly properties: NetworkGroupProps | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/networkGroups/staticMembers (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/networkGroups/staticMembers
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/networkGroups/staticMembers`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersNetworkGroupsStaticMembersProps {
  /**
   * The name of the static member.
   */
  readonly name: string;
  /**
   * The Static Member properties
   */
  readonly properties: StaticMemberProps | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/scopeConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/scopeConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/scopeConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersScopeConnectionsProps {
  /**
   * Name for the cross-tenant connection.
   */
  readonly name: string;
  /**
   * The scope connection properties
   */
  readonly properties: ScopeConnectionProps | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityAdminConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityAdminConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityAdminConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityAdminConfigurationsProps {
  /**
   * The name of the network manager Security Configuration.
   */
  readonly name: string;
  /**
   * Indicates the properties for the network manager security admin configuration.
   */
  readonly properties: SecurityAdminConfiguration | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityAdminConfigurationsRuleCollectionsProps {
  /**
   * The name of the network manager security Configuration rule collection.
   */
  readonly name: string;
  /**
   * Indicates the properties for the network manager admin rule collection.
   */
  readonly properties: AdminRuleCollection | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityAdminConfigurationsRuleCollectionsRulesProps {
  /**
   * The name of the rule.
   */
  readonly name: string;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityUserConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityUserConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityUserConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityUserConfigurationsProps {
  /**
   * The name of the network manager Security Configuration.
   */
  readonly name: string | any;
  /**
   * Indicates the properties for the network manager security user configuration.
   */
  readonly properties: SecurityUserConfiguration | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityUserConfigurationsRuleCollectionsProps {
  /**
   * The name of the network manager security Configuration rule collection.
   */
  readonly name: string | any;
  /**
   * Indicates the properties for the network manager security user rule collection.
   */
  readonly properties: SecurityUserRuleCollection | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersSecurityUserConfigurationsRuleCollectionsRulesProps {
  /**
   * The name of the rule.
   */
  readonly name: string | any;
  /**
   * Indicates the properties of the security user rule
   */
  readonly properties: SecurityUserRule | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/verifierWorkspaces (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/verifierWorkspaces
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/verifierWorkspaces`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersVerifierWorkspacesProps {
  /**
   * The geo-location where the resource lives
   */
  readonly location?: string;
  /**
   * Workspace name.
   */
  readonly name: string | any;
  /**
   * Properties of Verifier Workspace resource.
   */
  readonly properties: VerifierWorkspaceProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisIntents (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisIntents
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisIntents`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersVerifierWorkspacesReachabilityAnalysisIntentsProps {
  /**
   * Reachability Analysis Intent name.
   */
  readonly name: string | any;
  /**
   * Represents the Reachability Analysis Intent properties.
   */
  readonly properties: ReachabilityAnalysisIntentProps | any;
}

/**
 * Properties for Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisRuns (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisRuns
 *
 * **ARM Resource Type**: `Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisRuns`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkManagersVerifierWorkspacesReachabilityAnalysisRunsProps {
  /**
   * Reachability Analysis Run name.
   */
  readonly name: string | any;
  /**
   * Represents the Reachability Analysis Run properties.
   */
  readonly properties: ReachabilityAnalysisRunProps | any;
}

/**
 * Properties for Microsoft.Network/networkProfiles (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkProfiles
 *
 * **ARM Resource Type**: `Microsoft.Network/networkProfiles`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkProfilesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the network profile.
   */
  readonly name: string;
  /**
   * Network profile properties.
   */
  readonly properties: NetworkProfile | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the network security group.
   */
  readonly name: string;
  /**
   * Properties of the network security group.
   */
  readonly properties: NetworkSecurityGroup | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityGroups/securityRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityGroups/securityRules
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityGroups/securityRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityGroupsSecurityRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the security rule.
   */
  readonly name: string;
  /**
   * Properties of the security rule.
   */
  readonly properties: SecurityRule | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersProps {
  /**
   * The geo-location where the resource lives
   */
  readonly location?: string;
  /**
   * The name of the network security perimeter.
   */
  readonly name: string | any;
  /**
   * The network security perimeter properties
   */
  readonly properties: NetworkSecurityPerimeterProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters/links (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters/links
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters/links`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersLinksProps {
  /**
   * The name of the NSP link.
   */
  readonly name: string | any;
  /**
   * Properties of the network security perimeter link resource.
   */
  readonly properties: NspLinkProps | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters/loggingConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters/loggingConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters/loggingConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersLoggingConfigurationsProps {
  /**
   * The name of the NSP logging configuration. Accepts 'instance' as name.
   */
  readonly name: string | any;
  /**
   * Properties of the NSP logging configuration.
   */
  readonly properties: NspLoggingConfigurationProps | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters/profiles (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters/profiles
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters/profiles`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersProfilesProps {
  /**
   * The name of the NSP profile.
   */
  readonly name: string | any;
  /**
   * Properties of the network security perimeter profile
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters/profiles/accessRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters/profiles/accessRules
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters/profiles/accessRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersProfilesAccessRulesProps {
  /**
   * The name of the NSP access rule.
   */
  readonly name: string | any;
  /**
   * Properties of the NSP access rule.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkSecurityPerimeters/resourceAssociations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkSecurityPerimeters/resourceAssociations
 *
 * **ARM Resource Type**: `Microsoft.Network/networkSecurityPerimeters/resourceAssociations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkSecurityPerimetersResourceAssociationsProps {
  /**
   * The name of the NSP association.
   */
  readonly name: string | any;
  /**
   * Properties of the NSP resource association.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkVirtualAppliances (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkVirtualAppliances
 *
 * **ARM Resource Type**: `Microsoft.Network/networkVirtualAppliances`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkVirtualAppliancesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The service principal that has read access to cloud-init and config blob.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of Network Virtual Appliance.
   */
  readonly name: string;
  /**
   * Properties of the Network Virtual Appliance.
   */
  readonly properties: NetworkVirtualAppliance | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkVirtualAppliances/inboundSecurityRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkVirtualAppliances/inboundSecurityRules
 *
 * **ARM Resource Type**: `Microsoft.Network/networkVirtualAppliances/inboundSecurityRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkVirtualAppliancesInboundSecurityRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of security rule collection.
   */
  readonly name: string;
  /**
   * The properties of the Inbound Security Rules.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkVirtualAppliances/networkVirtualApplianceConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkVirtualAppliances/networkVirtualApplianceConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/networkVirtualAppliances/networkVirtualApplianceConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkVirtualAppliancesNetworkVirtualApplianceConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the NVA connection.
   */
  readonly name: string | any;
  /**
   * Properties of the express route connection.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkVirtualAppliances/virtualApplianceSites (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkVirtualAppliances/virtualApplianceSites
 *
 * **ARM Resource Type**: `Microsoft.Network/networkVirtualAppliances/virtualApplianceSites`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkVirtualAppliancesVirtualApplianceSitesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the site.
   */
  readonly name: string;
  /**
   * The properties of the Virtual Appliance Sites.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/networkWatchers (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkWatchers
 *
 * **ARM Resource Type**: `Microsoft.Network/networkWatchers`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkWatchersProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the network watcher.
   */
  readonly name: string;
  /**
   * Properties of the network watcher.
   */
  readonly properties: NetworkWatcher | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkWatchers/connectionMonitors (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkWatchers/connectionMonitors
 *
 * **ARM Resource Type**: `Microsoft.Network/networkWatchers/connectionMonitors`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkWatchersConnectionMonitorsProps {
  /**
   * Connection monitor location.
   */
  readonly location?: string;
  /**
   * The name of the connection monitor.
   */
  readonly name: string;
  /**
   * Properties of the connection monitor.
   */
  readonly properties: ConnectionMonitorParameters | any;
  /**
   * Connection monitor tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkWatchers/flowLogs (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkWatchers/flowLogs
 *
 * **ARM Resource Type**: `Microsoft.Network/networkWatchers/flowLogs`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkWatchersFlowLogsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * FlowLog resource Managed Identity
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the flow log.
   */
  readonly name: string;
  /**
   * Properties of the flow log.
   */
  readonly properties: FlowLog | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/networkWatchers/packetCaptures (L1 construct).
 *
 * @remarks
 * Microsoft.Network/networkWatchers/packetCaptures
 *
 * **ARM Resource Type**: `Microsoft.Network/networkWatchers/packetCaptures`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmNetworkWatchersPacketCapturesProps {
  /**
   * The name of the packet capture session.
   */
  readonly name: string;
  /**
   * Properties of the packet capture.
   */
  readonly properties: PacketCaptureParameters | any;
}

/**
 * Properties for Microsoft.Network/p2svpnGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/p2svpnGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/p2svpnGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmP2svpnGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the gateway.
   */
  readonly name: string;
  /**
   * Properties of the P2SVpnGateway.
   */
  readonly properties: P2SVpnGatewayProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/privateEndpoints (L1 construct).
 *
 * @remarks
 * Microsoft.Network/privateEndpoints
 *
 * **ARM Resource Type**: `Microsoft.Network/privateEndpoints`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPrivateEndpointsProps {
  /**
   * The extended location of the load balancer.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the private endpoint.
   */
  readonly name: string;
  /**
   * Properties of the private endpoint.
   */
  readonly properties: PrivateEndpointProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/privateEndpoints/privateDnsZoneGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/privateEndpoints/privateDnsZoneGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/privateEndpoints/privateDnsZoneGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPrivateEndpointsPrivateDnsZoneGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the private dns zone group.
   */
  readonly name: string;
  /**
   * Properties of the private dns zone group.
   */
  readonly properties: PrivateDnsZoneGroup | any;
}

/**
 * Properties for Microsoft.Network/privateLinkServices (L1 construct).
 *
 * @remarks
 * Microsoft.Network/privateLinkServices
 *
 * **ARM Resource Type**: `Microsoft.Network/privateLinkServices`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPrivateLinkServicesProps {
  /**
   * The extended location of the load balancer.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the private link service.
   */
  readonly name: string;
  /**
   * Properties of the private link service.
   */
  readonly properties: any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/privateLinkServices/privateEndpointConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/privateLinkServices/privateEndpointConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/privateLinkServices/privateEndpointConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPrivateLinkServicesPrivateEndpointConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the private end point connection.
   */
  readonly name: string;
  /**
   * Properties of the private end point connection.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/publicIPAddresses (L1 construct).
 *
 * @remarks
 * Microsoft.Network/publicIPAddresses
 *
 * **ARM Resource Type**: `Microsoft.Network/publicIPAddresses`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPublicIPAddressesProps {
  /**
   * The extended location of the public ip address.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the public IP address.
   */
  readonly name: string;
  /**
   * Public IP address properties.
   */
  readonly properties: PublicIPAddress | any;
  /**
   * The public IP address SKU.
   */
  readonly sku?: PublicIPAddressSku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the IP allocated for the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/publicIPPrefixes (L1 construct).
 *
 * @remarks
 * Microsoft.Network/publicIPPrefixes
 *
 * **ARM Resource Type**: `Microsoft.Network/publicIPPrefixes`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmPublicIPPrefixesProps {
  /**
   * The extended location of the public ip address.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the public IP prefix.
   */
  readonly name: string;
  /**
   * Public IP prefix properties.
   */
  readonly properties: PublicIPPrefix | any;
  /**
   * The public IP prefix SKU.
   */
  readonly sku?: PublicIPPrefixSku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
  /**
   * A list of availability zones denoting the IP allocated for the resource needs to come from.
   */
  readonly zones?: string[] | any;
}

/**
 * Properties for Microsoft.Network/routeFilters (L1 construct).
 *
 * @remarks
 * Microsoft.Network/routeFilters
 *
 * **ARM Resource Type**: `Microsoft.Network/routeFilters`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmRouteFiltersProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the route filter.
   */
  readonly name: string;
  /**
   * Properties of the route filter.
   */
  readonly properties: RouteFilter | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/routeFilters/routeFilterRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/routeFilters/routeFilterRules
 *
 * **ARM Resource Type**: `Microsoft.Network/routeFilters/routeFilterRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmRouteFiltersRouteFilterRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the route filter rule.
   */
  readonly name: string;
  /**
   * Properties of the route filter rule.
   */
  readonly properties: RouteFilterRule | any;
}

/**
 * Properties for Microsoft.Network/routeTables (L1 construct).
 *
 * @remarks
 * Microsoft.Network/routeTables
 *
 * **ARM Resource Type**: `Microsoft.Network/routeTables`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmRouteTablesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the route table.
   */
  readonly name: string;
  /**
   * Properties of the route table.
   */
  readonly properties: RouteTable | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/routeTables/routes (L1 construct).
 *
 * @remarks
 * Microsoft.Network/routeTables/routes
 *
 * **ARM Resource Type**: `Microsoft.Network/routeTables/routes`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmRouteTablesRoutesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the route.
   */
  readonly name: string;
  /**
   * Properties of the route.
   */
  readonly properties: Route | any;
}

/**
 * Properties for Microsoft.Network/securityPartnerProviders (L1 construct).
 *
 * @remarks
 * Microsoft.Network/securityPartnerProviders
 *
 * **ARM Resource Type**: `Microsoft.Network/securityPartnerProviders`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmSecurityPartnerProvidersProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the Security Partner Provider.
   */
  readonly name: string;
  /**
   * Properties of the Security Partner Provider.
   */
  readonly properties: SecurityPartnerProvider | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/serviceEndpointPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Network/serviceEndpointPolicies
 *
 * **ARM Resource Type**: `Microsoft.Network/serviceEndpointPolicies`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServiceEndpointPoliciesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the service endpoint policy.
   */
  readonly name: string;
  /**
   * Properties of the service end point policy.
   */
  readonly properties: ServiceEndpointPolicy | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions (L1 construct).
 *
 * @remarks
 * Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions
 *
 * **ARM Resource Type**: `Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServiceEndpointPoliciesServiceEndpointPolicyDefinitionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the service endpoint policy definition name.
   */
  readonly name: string;
  /**
   * Properties of the service endpoint policy definition.
   */
  readonly properties: ServiceEndpointPolicyDefinition | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the VirtualHub.
   */
  readonly name: string;
  /**
   * Properties of the virtual hub.
   */
  readonly properties: VirtualHubProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/bgpConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/bgpConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/bgpConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsBgpConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection.
   */
  readonly name: string;
  /**
   * The properties of the Bgp connections.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/hubRouteTables (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/hubRouteTables
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/hubRouteTables`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsHubRouteTablesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the RouteTable.
   */
  readonly name: string;
  /**
   * Properties of the RouteTable resource.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/hubVirtualNetworkConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/hubVirtualNetworkConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/hubVirtualNetworkConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsHubVirtualNetworkConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the HubVirtualNetworkConnection.
   */
  readonly name: string;
  /**
   * Properties of the hub virtual network connection.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/ipConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/ipConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/ipConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsIpConfigurationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the ipconfig.
   */
  readonly name: string;
  /**
   * The properties of the Virtual Hub IPConfigurations.
   */
  readonly properties: HubIPConfiguration | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/routeMaps (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/routeMaps
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/routeMaps`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsRouteMapsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the RouteMap.
   */
  readonly name: string;
  /**
   * Properties of the RouteMap resource.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/routeTables (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/routeTables
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/routeTables`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsRouteTablesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the VirtualHubRouteTableV2.
   */
  readonly name: string;
  /**
   * Properties of the virtual hub route table v2.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/virtualHubs/routingIntent (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualHubs/routingIntent
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualHubs/routingIntent`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualHubsRoutingIntentProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the per VirtualHub singleton Routing Intent resource.
   */
  readonly name: string;
  /**
   * Properties of the RoutingIntent resource.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualNetworkGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworkGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworkGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworkGatewaysProps {
  /**
   * The extended location of type local virtual network gateway.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The identity of the virtual network gateway, if configured.
   */
  readonly identity?: ManagedServiceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the virtual network gateway.
   */
  readonly name: string;
  /**
   * Properties of the virtual network gateway.
   */
  readonly properties: VirtualNetworkGateway | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/virtualNetworkGateways/natRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworkGateways/natRules
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworkGateways/natRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworkGatewaysNatRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the nat rule.
   */
  readonly name: string;
  /**
   * Properties of the Virtual Network Gateway NAT rule.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/virtualNetworkTaps (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworkTaps
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworkTaps`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworkTapsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the virtual network tap.
   */
  readonly name: string;
  /**
   * Virtual Network Tap Properties.
   */
  readonly properties: VirtualNetworkTap | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/virtualNetworks (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworks
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworks`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworksProps {
  /**
   * The extended location of the virtual network.
   */
  readonly extendedLocation?: ExtendedLocation | any;
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the virtual network.
   */
  readonly name: string;
  /**
   * Properties of the virtual network.
   */
  readonly properties: VirtualNetwork | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/virtualNetworks/subnets (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworks/subnets
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworks/subnets`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworksSubnetsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the subnet.
   */
  readonly name: string;
  /**
   * Properties of the subnet.
   */
  readonly properties: Subnet | any;
}

/**
 * Properties for Microsoft.Network/virtualNetworks/virtualNetworkPeerings (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualNetworks/virtualNetworkPeerings
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualNetworks/virtualNetworkPeerings`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualNetworksVirtualNetworkPeeringsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the peering.
   */
  readonly name: string;
  /**
   * Properties of the virtual network peering.
   */
  readonly properties: VirtualNetworkPeering | any;
}

/**
 * Properties for Microsoft.Network/virtualRouters (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualRouters
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualRouters`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualRoutersProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the Virtual Router.
   */
  readonly name: string;
  /**
   * Properties of the Virtual Router.
   */
  readonly properties: VirtualRouter | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/virtualRouters/peerings (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualRouters/peerings
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualRouters/peerings`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualRoutersPeeringsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the Virtual Router Peering.
   */
  readonly name: string;
  /**
   * The properties of the Virtual Router Peering.
   */
  readonly properties: any | any;
}

/**
 * Properties for Microsoft.Network/virtualWans (L1 construct).
 *
 * @remarks
 * Microsoft.Network/virtualWans
 *
 * **ARM Resource Type**: `Microsoft.Network/virtualWans`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVirtualWansProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the VirtualWAN being created or updated.
   */
  readonly name: string;
  /**
   * Properties of the virtual WAN.
   */
  readonly properties: VirtualWanProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/vpnGateways (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnGateways
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnGateways`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnGatewaysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the gateway.
   */
  readonly name: string;
  /**
   * Properties of the VPN gateway.
   */
  readonly properties: VpnGatewayProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/vpnGateways/natRules (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnGateways/natRules
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnGateways/natRules`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnGatewaysNatRulesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the nat rule.
   */
  readonly name: string;
  /**
   * Properties of the VpnGateway NAT rule.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/vpnGateways/vpnConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnGateways/vpnConnections
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnGateways/vpnConnections`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnGatewaysVpnConnectionsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the connection.
   */
  readonly name: string;
  /**
   * Properties of the VPN connection.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections/sharedKeys (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections/sharedKeys
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections/sharedKeys`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnGatewaysVpnConnectionsVpnLinkConnectionsSharedKeysProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Properties of the shared key.
   */
  readonly properties: SharedKeyProps | any;
}

/**
 * Properties for Microsoft.Network/vpnServerConfigurations (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnServerConfigurations
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnServerConfigurations`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnServerConfigurationsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the VpnServerConfiguration being created or updated.
   */
  readonly name: string;
  /**
   * Properties of the P2SVpnServer configuration.
   */
  readonly properties: VpnServerConfigurationProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnServerConfigurationsConfigurationPolicyGroupsProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * The name of the ConfigurationPolicyGroup.
   */
  readonly name: string;
  /**
   * Properties of the VpnServerConfigurationPolicyGroup.
   */
  readonly properties: any;
}

/**
 * Properties for Microsoft.Network/vpnSites (L1 construct).
 *
 * @remarks
 * Microsoft.Network/vpnSites
 *
 * **ARM Resource Type**: `Microsoft.Network/vpnSites`
 * **API Version**: `2024-07-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmVpnSitesProps {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the VpnSite being created or updated.
   */
  readonly name: string;
  /**
   * Properties of the VPN site.
   */
  readonly properties: VpnSiteProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}
