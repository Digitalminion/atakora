/**
 * Type definitions for Microsoft.Sql resources.
 *
 * **API Version**: 2023-08-01
 * **Generated**: 2025-10-13T21:27:30.229Z
 * **Source**: Microsoft.Sql.json
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * AdministratorProps definition.
 */
export interface AdministratorProps {
  /**
   * Type of the sever administrator.
   */
  readonly administratorType?: 'ActiveDirectory' | any;
  /**
   * Login name of the server administrator.
   */
  readonly login?: string;
  /**
   * SID (object ID) of the server administrator.
   */
  readonly sid?: string | any;
  /**
   * Tenant ID of the administrator.
   */
  readonly tenantId?: string | any;
}

/**
 * AdvancedThreatProtectionProps definition.
 */
export interface AdvancedThreatProtectionProps {
  /**
   * Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
   */
  readonly state?: 'New' | 'Enabled' | 'Disabled' | any;
}

/**
 * AzureADOnlyAuthProps definition.
 */
export interface AzureADOnlyAuthProps {
  /**
   * Azure Active Directory only Authentication enabled.
   */
  readonly azureADOnlyAuthentication?: boolean | any;
}

/**
 * BackupShortTermRetentionPolicyProps definition.
 */
export interface BackupShortTermRetentionPolicyProps {
  /**
   * The differential backup interval in hours. This is how many interval hours between each differential backup will be supported. This is only applicable to live databases but not dropped databases.
   */
  readonly diffBackupIntervalInHours?: number | any | any;
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
   */
  readonly retentionDays?: number | any;
}

/**
 * BaseLongTermRetentionPolicyProps definition.
 */
export interface BaseLongTermRetentionPolicyProps {
  /**
   * The monthly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly monthlyRetention?: string;
  /**
   * The week of year to take the yearly backup in an ISO 8601 format.
   */
  readonly weekOfYear?: number | any;
  /**
   * The weekly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly weeklyRetention?: string;
  /**
   * The yearly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly yearlyRetention?: string;
}

/**
 * DataMaskingPolicyProps definition.
 */
export interface DataMaskingPolicyProps {
  /**
   * The state of the data masking policy.
   */
  readonly dataMaskingState?: 'Enabled' | 'Disabled' | any;
  /**
   * The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.
   */
  readonly exemptPrincipals?: string;
}

/**
 * DataMaskingRuleProps definition.
 */
export interface DataMaskingRuleProps {
  /**
   * The alias name. This is a legacy parameter and is no longer used.
   */
  readonly aliasName?: string;
  /**
   * The column name on which the data masking rule is applied.
   */
  readonly columnName?: string;
  /**
   * The masking function that is used for the data masking rule.
   */
  readonly maskingFunction?: 'Default' | 'CCN' | 'Email' | 'Number' | 'SSN' | 'Text' | any;
  /**
   * The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.
   */
  readonly numberFrom?: string;
  /**
   * The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.
   */
  readonly numberTo?: string;
  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.
   */
  readonly prefixSize?: string;
  /**
   * If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.
   */
  readonly replacementString?: string;
  /**
   * The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.
   */
  readonly ruleState?: 'Enabled' | 'Disabled' | any;
  /**
   * The schema name on which the data masking rule is applied.
   */
  readonly schemaName?: string;
  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.
   */
  readonly suffixSize?: string;
  /**
   * The table name on which the data masking rule is applied.
   */
  readonly tableName?: string;
}

/**
 * DatabaseBlobAuditingPolicyProps definition.
 */
export interface DatabaseBlobAuditingPolicyProps {
  /**
   * Specifies the Actions-Groups and Actions to audit.
   * 
   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
   * 
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   * 
   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
   * 
   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
   * 
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   * DBCC_GROUP
   * DATABASE_OWNERSHIP_CHANGE_GROUP
   * DATABASE_CHANGE_GROUP
   * LEDGER_OPERATION_GROUP
   * 
   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
   * 
   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   * 
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   * 
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   * 
   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   * 
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   * 
   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  readonly auditActionsAndGroups?: string[] | any;
  /**
   * Specifies whether audit events are sent to Azure Monitor. 
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isAzureMonitorTargetEnabled?: boolean | any;
  /**
   * Specifies whether Managed Identity is used to access blob storage
   */
  readonly isManagedIdentityInUse?: boolean | any;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  readonly isStorageSecondaryKeyInUse?: boolean | any;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  readonly queueDelayMs?: number | any;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the auditing storage account. 
   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage subscription Id.
   */
  readonly storageAccountSubscriptionId?: string | any;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  readonly storageEndpoint?: string;
}

/**
 * DatabaseExtensionsProps definition.
 */
export interface DatabaseExtensionsProps {
  /**
   * Administrator login name.
   */
  readonly administratorLogin?: string;
  /**
   * Administrator login password.
   */
  readonly administratorLoginPassword?: string;
  /**
   * Authentication type: SQL authentication or AD password.
   */
  readonly authenticationType?: string;
  /**
   * Database edition for the newly created database in the case of an import operation.
   */
  readonly databaseEdition?: string;
  /**
   * Database max size in bytes for the newly created database in the case of an import operation.
   */
  readonly maxSizeBytes?: string;
  /**
   * Optional resource information to enable network isolation for request.
   */
  readonly networkIsolation?: NetworkIsolationSettings | any;
  /**
   * Operation mode of the operation: Import, Export, or PolybaseImport.
   */
  readonly operationMode?: 'PolybaseImport' | 'Import' | 'Export' | any;
  /**
   * Database service level objective for the newly created database in the case of an import operation.
   */
  readonly serviceObjectiveName?: string;
  /**
   * Storage key for the storage account.
   */
  readonly storageKey?: string;
  /**
   * Storage key type: StorageAccessKey or SharedAccessKey.
   */
  readonly storageKeyType?: 'SharedAccessKey' | 'StorageAccessKey' | any;
  /**
   * Storage Uri for the storage account.
   */
  readonly storageUri?: string;
}

/**
 * DatabaseIdentity definition.
 */
export interface DatabaseIdentity {
  /**
   * The resource ids of the user assigned identities to use
   */
  readonly userAssignedIdentities?: Record<string, DatabaseUserIdentity> | any;
}

/**
 * DatabaseKey definition.
 */
export interface DatabaseKey {
}

/**
 * DatabaseProps definition.
 */
export interface DatabaseProps {
  /**
   * Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled
   */
  readonly autoPauseDelay?: number | any;
  /**
   * Specifies the availability zone the database is pinned to.
   */
  readonly availabilityZone?: 'NoPreference' | '1' | '2' | '3' | any;
  /**
   * Collation of the metadata catalog.
   */
  readonly catalogCollation?: 'DATABASE_DEFAULT' | 'SQL_Latin1_General_CP1_CI_AS' | any;
  /**
   * The collation of the database.
   */
  readonly collation?: string;
  /**
   * Specifies the mode of database creation.
   * 
   * Default: regular database creation.
   * 
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.
   * 
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.
   * 
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.
   * 
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.
   * 
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.
   * 
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.
   * 
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
   */
  readonly createMode?: 'Default' | 'Copy' | 'Secondary' | 'PointInTimeRestore' | 'Restore' | 'Recovery' | 'RestoreExternalBackup' | 'RestoreExternalBackupSecondary' | 'RestoreLongTermRetentionBackup' | 'OnlineSecondary' | any;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  readonly elasticPoolId?: string;
  /**
   * The azure key vault URI of the database if it's configured with per Database Customer Managed Keys.
   */
  readonly encryptionProtector?: string;
  /**
   * The flag to enable or disable auto rotation of database encryption protector AKV key.
   */
  readonly encryptionProtectorAutoRotation?: boolean | any;
  /**
   * The Client id used for cross tenant per database CMK scenario
   */
  readonly federatedClientId?: string | any;
  /**
   * Specifies the behavior when monthly free limits are exhausted for the free database.
   * 
   * AutoPause: The database will be auto paused upon exhaustion of free limits for remainder of the month.
   * 
   * BillForUsage: The database will continue to be online upon exhaustion of free limits and any overage will be billed.
   */
  readonly freeLimitExhaustionBehavior?: 'AutoPause' | 'BillOverUsage' | any;
  /**
   * The number of secondary replicas associated with the Business Critical, Premium, or Hyperscale edition database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.
   */
  readonly highAvailabilityReplicaCount?: number | any;
  /**
   * Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.
   */
  readonly isLedgerOn?: boolean | any;
  /**
   * The resource ids of the user assigned identities to use
   */
  readonly keys?: Record<string, DatabaseKey> | any;
  /**
   * The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.
   */
  readonly licenseType?: 'LicenseIncluded' | 'BasePrice' | any;
  /**
   * The resource identifier of the long term retention backup associated with create operation of this database.
   */
  readonly longTermRetentionBackupResourceId?: string;
  /**
   * Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.
   */
  readonly maintenanceConfigurationId?: string;
  /**
   * Whether or not customer controlled manual cutover needs to be done during Update Database operation to Hyperscale tier.
   * 
   * This property is only applicable when scaling database from Business Critical/General Purpose/Premium/Standard tier to Hyperscale tier.
   * 
   * When manualCutover is specified, the scaling operation will wait for user input to trigger cutover to Hyperscale database.
   * 
   * To trigger cutover, please provide 'performCutover' parameter when the Scaling operation is in Waiting state.
   */
  readonly manualCutover?: boolean | any;
  /**
   * The max size of the database expressed in bytes.
   */
  readonly maxSizeBytes?: number | any;
  /**
   * Minimal capacity that database will always have allocated, if not paused
   */
  readonly minCapacity?: number | any;
  /**
   * To trigger customer controlled manual cutover during the wait state while Scaling operation is in progress.
   * 
   * This property parameter is only applicable for scaling operations that are initiated along with 'manualCutover' parameter.
   * 
   * This property is only applicable when scaling database from Business Critical/General Purpose/Premium/Standard tier to Hyperscale tier is already in progress.
   * 
   * When performCutover is specified, the scaling operation will trigger cutover and perform role-change to Hyperscale database.
   */
  readonly performCutover?: boolean | any;
  /**
   * Type of enclave requested on the database i.e. Default or VBS enclaves.
   */
  readonly preferredEnclaveType?: 'Default' | 'VBS' | any;
  /**
   * The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.
   */
  readonly readScale?: 'Enabled' | 'Disabled' | any;
  /**
   * The resource identifier of the recoverable database associated with create operation of this database.
   */
  readonly recoverableDatabaseId?: string;
  /**
   * The resource identifier of the recovery point associated with create operation of this database.
   */
  readonly recoveryServicesRecoveryPointId?: string;
  /**
   * The storage account type to be used to store backups for this database.
   */
  readonly requestedBackupStorageRedundancy?: 'Geo' | 'Local' | 'Zone' | 'GeoZone' | any;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of this database.
   */
  readonly restorableDroppedDatabaseId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
   */
  readonly restorePointInTime?: string;
  /**
   * The name of the sample schema to apply when creating this database.
   */
  readonly sampleName?: 'AdventureWorksLT' | 'WideWorldImportersStd' | 'WideWorldImportersFull' | any;
  /**
   * The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.
   */
  readonly secondaryType?: 'Geo' | 'Named' | 'Standby' | any;
  /**
   * Specifies the time that the database was deleted.
   */
  readonly sourceDatabaseDeletionDate?: string;
  /**
   * The resource identifier of the source database associated with create operation of this database.
   */
  readonly sourceDatabaseId?: string;
  /**
   * The resource identifier of the source associated with the create operation of this database.
   * 
   * This property is only supported for DataWarehouse edition and allows to restore across subscriptions.
   * 
   * When sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.
   * 
   * When createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.
   * 
   * When createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.
   * 
   * When createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.
   * 
   * When source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant 
   */
  readonly sourceResourceId?: string;
  /**
   * Whether or not the database uses free monthly limits. Allowed on one database in a subscription.
   */
  readonly useFreeLimit?: boolean | any;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
   */
  readonly zoneRedundant?: boolean | any;
}

/**
 * DatabaseSqlVulnerabilityAssessmentRuleBaselineInputProps definition.
 */
export interface DatabaseSqlVulnerabilityAssessmentRuleBaselineInputProps {
  /**
   * The latest scan flag
   */
  readonly latestScan?: boolean | any;
  /**
   * The rule baseline result
   */
  readonly results?: string[][] | any;
}

/**
 * DatabaseSqlVulnerabilityAssessmentRuleBaselineListInputProps definition.
 */
export interface DatabaseSqlVulnerabilityAssessmentRuleBaselineListInputProps {
  /**
   * The latest scan flag
   */
  readonly latestScan?: boolean | any;
  /**
   * The rule baseline result list
   */
  readonly results?: Record<string, string[][]> | any;
}

/**
 * DatabaseUserIdentity definition.
 */
export interface DatabaseUserIdentity {
}

/**
 * DatabaseVulnerabilityAssessmentProps definition.
 */
export interface DatabaseVulnerabilityAssessmentProps {
  /**
   * The recurring scans settings
   */
  readonly recurringScans?: VulnerabilityAssessmentRecurringScansProps | any;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageAccountAccessKey?: string;
  /**
   * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set
   */
  readonly storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageContainerSasKey?: string;
}

/**
 * DatabaseVulnerabilityAssessmentRuleBaselineItem definition.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  /**
   * The rule baseline result
   */
  readonly result?: string[] | any;
}

/**
 * DatabaseVulnerabilityAssessmentRuleBaselineProps definition.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineProps {
  /**
   * The rule baseline result
   */
  readonly baselineResults?: DatabaseVulnerabilityAssessmentRuleBaselineItem[] | any;
}

/**
 * DistributedAvailabilityGroupDatabase definition.
 */
export interface DistributedAvailabilityGroupDatabase {
  /**
   * The name of the database in link
   */
  readonly databaseName?: string;
}

/**
 * DistributedAvailabilityGroupProps definition.
 */
export interface DistributedAvailabilityGroupProps {
  /**
   * Databases in the distributed availability group
   */
  readonly databases?: DistributedAvailabilityGroupDatabase[] | any;
  /**
   * The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure.
   */
  readonly failoverMode?: 'None' | 'Manual' | any;
  /**
   * Managed instance side availability group name
   */
  readonly instanceAvailabilityGroupName?: string;
  /**
   * Managed instance side link role
   */
  readonly instanceLinkRole?: 'Primary' | 'Secondary' | any;
  /**
   * SQL server side availability group name
   */
  readonly partnerAvailabilityGroupName?: string;
  /**
   * SQL server side endpoint - IP or DNS resolvable name
   */
  readonly partnerEndpoint?: string;
  /**
   * Replication mode of the link
   */
  readonly replicationMode?: 'Async' | 'Sync' | any;
  /**
   * Database seeding mode – can be Automatic (default), or Manual for supported scenarios.
   */
  readonly seedingMode?: 'Automatic' | 'Manual' | any;
}

/**
 * ElasticPoolPerDatabaseSettings definition.
 */
export interface ElasticPoolPerDatabaseSettings {
  /**
   * Auto Pause Delay for per database within pool
   */
  readonly autoPauseDelay?: number | any;
  /**
   * The maximum capacity any one database can consume.
   */
  readonly maxCapacity?: number | any;
  /**
   * The minimum capacity all databases are guaranteed.
   */
  readonly minCapacity?: number | any;
}

/**
 * ElasticPoolProps definition.
 */
export interface ElasticPoolProps {
  /**
   * Time in minutes after which elastic pool is automatically paused. A value of -1 means that automatic pause is disabled
   */
  readonly autoPauseDelay?: number | any;
  /**
   * Specifies the availability zone the pool's primary replica is pinned to.
   */
  readonly availabilityZone?: 'NoPreference' | '1' | '2' | '3' | any;
  /**
   * The number of secondary replicas associated with the Business Critical, Premium, or Hyperscale edition elastic pool that are used to provide high availability. Applicable only to Hyperscale elastic pools.
   */
  readonly highAvailabilityReplicaCount?: number | any;
  /**
   * The license type to apply for this elastic pool.
   */
  readonly licenseType?: 'LicenseIncluded' | 'BasePrice' | any;
  /**
   * Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur.
   */
  readonly maintenanceConfigurationId?: string;
  /**
   * The storage limit for the database elastic pool in bytes.
   */
  readonly maxSizeBytes?: number | any;
  /**
   * Minimal capacity that serverless pool will not shrink below, if not paused
   */
  readonly minCapacity?: number | any;
  /**
   * The per database settings for the elastic pool.
   */
  readonly perDatabaseSettings?: ElasticPoolPerDatabaseSettings | any;
  /**
   * Type of enclave requested on the elastic pool.
   */
  readonly preferredEnclaveType?: 'Default' | 'VBS' | any;
  /**
   * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.
   */
  readonly zoneRedundant?: boolean | any;
}

/**
 * EncryptionProtectorProps definition.
 */
export interface EncryptionProtectorProps {
  /**
   * Key auto rotation opt-in flag. Either true or false.
   */
  readonly autoRotationEnabled?: boolean | any;
  /**
   * The name of the server key.
   */
  readonly serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
   */
  readonly serverKeyType?: 'ServiceManaged' | 'AzureKeyVault' | any;
}

/**
 * ExtendedDatabaseBlobAuditingPolicyProps definition.
 */
export interface ExtendedDatabaseBlobAuditingPolicyProps {
  /**
   * Specifies the Actions-Groups and Actions to audit.
   * 
   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
   * 
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   * 
   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
   * 
   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
   * 
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   * DBCC_GROUP
   * DATABASE_OWNERSHIP_CHANGE_GROUP
   * DATABASE_CHANGE_GROUP
   * LEDGER_OPERATION_GROUP
   * 
   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
   * 
   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   * 
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   * 
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   * 
   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   * 
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   * 
   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  readonly auditActionsAndGroups?: string[] | any;
  /**
   * Specifies whether audit events are sent to Azure Monitor. 
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isAzureMonitorTargetEnabled?: boolean | any;
  /**
   * Specifies whether Managed Identity is used to access blob storage
   */
  readonly isManagedIdentityInUse?: boolean | any;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  readonly isStorageSecondaryKeyInUse?: boolean | any;
  /**
   * Specifies condition of where clause when creating an audit.
   */
  readonly predicateExpression?: string;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  readonly queueDelayMs?: number | any;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the auditing storage account. 
   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage subscription Id.
   */
  readonly storageAccountSubscriptionId?: string | any;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  readonly storageEndpoint?: string;
}

/**
 * ExtendedServerBlobAuditingPolicyProps definition.
 */
export interface ExtendedServerBlobAuditingPolicyProps {
  /**
   * Specifies the Actions-Groups and Actions to audit.
   * 
   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
   * 
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   * 
   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
   * 
   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
   * 
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   * DBCC_GROUP
   * DATABASE_OWNERSHIP_CHANGE_GROUP
   * DATABASE_CHANGE_GROUP
   * LEDGER_OPERATION_GROUP
   * 
   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
   * 
   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   * 
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   * 
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   * 
   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   * 
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   * 
   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  readonly auditActionsAndGroups?: string[] | any;
  /**
   * Specifies whether audit events are sent to Azure Monitor. 
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isAzureMonitorTargetEnabled?: boolean | any;
  /**
   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isDevopsAuditEnabled?: boolean | any;
  /**
   * Specifies whether Managed Identity is used to access blob storage
   */
  readonly isManagedIdentityInUse?: boolean | any;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  readonly isStorageSecondaryKeyInUse?: boolean | any;
  /**
   * Specifies condition of where clause when creating an audit.
   */
  readonly predicateExpression?: string;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  readonly queueDelayMs?: number | any;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the auditing storage account. 
   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage subscription Id.
   */
  readonly storageAccountSubscriptionId?: string | any;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  readonly storageEndpoint?: string;
}

/**
 * FailoverGroupProps definition.
 */
export interface FailoverGroupProps {
  /**
   * List of databases in the failover group.
   */
  readonly databases?: string[] | any;
  /**
   * List of partner server information for the failover group.
   */
  readonly partnerServers?: PartnerInfo[] | any;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readonly readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint | any;
  /**
   * Read-write endpoint of the failover group instance.
   */
  readonly readWriteEndpoint?: FailoverGroupReadWriteEndpoint | any;
  /**
   * Databases secondary type on partner server.
   */
  readonly secondaryType?: 'Geo' | 'Standby' | any;
}

/**
 * FailoverGroupReadOnlyEndpoint definition.
 */
export interface FailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group.
   */
  readonly failoverPolicy?: 'Disabled' | 'Enabled' | any;
  /**
   * The target partner server where the read-only endpoint points to.
   */
  readonly targetServer?: string;
}

/**
 * FailoverGroupReadWriteEndpoint definition.
 */
export interface FailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  readonly failoverPolicy?: 'Manual' | 'Automatic' | any;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  readonly failoverWithDataLossGracePeriodMinutes?: number | any;
}

/**
 * GeoBackupPolicyProps definition.
 */
export interface GeoBackupPolicyProps {
  /**
   * The state of the geo backup policy.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * IPv6ServerFirewallRuleProps definition.
 */
export interface IPv6ServerFirewallRuleProps {
  /**
   * The end IP address of the firewall rule. Must be IPv6 format. Must be greater than or equal to startIpv6Address.
   */
  readonly endIPv6Address?: string;
  /**
   * The start IP address of the firewall rule. Must be IPv6 format.
   */
  readonly startIPv6Address?: string;
}

/**
 * InstanceFailoverGroupProps definition.
 */
export interface InstanceFailoverGroupProps {
  /**
   * List of managed instance pairs in the failover group.
   */
  readonly managedInstancePairs?: ManagedInstancePairInfo[] | any;
  /**
   * Partner region information for the failover group.
   */
  readonly partnerRegions?: PartnerRegionInfo[] | any;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readonly readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint | any;
  /**
   * Read-write endpoint of the failover group instance.
   */
  readonly readWriteEndpoint?: InstanceFailoverGroupReadWriteEndpoint | any;
  /**
   * Type of the geo-secondary instance. Set 'Standby' if the instance is used as a DR option only.
   */
  readonly secondaryType?: 'Geo' | 'Standby' | any;
}

/**
 * InstanceFailoverGroupReadOnlyEndpoint definition.
 */
export interface InstanceFailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group.
   */
  readonly failoverPolicy?: 'Disabled' | 'Enabled' | any;
}

/**
 * InstanceFailoverGroupReadWriteEndpoint definition.
 */
export interface InstanceFailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  readonly failoverPolicy?: 'Manual' | 'Automatic' | any;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  readonly failoverWithDataLossGracePeriodMinutes?: number | any;
}

/**
 * InstancePoolProps definition.
 */
export interface InstancePoolProps {
  /**
   * The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).
   */
  readonly licenseType?: 'LicenseIncluded' | 'BasePrice' | any;
  /**
   * Specifies maintenance configuration id to apply to this managed instance.
   */
  readonly maintenanceConfigurationId?: string;
  /**
   * Resource ID of the subnet to place this instance pool in.
   */
  readonly subnetId?: string;
  /**
   * Count of vCores belonging to this instance pool.
   */
  readonly vCores?: number | any;
}

/**
 * JobAgentIdentity definition.
 */
export interface JobAgentIdentity {
  /**
   * The job agent identity tenant id
   */
  readonly tenantId?: string | any;
  /**
   * The resource ids of the user assigned identities to use
   */
  readonly userAssignedIdentities?: Record<string, JobAgentUserAssignedIdentity> | any;
}

/**
 * JobAgentProps definition.
 */
export interface JobAgentProps {
  /**
   * Resource ID of the database to store job metadata in.
   */
  readonly databaseId?: string;
}

/**
 * JobAgentUserAssignedIdentity definition.
 */
export interface JobAgentUserAssignedIdentity {
}

/**
 * JobCredentialProps definition.
 */
export interface JobCredentialProps {
  /**
   * The credential password.
   */
  readonly password?: string;
  /**
   * The credential user name.
   */
  readonly username?: string;
}

/**
 * JobPrivateEndpointProps definition.
 */
export interface JobPrivateEndpointProps {
  /**
   * ARM resource id of the server the private endpoint will target.
   */
  readonly targetServerAzureResourceId?: string;
}

/**
 * JobProps definition.
 */
export interface JobProps {
  /**
   * User-defined description of the job.
   */
  readonly description?: string;
  /**
   * Schedule properties of the job.
   */
  readonly schedule?: JobSchedule | any;
}

/**
 * JobSchedule definition.
 */
export interface JobSchedule {
  /**
   * Whether or not the schedule is enabled.
   */
  readonly enabled?: boolean | any;
  /**
   * Schedule end time.
   */
  readonly endTime?: string;
  /**
   * Value of the schedule's recurring interval, if the ScheduleType is recurring. ISO8601 duration format.
   */
  readonly interval?: string;
  /**
   * Schedule start time.
   */
  readonly startTime?: string;
}

/**
 * JobStepAction definition.
 */
export interface JobStepAction {
  /**
   * The source of the action to execute.
   */
  readonly source?: 'Inline' | any;
  /**
   * The action value, for example the text of the T-SQL script to execute.
   */
  readonly value?: string;
}

/**
 * JobStepExecutionOptions definition.
 */
export interface JobStepExecutionOptions {
  /**
   * Initial delay between retries for job step execution.
   */
  readonly initialRetryIntervalSeconds?: number | any;
  /**
   * The maximum amount of time to wait between retries for job step execution.
   */
  readonly maximumRetryIntervalSeconds?: number | any;
  /**
   * Maximum number of times the job step will be reattempted if the first attempt fails.
   */
  readonly retryAttempts?: number | any;
  /**
   * The backoff multiplier for the time between retries.
   */
  readonly retryIntervalBackoffMultiplier?: number | any;
  /**
   * Execution timeout for the job step.
   */
  readonly timeoutSeconds?: number | any;
}

/**
 * JobStepOutput definition.
 */
export interface JobStepOutput {
  /**
   * The resource ID of the credential to use to connect to the output destination.
   */
  readonly credential?: string;
  /**
   * The output destination database.
   */
  readonly databaseName?: string;
  /**
   * The output destination resource group.
   */
  readonly resourceGroupName?: string;
  /**
   * The output destination schema.
   */
  readonly schemaName?: string;
  /**
   * The output destination server name.
   */
  readonly serverName?: string;
  /**
   * The output destination subscription id.
   */
  readonly subscriptionId?: string | any;
  /**
   * The output destination table.
   */
  readonly tableName?: string;
}

/**
 * JobStepProps definition.
 */
export interface JobStepProps {
  /**
   * The action payload of the job step.
   */
  readonly action?: JobStepAction | any;
  /**
   * The resource ID of the job credential that will be used to connect to the targets.
   */
  readonly credential?: string;
  /**
   * Execution options for the job step.
   */
  readonly executionOptions?: JobStepExecutionOptions | any;
  /**
   * Output destination properties of the job step.
   */
  readonly output?: JobStepOutput | any;
  /**
   * The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.
   */
  readonly stepId?: number | any;
  /**
   * The resource ID of the target group that the job step will be executed on.
   */
  readonly targetGroup?: string;
}

/**
 * JobTarget definition.
 */
export interface JobTarget {
  /**
   * The target database name.
   */
  readonly databaseName?: string;
  /**
   * The target elastic pool name.
   */
  readonly elasticPoolName?: string;
  /**
   * Whether the target is included or excluded from the group.
   */
  readonly membershipType?: 'Include' | 'Exclude' | any;
  /**
   * The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
   */
  readonly refreshCredential?: string;
  /**
   * The target server name.
   */
  readonly serverName?: string;
  /**
   * The target shard map.
   */
  readonly shardMapName?: string;
}

/**
 * JobTargetGroupProps definition.
 */
export interface JobTargetGroupProps {
  /**
   * Members of the target group.
   */
  readonly members?: JobTarget[] | any;
}

/**
 * LedgerDigestUploadsProps definition.
 */
export interface LedgerDigestUploadsProps {
  /**
   * The digest storage endpoint, which must be either an Azure blob storage endpoint or an URI for Azure Confidential Ledger.
   */
  readonly digestStorageEndpoint?: string;
}

/**
 * ManagedBackupShortTermRetentionPolicyProps definition.
 */
export interface ManagedBackupShortTermRetentionPolicyProps {
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
   */
  readonly retentionDays?: number | any;
}

/**
 * ManagedDatabaseProps definition.
 */
export interface ManagedDatabaseProps {
  /**
   * Whether to auto complete restore of this managed database.
   */
  readonly autoCompleteRestore?: boolean | any;
  /**
   * Collation of the metadata catalog.
   */
  readonly catalogCollation?: 'DATABASE_DEFAULT' | 'SQL_Latin1_General_CP1_CI_AS' | any;
  /**
   * Collation of the managed database.
   */
  readonly collation?: string;
  /**
   * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required).
   */
  readonly createMode?: 'Default' | 'RestoreExternalBackup' | 'PointInTimeRestore' | 'Recovery' | 'RestoreLongTermRetentionBackup' | any;
  /**
   * The restorable cross-subscription dropped database resource id to restore when creating this database.
   */
  readonly crossSubscriptionRestorableDroppedDatabaseId?: string;
  /**
   * The resource identifier of the cross-subscription source database associated with create operation of this database.
   */
  readonly crossSubscriptionSourceDatabaseId?: string;
  /**
   * Target managed instance id used in cross-subscription restore.
   */
  readonly crossSubscriptionTargetManagedInstanceId?: string;
  /**
   * Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.
   */
  readonly isLedgerOn?: boolean | any;
  /**
   * Last backup file name for restore of this managed database.
   */
  readonly lastBackupName?: string;
  /**
   * The name of the Long Term Retention backup to be used for restore of this managed database.
   */
  readonly longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this database.
   */
  readonly recoverableDatabaseId?: string;
  /**
   * The restorable dropped database resource id to restore when creating this database.
   */
  readonly restorableDroppedDatabaseId?: string;
  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
   */
  readonly restorePointInTime?: string;
  /**
   * The resource identifier of the source database associated with create operation of this database.
   */
  readonly sourceDatabaseId?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is used. Specifies the identity used for storage container authentication. Can be 'SharedAccessSignature' or 'ManagedIdentity'; if not specified 'SharedAccessSignature' is assumed.
   */
  readonly storageContainerIdentity?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup and storageContainerIdentity is not ManagedIdentity, this value is required. Specifies the storage container sas token.
   */
  readonly storageContainerSasToken?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.
   */
  readonly storageContainerUri?: string;
}

/**
 * ManagedInstanceAdministratorProps definition.
 */
export interface ManagedInstanceAdministratorProps {
  /**
   * Type of the managed instance administrator.
   */
  readonly administratorType?: 'ActiveDirectory' | any;
  /**
   * Login name of the managed instance administrator.
   */
  readonly login?: string;
  /**
   * SID (object ID) of the managed instance administrator.
   */
  readonly sid?: string | any;
  /**
   * Tenant ID of the managed instance administrator.
   */
  readonly tenantId?: string | any;
}

/**
 * ManagedInstanceAzureADOnlyAuthProps definition.
 */
export interface ManagedInstanceAzureADOnlyAuthProps {
  /**
   * Azure Active Directory only Authentication enabled.
   */
  readonly azureADOnlyAuthentication?: boolean | any;
}

/**
 * ManagedInstanceDtcProps definition.
 */
export interface ManagedInstanceDtcProps {
  /**
   * Active status of managed instance DTC.
   */
  readonly dtcEnabled?: boolean | any;
  /**
   * External dns suffix search list of managed instance DTC.
   */
  readonly externalDnsSuffixSearchList?: string[] | any;
  /**
   * Security settings of managed instance DTC.
   */
  readonly securitySettings?: ManagedInstanceDtcSecuritySettings | any;
}

/**
 * ManagedInstanceDtcSecuritySettings definition.
 */
export interface ManagedInstanceDtcSecuritySettings {
  /**
   * Allow SNA LU 6.2 Transactions to managed instance DTC.
   */
  readonly snaLu6point2TransactionsEnabled?: boolean | any;
  /**
   * Transaction Manager communication settings of managed instance DTC.
   */
  readonly transactionManagerCommunicationSettings?: ManagedInstanceDtcTransactionManagerCommunicationSettings | any;
  /**
   * Default timeout for XA Transactions (in seconds).
   */
  readonly xaTransactionsDefaultTimeout?: number | any;
  /**
   * Allow XA Transactions to managed instance DTC.
   */
  readonly xaTransactionsEnabled?: boolean | any;
  /**
   * Maximum timeout for XA Transactions (in seconds).
   */
  readonly xaTransactionsMaximumTimeout?: number | any;
}

/**
 * ManagedInstanceDtcTransactionManagerCommunicationSettings definition.
 */
export interface ManagedInstanceDtcTransactionManagerCommunicationSettings {
  /**
   * Allow Inbound traffic to managed instance DTC.
   */
  readonly allowInboundEnabled?: boolean | any;
  /**
   * Allow Outbound traffic of managed instance DTC.
   */
  readonly allowOutboundEnabled?: boolean | any;
  /**
   * Authentication type of managed instance DTC.
   */
  readonly authentication?: string;
}

/**
 * ManagedInstanceEncryptionProtectorProps definition.
 */
export interface ManagedInstanceEncryptionProtectorProps {
  /**
   * Key auto rotation opt-in flag. Either true or false.
   */
  readonly autoRotationEnabled?: boolean | any;
  /**
   * The name of the managed instance key.
   */
  readonly serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
   */
  readonly serverKeyType?: 'ServiceManaged' | 'AzureKeyVault' | any;
}

/**
 * ManagedInstanceExternalAdministrator definition.
 */
export interface ManagedInstanceExternalAdministrator {
  /**
   * Type of the sever administrator.
   */
  readonly administratorType?: 'ActiveDirectory' | any;
  /**
   * Azure Active Directory only Authentication enabled.
   */
  readonly azureADOnlyAuthentication?: boolean | any;
  /**
   * Login name of the server administrator.
   */
  readonly login?: string;
  /**
   * Principal Type of the sever administrator.
   */
  readonly principalType?: 'User' | 'Group' | 'Application' | any;
  /**
   * SID (object ID) of the server administrator.
   */
  readonly sid?: string | any;
  /**
   * Tenant ID of the administrator.
   */
  readonly tenantId?: string | any;
}

/**
 * ManagedInstanceKeyProps definition.
 */
export interface ManagedInstanceKeyProps {
  /**
   * The key type like 'ServiceManaged', 'AzureKeyVault'.
   */
  readonly serverKeyType?: 'ServiceManaged' | 'AzureKeyVault' | any;
  /**
   * The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
   */
  readonly uri?: string;
}

/**
 * ManagedInstanceLongTermRetentionPolicyProps definition.
 */
export interface ManagedInstanceLongTermRetentionPolicyProps {
  /**
   * The BackupStorageAccessTier for the LTR backups
   */
  readonly backupStorageAccessTier?: 'Hot' | 'Archive' | any;
  /**
   * The monthly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly monthlyRetention?: string;
  /**
   * The week of year to take the yearly backup in an ISO 8601 format.
   */
  readonly weekOfYear?: number | any;
  /**
   * The weekly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly weeklyRetention?: string;
  /**
   * The yearly retention policy for an LTR backup in an ISO 8601 format.
   */
  readonly yearlyRetention?: string;
}

/**
 * ManagedInstancePairInfo definition.
 */
export interface ManagedInstancePairInfo {
  /**
   * Id of Partner Managed Instance in pair.
   */
  readonly partnerManagedInstanceId?: string;
  /**
   * Id of Primary Managed Instance in pair.
   */
  readonly primaryManagedInstanceId?: string;
}

/**
 * ManagedInstancePrivateEndpointConnectionProps definition.
 */
export interface ManagedInstancePrivateEndpointConnectionProps {
  /**
   * Private endpoint which the connection belongs to.
   */
  readonly privateEndpoint?: ManagedInstancePrivateEndpointProperty | any;
  /**
   * Connection State of the Private Endpoint Connection.
   */
  readonly privateLinkServiceConnectionState?: ManagedInstancePrivateLinkServiceConnectionStateProperty | any;
}

/**
 * ManagedInstancePrivateEndpointProperty definition.
 */
export interface ManagedInstancePrivateEndpointProperty {
  /**
   * Resource id of the private endpoint.
   */
  readonly id?: string;
}

/**
 * ManagedInstancePrivateLinkServiceConnectionStateProperty definition.
 */
export interface ManagedInstancePrivateLinkServiceConnectionStateProperty {
  /**
   * The private link service connection description.
   */
  readonly description?: string;
  /**
   * The private link service connection status.
   */
  readonly status?: string;
}

/**
 * ManagedInstanceProps definition.
 */
export interface ManagedInstanceProps {
  /**
   * Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).
   */
  readonly administratorLogin?: string;
  /**
   * The administrator login password (required for managed instance creation).
   */
  readonly administratorLoginPassword?: string;
  /**
   * The Azure Active Directory administrator of the instance. This can only be used at instance create time. If used for instance update, it will be ignored or it will result in an error. For updates individual APIs will need to be used.
   */
  readonly administrators?: ManagedInstanceExternalAdministrator | any;
  /**
   * The managed instance's authentication metadata lookup mode.
   */
  readonly authenticationMetadata?: 'AzureAD' | 'Paired' | 'Windows' | any;
  /**
   * Collation of the managed instance.
   */
  readonly collation?: string;
  /**
   * Specifies the internal format of instance databases specific to the SQL engine version.
   */
  readonly databaseFormat?: 'AlwaysUpToDate' | 'SQLServer2022' | any;
  /**
   * The resource id of another managed instance whose DNS zone this managed instance will share after creation.
   */
  readonly dnsZonePartner?: string;
  /**
   * Hybrid secondary usage. Possible values are 'Active' (default value) and 'Passive' (customer uses the secondary as Passive DR).
   */
  readonly hybridSecondaryUsage?: 'Active' | 'Passive' | any;
  /**
   * The Id of the instance pool this managed server belongs to.
   */
  readonly instancePoolId?: string;
  /**
   * Whether or not this is a GPv2 variant of General Purpose edition.
   */
  readonly isGeneralPurposeV2?: boolean | any;
  /**
   * A CMK URI of the key to use for encryption.
   */
  readonly keyId?: string;
  /**
   * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
   */
  readonly licenseType?: 'LicenseIncluded' | 'BasePrice' | any;
  /**
   * Specifies maintenance configuration id to apply to this managed instance.
   */
  readonly maintenanceConfigurationId?: string;
  /**
   * Specifies the mode of database creation.
   * 
   * Default: Regular instance creation.
   * 
   * Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.
   */
  readonly managedInstanceCreateMode?: 'Default' | 'PointInTimeRestore' | any;
  /**
   * Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
   */
  readonly minimalTlsVersion?: string;
  /**
   * Pricing model of Managed Instance.
   */
  readonly pricingModel?: 'Regular' | 'Freemium' | any;
  /**
   * The resource id of a user assigned identity to be used by default.
   */
  readonly primaryUserAssignedIdentityId?: string;
  /**
   * Connection type used for connecting to the instance.
   */
  readonly proxyOverride?: 'Proxy' | 'Redirect' | 'Default' | any;
  /**
   * Whether or not the public data endpoint is enabled.
   */
  readonly publicDataEndpointEnabled?: boolean | any;
  /**
   * The storage account type to be used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage)
   */
  readonly requestedBackupStorageRedundancy?: 'Geo' | 'Local' | 'Zone' | 'GeoZone' | any;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
   */
  readonly restorePointInTime?: string;
  /**
   * The managed instance's service principal.
   */
  readonly servicePrincipal?: ServicePrincipal | any;
  /**
   * The resource identifier of the source managed instance associated with create operation of this instance.
   */
  readonly sourceManagedInstanceId?: string;
  /**
   * Storage IOps. Minimum value: 300. Maximum value: 80000. Increments of 1 IOps allowed only. Maximum value depends on the selected hardware family and number of vCores.
   */
  readonly storageIOps?: number | any;
  /**
   * Storage size in GB. Minimum value: 32. Maximum value: 16384. Increments of 32 GB allowed only. Maximum value depends on the selected hardware family and number of vCores.
   */
  readonly storageSizeInGB?: number | any;
  /**
   * Storage throughput MBps parameter is not supported in the instance create/update operation.
   */
  readonly storageThroughputMBps?: number | any;
  /**
   * Subnet resource ID for the managed instance.
   */
  readonly subnetId?: string;
  /**
   * Id of the timezone. Allowed values are timezones supported by Windows.
   * Windows keeps details on supported timezones, including the id, in registry under
   * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
   * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
   */
  readonly timezoneId?: string;
  /**
   * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
   */
  readonly vCores?: number | any;
  /**
   * Whether or not the multi-az is enabled.
   */
  readonly zoneRedundant?: boolean | any;
}

/**
 * ManagedInstanceVulnerabilityAssessmentProps definition.
 */
export interface ManagedInstanceVulnerabilityAssessmentProps {
  /**
   * The recurring scans settings
   */
  readonly recurringScans?: VulnerabilityAssessmentRecurringScansProps | any;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageAccountAccessKey?: string;
  /**
   * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
   */
  readonly storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageContainerSasKey?: string;
}

/**
 * ManagedLedgerDigestUploadsProps definition.
 */
export interface ManagedLedgerDigestUploadsProps {
  /**
   * The digest storage endpoint, which must be either an Azure blob storage endpoint or an URI for Azure Confidential Ledger.
   */
  readonly digestStorageEndpoint?: string;
}

/**
 * ManagedTransparentDataEncryptionProps definition.
 */
export interface ManagedTransparentDataEncryptionProps {
  /**
   * Specifies the state of the transparent data encryption.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * NetworkIsolationSettings definition.
 */
export interface NetworkIsolationSettings {
  /**
   * The resource id for the SQL server which is the target of this request. If set, private endpoint connection will be created for the SQL server. Must match server which is target of the operation.
   */
  readonly sqlServerResourceId?: string;
  /**
   * The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for StorageUri parameter.
   */
  readonly storageAccountResourceId?: string;
}

/**
 * PartnerInfo definition.
 */
export interface PartnerInfo {
  /**
   * Resource identifier of the partner server.
   */
  readonly id?: string;
}

/**
 * PartnerRegionInfo definition.
 */
export interface PartnerRegionInfo {
  /**
   * Geo location of the partner managed instances.
   */
  readonly location?: string;
}

/**
 * PrivateEndpointConnectionProps definition.
 */
export interface PrivateEndpointConnectionProps {
  /**
   * Private endpoint which the connection belongs to.
   */
  readonly privateEndpoint?: PrivateEndpointProperty | any;
  /**
   * Connection state of the private endpoint connection.
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty | any;
}

/**
 * PrivateEndpointProperty definition.
 */
export interface PrivateEndpointProperty {
  /**
   * Resource id of the private endpoint.
   */
  readonly id?: string;
}

/**
 * PrivateLinkServiceConnectionStateProperty definition.
 */
export interface PrivateLinkServiceConnectionStateProperty {
  /**
   * The private link service connection description.
   */
  readonly description?: string;
  /**
   * The private link service connection status.
   */
  readonly status?: 'Approved' | 'Pending' | 'Rejected' | 'Disconnected' | any;
}

/**
 * ReplicationLinkProps definition.
 */
export interface ReplicationLinkProps {
  /**
   * Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
   */
  readonly linkType?: 'GEO' | 'NAMED' | 'STANDBY' | any;
}

/**
 * ResourceIdentity definition.
 */
export interface ResourceIdentity {
  /**
   * The resource ids of the user assigned identities to use
   */
  readonly userAssignedIdentities?: Record<string, UserIdentity> | any;
}

/**
 * ScheduleItem definition.
 */
export interface ScheduleItem {
  /**
   * Start day.
   */
  readonly startDay?: 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | any;
  /**
   * Start time.
   */
  readonly startTime?: string;
  /**
   * Stop day.
   */
  readonly stopDay?: 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | any;
  /**
   * Stop time.
   */
  readonly stopTime?: string;
}

/**
 * SecurityAlertPolicyProps definition.
 */
export interface SecurityAlertPolicyProps {
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force
   */
  readonly disabledAlerts?: string[] | any;
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  readonly emailAccountAdmins?: boolean | any;
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  readonly emailAddresses?: string[] | any;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
   */
  readonly state?: 'New' | 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
   */
  readonly storageEndpoint?: string;
}

/**
 * SecurityAlertsPolicyProps definition.
 */
export interface SecurityAlertsPolicyProps {
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force
   */
  readonly disabledAlerts?: string[] | any;
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  readonly emailAccountAdmins?: boolean | any;
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  readonly emailAddresses?: string[] | any;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
   */
  readonly storageEndpoint?: string;
}

/**
 * SensitivityLabelProps definition.
 */
export interface SensitivityLabelProps {
  /**
   * clientClassificationSource
   */
  readonly clientClassificationSource?: 'None' | 'Native' | 'Recommended' | 'MIP' | any;
  /**
   * The information type.
   */
  readonly informationType?: string;
  /**
   * The information type ID.
   */
  readonly informationTypeId?: string;
  /**
   * The label ID.
   */
  readonly labelId?: string;
  /**
   * The label name.
   */
  readonly labelName?: string;
  /**
   * rank
   */
  readonly rank?: 'None' | 'Low' | 'Medium' | 'High' | 'Critical' | any;
}

/**
 * ServerBlobAuditingPolicyProps definition.
 */
export interface ServerBlobAuditingPolicyProps {
  /**
   * Specifies the Actions-Groups and Actions to audit.
   * 
   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
   * 
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   * 
   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
   * 
   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
   * 
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   * DBCC_GROUP
   * DATABASE_OWNERSHIP_CHANGE_GROUP
   * DATABASE_CHANGE_GROUP
   * LEDGER_OPERATION_GROUP
   * 
   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
   * 
   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   * 
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   * 
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   * 
   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   * 
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   * 
   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  readonly auditActionsAndGroups?: string[] | any;
  /**
   * Specifies whether audit events are sent to Azure Monitor. 
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isAzureMonitorTargetEnabled?: boolean | any;
  /**
   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true
   * 
   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isDevopsAuditEnabled?: boolean | any;
  /**
   * Specifies whether Managed Identity is used to access blob storage
   */
  readonly isManagedIdentityInUse?: boolean | any;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  readonly isStorageSecondaryKeyInUse?: boolean | any;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  readonly queueDelayMs?: number | any;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  readonly retentionDays?: number | any;
  /**
   * Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the auditing storage account. 
   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage subscription Id.
   */
  readonly storageAccountSubscriptionId?: string | any;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  readonly storageEndpoint?: string;
}

/**
 * ServerConfigurationOptionProps definition.
 */
export interface ServerConfigurationOptionProps {
  /**
   * Value of the server configuration option.
   */
  readonly serverConfigurationOptionValue?: number | any;
}

/**
 * ServerConnectionPolicyProps definition.
 */
export interface ServerConnectionPolicyProps {
  /**
   * The server connection type.
   */
  readonly connectionType?: 'Default' | 'Redirect' | 'Proxy' | any;
}

/**
 * ServerDevOpsAuditSettingsProps definition.
 */
export interface ServerDevOpsAuditSettingsProps {
  /**
   * Specifies whether DevOps audit events are sent to Azure Monitor. 
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
   * 
   * When using REST API to configure DevOps audit, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should be also created.
   * 
   * Diagnostic Settings URI format:
   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   * 
   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   * 
   */
  readonly isAzureMonitorTargetEnabled?: boolean | any;
  /**
   * Specifies whether Managed Identity is used to access blob storage
   */
  readonly isManagedIdentityInUse?: boolean | any;
  /**
   * Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
  /**
   * Specifies the identifier key of the auditing storage account. 
   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  readonly storageAccountAccessKey?: string;
  /**
   * Specifies the blob storage subscription Id.
   */
  readonly storageAccountSubscriptionId?: string | any;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  readonly storageEndpoint?: string;
}

/**
 * ServerExternalAdministrator definition.
 */
export interface ServerExternalAdministrator {
  /**
   * Type of the sever administrator.
   */
  readonly administratorType?: 'ActiveDirectory' | any;
  /**
   * Azure Active Directory only Authentication enabled.
   */
  readonly azureADOnlyAuthentication?: boolean | any;
  /**
   * Login name of the server administrator.
   */
  readonly login?: string;
  /**
   * Principal Type of the sever administrator.
   */
  readonly principalType?: 'User' | 'Group' | 'Application' | any;
  /**
   * SID (object ID) of the server administrator.
   */
  readonly sid?: string | any;
  /**
   * Tenant ID of the administrator.
   */
  readonly tenantId?: string | any;
}

/**
 * ServerFirewallRuleProps definition.
 */
export interface ServerFirewallRuleProps {
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' for all Azure-internal IP addresses.
   */
  readonly endIpAddress?: string;
  /**
   * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' for all Azure-internal IP addresses.
   */
  readonly startIpAddress?: string;
}

/**
 * ServerInfo definition.
 */
export interface ServerInfo {
  /**
   * Server Id.
   */
  readonly serverId?: string;
}

/**
 * ServerKeyProps definition.
 */
export interface ServerKeyProps {
  /**
   * The server key type like 'ServiceManaged', 'AzureKeyVault'.
   */
  readonly serverKeyType?: 'ServiceManaged' | 'AzureKeyVault' | any;
  /**
   * The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. The AKV URI is required to be in this format: 'https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion'
   */
  readonly uri?: string;
}

/**
 * ServerProps definition.
 */
export interface ServerProps {
  /**
   * Administrator username for the server. Once created it cannot be changed.
   */
  readonly administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  readonly administratorLoginPassword?: string;
  /**
   * The Azure Active Directory administrator of the server. This can only be used at server create time. If used for server update, it will be ignored or it will result in an error. For updates individual APIs will need to be used.
   */
  readonly administrators?: ServerExternalAdministrator | any;
  /**
   * The Client id used for cross tenant CMK scenario
   */
  readonly federatedClientId?: string | any;
  /**
   * Whether or not to enable IPv6 support for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
   */
  readonly isIPv6Enabled?: 'Enabled' | 'Disabled' | any;
  /**
   * A CMK URI of the key to use for encryption.
   */
  readonly keyId?: string;
  /**
   * Minimal TLS version. Allowed values: 'None', 1.0', '1.1', '1.2', '1.3'
   */
  readonly minimalTlsVersion?: 'None' | '1.0' | '1.1' | '1.2' | '1.3' | any;
  /**
   * The resource id of a user assigned identity to be used by default.
   */
  readonly primaryUserAssignedIdentityId?: string;
  /**
   * Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' or 'SecuredByPerimeter'
   */
  readonly publicNetworkAccess?: 'Enabled' | 'Disabled' | 'SecuredByPerimeter' | any;
  /**
   * Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
   */
  readonly restrictOutboundNetworkAccess?: 'Enabled' | 'Disabled' | any;
  /**
   * The version of the server.
   */
  readonly version?: string;
}

/**
 * ServerTrustCertificateProps definition.
 */
export interface ServerTrustCertificateProps {
  /**
   * The certificate public blob
   */
  readonly publicBlob?: string;
}

/**
 * ServerTrustGroupProps definition.
 */
export interface ServerTrustGroupProps {
  /**
   * Group members information for the server trust group.
   */
  readonly groupMembers?: ServerInfo[] | any;
  /**
   * Trust scope of the server trust group.
   */
  readonly trustScopes?: 'GlobalTransactions' | 'ServiceBroker'[] | any;
}

/**
 * ServerVulnerabilityAssessmentProps definition.
 */
export interface ServerVulnerabilityAssessmentProps {
  /**
   * The recurring scans settings
   */
  readonly recurringScans?: VulnerabilityAssessmentRecurringScansProps | any;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageAccountAccessKey?: string;
  /**
   * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
   */
  readonly storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall
   */
  readonly storageContainerSasKey?: string;
}

/**
 * ServicePrincipal definition.
 */
export interface ServicePrincipal {
}

/**
 * Sku definition.
 */
export interface Sku {
  /**
   * Capacity of the particular SKU.
   */
  readonly capacity?: number | any;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be captured here.
   */
  readonly family?: string;
  /**
   * The name of the SKU, typically, a letter + Number code, e.g. P3.
   */
  readonly name?: string;
  /**
   * Size of the particular SKU
   */
  readonly size?: string;
  /**
   * The tier or edition of the particular SKU, e.g. Basic, Premium.
   */
  readonly tier?: string;
}

/**
 * SqlAgentConfigurationProps definition.
 */
export interface SqlAgentConfigurationProps {
  /**
   * The state of Sql Agent.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * SqlVulnerabilityAssessmentPolicyProps definition.
 */
export interface SqlVulnerabilityAssessmentPolicyProps {
  /**
   * Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * StartStopManagedInstanceScheduleProps definition.
 */
export interface StartStopManagedInstanceScheduleProps {
  /**
   * The description of the schedule.
   */
  readonly description?: string;
  /**
   * Schedule list.
   */
  readonly scheduleList?: ScheduleItem[] | any;
  /**
   * The time zone of the schedule.
   */
  readonly timeZoneId?: string;
}

/**
 * SyncAgentProps definition.
 */
export interface SyncAgentProps {
  /**
   * ARM resource id of the sync database in the sync agent.
   */
  readonly syncDatabaseId?: string;
}

/**
 * SyncGroupProps definition.
 */
export interface SyncGroupProps {
  /**
   * Conflict logging retention period.
   */
  readonly conflictLoggingRetentionInDays?: number | any;
  /**
   * Conflict resolution policy of the sync group.
   */
  readonly conflictResolutionPolicy?: 'HubWin' | 'MemberWin' | any;
  /**
   * If conflict logging is enabled.
   */
  readonly enableConflictLogging?: boolean | any;
  /**
   * Password for the sync group hub database credential.
   */
  readonly hubDatabasePassword?: string;
  /**
   * User name for the sync group hub database credential.
   */
  readonly hubDatabaseUserName?: string;
  /**
   * Sync interval of the sync group.
   */
  readonly interval?: number | any;
  /**
   * Sync schema of the sync group.
   */
  readonly schema?: SyncGroupSchema | any;
  /**
   * ARM resource id of the sync database in the sync group.
   */
  readonly syncDatabaseId?: string;
  /**
   * If use private link connection is enabled.
   */
  readonly usePrivateLinkConnection?: boolean | any;
}

/**
 * SyncGroupSchema definition.
 */
export interface SyncGroupSchema {
  /**
   * Name of master sync member where the schema is from.
   */
  readonly masterSyncMemberName?: string;
  /**
   * List of tables in sync group schema.
   */
  readonly tables?: SyncGroupSchemaTable[] | any;
}

/**
 * SyncGroupSchemaTable definition.
 */
export interface SyncGroupSchemaTable {
  /**
   * List of columns in sync group schema.
   */
  readonly columns?: SyncGroupSchemaTableColumn[] | any;
  /**
   * Quoted name of sync group schema table.
   */
  readonly quotedName?: string;
}

/**
 * SyncGroupSchemaTableColumn definition.
 */
export interface SyncGroupSchemaTableColumn {
  /**
   * Data size of the column.
   */
  readonly dataSize?: string;
  /**
   * Data type of the column.
   */
  readonly dataType?: string;
  /**
   * Quoted name of sync group table column.
   */
  readonly quotedName?: string;
}

/**
 * SyncMemberProps definition.
 */
export interface SyncMemberProps {
  /**
   * Database name of the member database in the sync member.
   */
  readonly databaseName?: string;
  /**
   * Database type of the sync member.
   */
  readonly databaseType?: 'AzureSqlDatabase' | 'SqlServerDatabase' | any;
  /**
   * Password of the member database in the sync member.
   */
  readonly password?: string;
  /**
   * Server name of the member database in the sync member
   */
  readonly serverName?: string;
  /**
   * SQL Server database id of the sync member.
   */
  readonly sqlServerDatabaseId?: string | any;
  /**
   * ARM resource id of the sync agent in the sync member.
   */
  readonly syncAgentId?: string;
  /**
   * Sync direction of the sync member.
   */
  readonly syncDirection?: 'Bidirectional' | 'OneWayMemberToHub' | 'OneWayHubToMember' | any;
  /**
   * ARM resource id of the sync member logical database, for sync members in Azure.
   */
  readonly syncMemberAzureDatabaseResourceId?: string;
  /**
   * Whether to use private link connection.
   */
  readonly usePrivateLinkConnection?: boolean | any;
  /**
   * User name of the member database in the sync member.
   */
  readonly userName?: string;
}

/**
 * TransparentDataEncryptionProps definition.
 */
export interface TransparentDataEncryptionProps {
  /**
   * Specifies the state of the transparent data encryption.
   */
  readonly state?: 'Enabled' | 'Disabled' | any;
}

/**
 * UserIdentity definition.
 */
export interface UserIdentity {
}

/**
 * VirtualNetworkRuleProps definition.
 */
export interface VirtualNetworkRuleProps {
  /**
   * Create firewall rule before the virtual network has vnet service endpoint enabled.
   */
  readonly ignoreMissingVnetServiceEndpoint?: boolean | any;
  /**
   * The ARM resource id of the virtual network subnet.
   */
  readonly virtualNetworkSubnetId?: string;
}

/**
 * VulnerabilityAssessmentRecurringScansProps definition.
 */
export interface VulnerabilityAssessmentRecurringScansProps {
  /**
   * Specifies that the schedule scan notification will be is sent to the subscription administrators.
   */
  readonly emailSubscriptionAdmins?: boolean | any;
  /**
   * Specifies an array of e-mail addresses to which the scan notification is sent.
   */
  readonly emails?: string[] | any;
  /**
   * Recurring scans state.
   */
  readonly isEnabled?: boolean | any;
}

/**
 * WorkloadClassifierProps definition.
 */
export interface WorkloadClassifierProps {
  /**
   * The workload classifier context.
   */
  readonly context?: string;
  /**
   * The workload classifier end time for classification.
   */
  readonly endTime?: string;
  /**
   * The workload classifier importance.
   */
  readonly importance?: string;
  /**
   * The workload classifier label.
   */
  readonly label?: string;
  /**
   * The workload classifier member name.
   */
  readonly memberName?: string;
  /**
   * The workload classifier start time for classification.
   */
  readonly startTime?: string;
}

/**
 * WorkloadGroupProps definition.
 */
export interface WorkloadGroupProps {
  /**
   * The workload group importance level.
   */
  readonly importance?: string;
  /**
   * The workload group cap percentage resource.
   */
  readonly maxResourcePercent?: number | any;
  /**
   * The workload group request maximum grant percentage.
   */
  readonly maxResourcePercentPerRequest?: number | any;
  /**
   * The workload group minimum percentage resource.
   */
  readonly minResourcePercent?: number | any;
  /**
   * The workload group request minimum grant percentage.
   */
  readonly minResourcePercentPerRequest?: number | any;
  /**
   * The workload group query execution timeout.
   */
  readonly queryExecutionTimeout?: number | any;
}

/**
 * managedInstances_administrators_childResource definition.
 */
export interface managedInstances_administrators_childResource {
  /**
   * name
   */
  readonly name?: 'ActiveDirectory' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceAdministratorProps | any;
}

/**
 * managedInstances_advancedThreatProtectionSettings_childResource definition.
 */
export interface managedInstances_advancedThreatProtectionSettings_childResource {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AdvancedThreatProtectionProps | any;
}

/**
 * managedInstances_azureADOnlyAuthentications_childResource definition.
 */
export interface managedInstances_azureADOnlyAuthentications_childResource {
  /**
   * The name of server azure active directory only authentication.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceAzureADOnlyAuthProps | any;
}

/**
 * managedInstances_databases_advancedThreatProtectionSettings_childResource definition.
 */
export interface managedInstances_databases_advancedThreatProtectionSettings_childResource {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AdvancedThreatProtectionProps | any;
}

/**
 * managedInstances_databases_backupLongTermRetentionPolicies_childResource definition.
 */
export interface managedInstances_databases_backupLongTermRetentionPolicies_childResource {
  /**
   * The policy name. Should always be Default.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceLongTermRetentionPolicyProps | any;
}

/**
 * managedInstances_databases_backupShortTermRetentionPolicies_childResource definition.
 */
export interface managedInstances_databases_backupShortTermRetentionPolicies_childResource {
  /**
   * The policy name. Should always be "default".
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedBackupShortTermRetentionPolicyProps | any;
}

/**
 * managedInstances_databases_childResource definition.
 */
export interface managedInstances_databases_childResource {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the database.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedDatabaseProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * managedInstances_databases_ledgerDigestUploads_childResource definition.
 */
export interface managedInstances_databases_ledgerDigestUploads_childResource {
  /**
   * The name of the Ledger Digest Upload Configurations.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedLedgerDigestUploadsProps | any;
}

/**
 * managedInstances_databases_securityAlertPolicies_childResource definition.
 */
export interface managedInstances_databases_securityAlertPolicies_childResource {
  /**
   * The name of the security alert policy.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SecurityAlertPolicyProps | any;
}

/**
 * managedInstances_databases_transparentDataEncryption_childResource definition.
 */
export interface managedInstances_databases_transparentDataEncryption_childResource {
  /**
   * The name of the transparent data encryption configuration.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedTransparentDataEncryptionProps | any;
}

/**
 * managedInstances_databases_vulnerabilityAssessments_childResource definition.
 */
export interface managedInstances_databases_vulnerabilityAssessments_childResource {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseVulnerabilityAssessmentProps | any;
}

/**
 * managedInstances_distributedAvailabilityGroups_childResource definition.
 */
export interface managedInstances_distributedAvailabilityGroups_childResource {
  /**
   * The distributed availability group name.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: DistributedAvailabilityGroupProps | any;
}

/**
 * managedInstances_dnsAliases_childResource definition.
 */
export interface managedInstances_dnsAliases_childResource {
  /**
   * Whether or not DNS record should be created for this alias.
   */
  readonly createDnsRecord?: boolean | any;
  /**
   * name
   */
  readonly name?: string;
}

/**
 * managedInstances_dtc_childResource definition.
 */
export interface managedInstances_dtc_childResource {
  /**
   * The name of the managed instance DTC.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceDtcProps | any;
}

/**
 * managedInstances_encryptionProtector_childResource definition.
 */
export interface managedInstances_encryptionProtector_childResource {
  /**
   * The name of the encryption protector to be updated.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceEncryptionProtectorProps | any;
}

/**
 * managedInstances_keys_childResource definition.
 */
export interface managedInstances_keys_childResource {
  /**
   * The name of the managed instance key to be operated on (updated or created).
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceKeyProps | any;
}

/**
 * managedInstances_privateEndpointConnections_childResource definition.
 */
export interface managedInstances_privateEndpointConnections_childResource {
  /**
   * name
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstancePrivateEndpointConnectionProps | any;
}

/**
 * managedInstances_securityAlertPolicies_childResource definition.
 */
export interface managedInstances_securityAlertPolicies_childResource {
  /**
   * The name of the security alert policy.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SecurityAlertsPolicyProps | any;
}

/**
 * managedInstances_serverConfigurationOptions_childResource definition.
 */
export interface managedInstances_serverConfigurationOptions_childResource {
  /**
   * The name of the server configuration option.
   */
  readonly name?: 'allowPolybaseExport' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ServerConfigurationOptionProps | any;
}

/**
 * managedInstances_serverTrustCertificates_childResource definition.
 */
export interface managedInstances_serverTrustCertificates_childResource {
  /**
   * Name of of the certificate to upload.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ServerTrustCertificateProps | any;
}

/**
 * managedInstances_sqlAgent_childResource definition.
 */
export interface managedInstances_sqlAgent_childResource {
  /**
   * name
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SqlAgentConfigurationProps | any;
}

/**
 * managedInstances_startStopSchedules_childResource definition.
 */
export interface managedInstances_startStopSchedules_childResource {
  /**
   * Name of the managed instance Start/Stop schedule.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: StartStopManagedInstanceScheduleProps | any;
}

/**
 * managedInstances_vulnerabilityAssessments_childResource definition.
 */
export interface managedInstances_vulnerabilityAssessments_childResource {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ManagedInstanceVulnerabilityAssessmentProps | any;
}

/**
 * servers_administrators_childResource definition.
 */
export interface servers_administrators_childResource {
  /**
   * The name of server active directory administrator.
   */
  readonly name?: 'ActiveDirectory' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AdministratorProps | any;
}

/**
 * servers_advancedThreatProtectionSettings_childResource definition.
 */
export interface servers_advancedThreatProtectionSettings_childResource {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AdvancedThreatProtectionProps | any;
}

/**
 * servers_auditingSettings_childResource definition.
 */
export interface servers_auditingSettings_childResource {
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ServerBlobAuditingPolicyProps | any;
}

/**
 * servers_azureADOnlyAuthentications_childResource definition.
 */
export interface servers_azureADOnlyAuthentications_childResource {
  /**
   * The name of server azure active directory only authentication.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AzureADOnlyAuthProps | any;
}

/**
 * servers_connectionPolicies_childResource definition.
 */
export interface servers_connectionPolicies_childResource {
  /**
   * The name of the connection policy.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ServerConnectionPolicyProps | any;
}

/**
 * servers_databases_advancedThreatProtectionSettings_childResource definition.
 */
export interface servers_databases_advancedThreatProtectionSettings_childResource {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: AdvancedThreatProtectionProps | any;
}

/**
 * servers_databases_auditingSettings_childResource definition.
 */
export interface servers_databases_auditingSettings_childResource {
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseBlobAuditingPolicyProps | any;
}

/**
 * servers_databases_backupLongTermRetentionPolicies_childResource definition.
 */
export interface servers_databases_backupLongTermRetentionPolicies_childResource {
  /**
   * The policy name. Should always be Default.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: BaseLongTermRetentionPolicyProps | any;
}

/**
 * servers_databases_backupShortTermRetentionPolicies_childResource definition.
 */
export interface servers_databases_backupShortTermRetentionPolicies_childResource {
  /**
   * The policy name. Should always be "default".
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: BackupShortTermRetentionPolicyProps | any;
}

/**
 * servers_databases_childResource definition.
 */
export interface servers_databases_childResource {
  /**
   * The Azure Active Directory identity of the database.
   */
  readonly identity?: DatabaseIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the database.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseProps | any;
  /**
   * The database SKU.
   * 
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
   * 
   * ```azurecli
   * az sql db list-editions -l <location> -o table
   * ````
   * 
   * ```powershell
   * Get-AzSqlServerServiceObjective -Location <location>
   * ````
   * 
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * servers_databases_dataMaskingPolicies_childResource definition.
 */
export interface servers_databases_dataMaskingPolicies_childResource {
  /**
   * The name of the database for which the data masking policy applies.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: DataMaskingPolicyProps | any;
}

/**
 * servers_databases_dataMaskingPolicies_rules_childResource definition.
 */
export interface servers_databases_dataMaskingPolicies_rules_childResource {
  /**
   * The name of the data masking rule.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: DataMaskingRuleProps | any;
}

/**
 * servers_databases_extendedAuditingSettings_childResource definition.
 */
export interface servers_databases_extendedAuditingSettings_childResource {
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ExtendedDatabaseBlobAuditingPolicyProps | any;
}

/**
 * servers_databases_extensions_childResource definition.
 */
export interface servers_databases_extensions_childResource {
  /**
   * name
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseExtensionsProps | any;
}

/**
 * servers_databases_geoBackupPolicies_childResource definition.
 */
export interface servers_databases_geoBackupPolicies_childResource {
  /**
   * The name of the Geo backup policy. This should always be 'Default'.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: GeoBackupPolicyProps | any;
}

/**
 * servers_databases_ledgerDigestUploads_childResource definition.
 */
export interface servers_databases_ledgerDigestUploads_childResource {
  /**
   * name
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: LedgerDigestUploadsProps | any;
}

/**
 * servers_databases_replicationLinks_childResource definition.
 */
export interface servers_databases_replicationLinks_childResource {
  /**
   * name
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ReplicationLinkProps | any;
}

/**
 * servers_databases_securityAlertPolicies_childResource definition.
 */
export interface servers_databases_securityAlertPolicies_childResource {
  /**
   * The name of the security alert policy.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SecurityAlertsPolicyProps | any;
}

/**
 * servers_databases_sqlVulnerabilityAssessments_baselines_rules_childResource definition.
 */
export interface servers_databases_sqlVulnerabilityAssessments_baselines_rules_childResource {
  /**
   * The vulnerability assessment rule ID.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseSqlVulnerabilityAssessmentRuleBaselineInputProps | any;
}

/**
 * servers_databases_syncGroups_childResource definition.
 */
export interface servers_databases_syncGroups_childResource {
  /**
   * The name of the sync group.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: SyncGroupProps | any;
  /**
   * The name and capacity of the SKU.
   */
  readonly sku?: Sku | any;
}

/**
 * servers_databases_syncGroups_syncMembers_childResource definition.
 */
export interface servers_databases_syncGroups_syncMembers_childResource {
  /**
   * The name of the sync member.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: SyncMemberProps | any;
}

/**
 * servers_databases_transparentDataEncryption_childResource definition.
 */
export interface servers_databases_transparentDataEncryption_childResource {
  /**
   * The name of the transparent data encryption configuration.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: TransparentDataEncryptionProps | any;
}

/**
 * servers_databases_vulnerabilityAssessments_childResource definition.
 */
export interface servers_databases_vulnerabilityAssessments_childResource {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: DatabaseVulnerabilityAssessmentProps | any;
}

/**
 * servers_databases_workloadGroups_childResource definition.
 */
export interface servers_databases_workloadGroups_childResource {
  /**
   * The name of the workload group.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: WorkloadGroupProps | any;
}

/**
 * servers_databases_workloadGroups_workloadClassifiers_childResource definition.
 */
export interface servers_databases_workloadGroups_workloadClassifiers_childResource {
  /**
   * The name of the workload classifier to create/update.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: WorkloadClassifierProps | any;
}

/**
 * servers_devOpsAuditingSettings_childResource definition.
 */
export interface servers_devOpsAuditingSettings_childResource {
  /**
   * name
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ServerDevOpsAuditSettingsProps | any;
}

/**
 * servers_dnsAliases_childResource definition.
 */
export interface servers_dnsAliases_childResource {
  /**
   * The name of the server dns alias.
   */
  readonly name?: string;
}

/**
 * servers_elasticPools_childResource definition.
 */
export interface servers_elasticPools_childResource {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the elastic pool.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ElasticPoolProps | any;
  /**
   * The elastic pool SKU.
   * 
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
   * 
   * ```azurecli
   * az sql elastic-pool list-editions -l <location> -o table
   * ````
   * 
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * servers_encryptionProtector_childResource definition.
 */
export interface servers_encryptionProtector_childResource {
  /**
   * The name of the encryption protector to be updated.
   */
  readonly name?: 'current' | any;
  /**
   * Resource properties.
   */
  readonly properties?: EncryptionProtectorProps | any;
}

/**
 * servers_extendedAuditingSettings_childResource definition.
 */
export interface servers_extendedAuditingSettings_childResource {
  /**
   * name
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ExtendedServerBlobAuditingPolicyProps | any;
}

/**
 * servers_failoverGroups_childResource definition.
 */
export interface servers_failoverGroups_childResource {
  /**
   * The name of the failover group.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: FailoverGroupProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * servers_firewallRules_childResource definition.
 */
export interface servers_firewallRules_childResource {
  /**
   * The name of the firewall rule.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ServerFirewallRuleProps | any;
}

/**
 * servers_ipv6FirewallRules_childResource definition.
 */
export interface servers_ipv6FirewallRules_childResource {
  /**
   * The name of the firewall rule.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: IPv6ServerFirewallRuleProps | any;
}

/**
 * servers_jobAgents_childResource definition.
 */
export interface servers_jobAgents_childResource {
  /**
   * The identity of the job agent.
   */
  readonly identity?: JobAgentIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the job agent to be created or updated.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobAgentProps | any;
  /**
   * The name and tier of the SKU.
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * servers_jobAgents_credentials_childResource definition.
 */
export interface servers_jobAgents_credentials_childResource {
  /**
   * The name of the credential.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobCredentialProps | any;
}

/**
 * servers_jobAgents_jobs_childResource definition.
 */
export interface servers_jobAgents_jobs_childResource {
  /**
   * The name of the job to get.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobProps | any;
}

/**
 * servers_jobAgents_jobs_executions_childResource definition.
 */
export interface servers_jobAgents_jobs_executions_childResource {
  /**
   * The job execution id to create the job execution under.
   */
  readonly name?: string | any;
}

/**
 * servers_jobAgents_jobs_steps_childResource definition.
 */
export interface servers_jobAgents_jobs_steps_childResource {
  /**
   * The name of the job step.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobStepProps | any;
}

/**
 * servers_jobAgents_privateEndpoints_childResource definition.
 */
export interface servers_jobAgents_privateEndpoints_childResource {
  /**
   * The name of the private endpoint.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobPrivateEndpointProps | any;
}

/**
 * servers_jobAgents_targetGroups_childResource definition.
 */
export interface servers_jobAgents_targetGroups_childResource {
  /**
   * The name of the target group.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: JobTargetGroupProps | any;
}

/**
 * servers_keys_childResource definition.
 */
export interface servers_keys_childResource {
  /**
   * The name of the server key to be operated on (updated or created). The key name is required to be in the format of 'vault_key_version'. For example, if the keyId is https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion, then the server key name should be formatted as: YourVaultName_YourKeyName_YourKeyVersion
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: ServerKeyProps | any;
}

/**
 * servers_outboundFirewallRules_childResource definition.
 */
export interface servers_outboundFirewallRules_childResource {
  /**
   * name
   */
  readonly name?: string;
}

/**
 * servers_privateEndpointConnections_childResource definition.
 */
export interface servers_privateEndpointConnections_childResource {
  /**
   * name
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: PrivateEndpointConnectionProps | any;
}

/**
 * servers_securityAlertPolicies_childResource definition.
 */
export interface servers_securityAlertPolicies_childResource {
  /**
   * The name of the threat detection policy.
   */
  readonly name?: 'Default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SecurityAlertsPolicyProps | any;
}

/**
 * servers_sqlVulnerabilityAssessments_childResource definition.
 */
export interface servers_sqlVulnerabilityAssessments_childResource {
  /**
   * The name of the SQL Vulnerability Assessment.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: SqlVulnerabilityAssessmentPolicyProps | any;
}

/**
 * servers_syncAgents_childResource definition.
 */
export interface servers_syncAgents_childResource {
  /**
   * The name of the sync agent.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: SyncAgentProps | any;
}

/**
 * servers_virtualNetworkRules_childResource definition.
 */
export interface servers_virtualNetworkRules_childResource {
  /**
   * The name of the virtual network rule.
   */
  readonly name?: string;
  /**
   * Resource properties.
   */
  readonly properties?: VirtualNetworkRuleProps | any;
}

/**
 * servers_vulnerabilityAssessments_childResource definition.
 */
export interface servers_vulnerabilityAssessments_childResource {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name?: 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties?: ServerVulnerabilityAssessmentProps | any;
}

/**
 * Properties for Microsoft.Sql/instancePools (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/instancePools
 *
 * **ARM Resource Type**: `Microsoft.Sql/instancePools`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmInstancePoolsProps {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the instance pool to be created or updated.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: InstancePoolProps | any;
  /**
   * The name and tier of the SKU.
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/locations/instanceFailoverGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/locations/instanceFailoverGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/locations/instanceFailoverGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLocationsInstanceFailoverGroupsProps {
  /**
   * The name of the failover group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: InstanceFailoverGroupProps | any;
}

/**
 * Properties for Microsoft.Sql/locations/serverTrustGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/locations/serverTrustGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/locations/serverTrustGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmLocationsServerTrustGroupsProps {
  /**
   * The name of the server trust group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ServerTrustGroupProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesProps {
  /**
   * The Azure Active Directory identity of the managed instance.
   */
  readonly identity?: ResourceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the managed instance.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceProps | any;
  /**
   * Managed instance SKU. Allowed values for sku.name: GP_Gen5, GP_G8IM, GP_G8IH, BC_Gen5, BC_G8IM, BC_G8IH
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/administrators (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/administrators
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/administrators`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesAdministratorsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceAdministratorProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/advancedThreatProtectionSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/advancedThreatProtectionSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/advancedThreatProtectionSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesAdvancedThreatProtectionSettingsProps {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AdvancedThreatProtectionProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/azureADOnlyAuthentications (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/azureADOnlyAuthentications
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/azureADOnlyAuthentications`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesAzureADOnlyAuthenticationsProps {
  /**
   * The name of server azure active directory only authentication.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceAzureADOnlyAuthProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesProps {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the database.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ManagedDatabaseProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesAdvancedThreatProtectionSettingsProps {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AdvancedThreatProtectionProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesBackupLongTermRetentionPoliciesProps {
  /**
   * The policy name. Should always be Default.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceLongTermRetentionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesBackupShortTermRetentionPoliciesProps {
  /**
   * The policy name. Should always be "default".
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedBackupShortTermRetentionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/ledgerDigestUploads (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/ledgerDigestUploads
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/ledgerDigestUploads`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesLedgerDigestUploadsProps {
  /**
   * The name of the Ledger Digest Upload Configurations.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedLedgerDigestUploadsProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesSchemasTablesColumnsSensitivityLabelsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SensitivityLabelProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/securityAlertPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/securityAlertPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/securityAlertPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesSecurityAlertPoliciesProps {
  /**
   * The name of the security alert policy.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SecurityAlertPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/transparentDataEncryption (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/transparentDataEncryption
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/transparentDataEncryption`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesTransparentDataEncryptionProps {
  /**
   * The name of the transparent data encryption configuration.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedTransparentDataEncryptionProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesVulnerabilityAssessmentsProps {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseVulnerabilityAssessmentProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDatabasesVulnerabilityAssessmentsRulesBaselinesProps {
  /**
   * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
   */
  readonly name: 'master' | 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseVulnerabilityAssessmentRuleBaselineProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/distributedAvailabilityGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/distributedAvailabilityGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/distributedAvailabilityGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDistributedAvailabilityGroupsProps {
  /**
   * The distributed availability group name.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: DistributedAvailabilityGroupProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/dnsAliases (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/dnsAliases
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/dnsAliases`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDnsAliasesProps {
  /**
   * Whether or not DNS record should be created for this alias.
   */
  readonly createDnsRecord?: boolean | any;
  /**
   * name
   */
  readonly name: string;
}

/**
 * Properties for Microsoft.Sql/managedInstances/dtc (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/dtc
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/dtc`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesDtcProps {
  /**
   * The name of the managed instance DTC.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceDtcProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/encryptionProtector (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/encryptionProtector
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/encryptionProtector`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesEncryptionProtectorProps {
  /**
   * The name of the encryption protector to be updated.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceEncryptionProtectorProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/keys (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/keys
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/keys`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesKeysProps {
  /**
   * The name of the managed instance key to be operated on (updated or created).
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceKeyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/privateEndpointConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/privateEndpointConnections
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/privateEndpointConnections`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesPrivateEndpointConnectionsProps {
  /**
   * name
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstancePrivateEndpointConnectionProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesRestorableDroppedDatabasesBackupShortTermRetentionPoliciesProps {
  /**
   * The policy name. Should always be "default".
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedBackupShortTermRetentionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/securityAlertPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/securityAlertPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/securityAlertPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesSecurityAlertPoliciesProps {
  /**
   * The name of the security alert policy.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SecurityAlertsPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/serverConfigurationOptions (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/serverConfigurationOptions
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/serverConfigurationOptions`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesServerConfigurationOptionsProps {
  /**
   * The name of the server configuration option.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ServerConfigurationOptionProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/serverTrustCertificates (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/serverTrustCertificates
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/serverTrustCertificates`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesServerTrustCertificatesProps {
  /**
   * Name of of the certificate to upload.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ServerTrustCertificateProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/sqlAgent (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/sqlAgent
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/sqlAgent`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesSqlAgentProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SqlAgentConfigurationProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/startStopSchedules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/startStopSchedules
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/startStopSchedules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesStartStopSchedulesProps {
  /**
   * Name of the managed instance Start/Stop schedule.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: StartStopManagedInstanceScheduleProps | any;
}

/**
 * Properties for Microsoft.Sql/managedInstances/vulnerabilityAssessments (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/managedInstances/vulnerabilityAssessments
 *
 * **ARM Resource Type**: `Microsoft.Sql/managedInstances/vulnerabilityAssessments`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmManagedInstancesVulnerabilityAssessmentsProps {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ManagedInstanceVulnerabilityAssessmentProps | any;
}

/**
 * Properties for Microsoft.Sql/servers (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersProps {
  /**
   * The Azure Active Directory identity of the server.
   */
  readonly identity?: ResourceIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the server.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ServerProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/servers/administrators (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/administrators
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/administrators`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersAdministratorsProps {
  /**
   * The name of server active directory administrator.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AdministratorProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/advancedThreatProtectionSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/advancedThreatProtectionSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/advancedThreatProtectionSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersAdvancedThreatProtectionSettingsProps {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AdvancedThreatProtectionProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/auditingSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/auditingSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/auditingSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersAuditingSettingsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ServerBlobAuditingPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/azureADOnlyAuthentications (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/azureADOnlyAuthentications
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/azureADOnlyAuthentications`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersAzureADOnlyAuthenticationsProps {
  /**
   * The name of server azure active directory only authentication.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AzureADOnlyAuthProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/connectionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/connectionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/connectionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersConnectionPoliciesProps {
  /**
   * The name of the connection policy.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ServerConnectionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesProps {
  /**
   * The Azure Active Directory identity of the database.
   */
  readonly identity?: DatabaseIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the database.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseProps | any;
  /**
   * The database SKU.
   * 
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
   * 
   * ```azurecli
   * az sql db list-editions -l <location> -o table
   * ````
   * 
   * ```powershell
   * Get-AzSqlServerServiceObjective -Location <location>
   * ````
   * 
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/advancedThreatProtectionSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/advancedThreatProtectionSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/advancedThreatProtectionSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesAdvancedThreatProtectionSettingsProps {
  /**
   * The name of the Advanced Threat Protection state.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: AdvancedThreatProtectionProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/auditingSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/auditingSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/auditingSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesAuditingSettingsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseBlobAuditingPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesBackupLongTermRetentionPoliciesProps {
  /**
   * The policy name. Should always be Default.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: BaseLongTermRetentionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesBackupShortTermRetentionPoliciesProps {
  /**
   * The policy name. Should always be "default".
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: BackupShortTermRetentionPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/dataMaskingPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/dataMaskingPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/dataMaskingPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesDataMaskingPoliciesProps {
  /**
   * The name of the database for which the data masking policy applies.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: DataMaskingPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/dataMaskingPolicies/rules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/dataMaskingPolicies/rules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/dataMaskingPolicies/rules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesDataMaskingPoliciesRulesProps {
  /**
   * The name of the data masking rule.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: DataMaskingRuleProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/extendedAuditingSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/extendedAuditingSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/extendedAuditingSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesExtendedAuditingSettingsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ExtendedDatabaseBlobAuditingPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/extensions (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/extensions
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/extensions`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesExtensionsProps {
  /**
   * name
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseExtensionsProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/geoBackupPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/geoBackupPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/geoBackupPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesGeoBackupPoliciesProps {
  /**
   * The name of the Geo backup policy. This should always be 'Default'.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: GeoBackupPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/ledgerDigestUploads (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/ledgerDigestUploads
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/ledgerDigestUploads`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesLedgerDigestUploadsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: LedgerDigestUploadsProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/replicationLinks (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/replicationLinks
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/replicationLinks`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesReplicationLinksProps {
  /**
   * name
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ReplicationLinkProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSchemasTablesColumnsSensitivityLabelsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SensitivityLabelProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/securityAlertPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/securityAlertPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/securityAlertPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSecurityAlertPoliciesProps {
  /**
   * The name of the security alert policy.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SecurityAlertsPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSqlVulnerabilityAssessmentsBaselinesProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseSqlVulnerabilityAssessmentRuleBaselineListInputProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSqlVulnerabilityAssessmentsBaselinesRulesProps {
  /**
   * The vulnerability assessment rule ID.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseSqlVulnerabilityAssessmentRuleBaselineInputProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/syncGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/syncGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/syncGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSyncGroupsProps {
  /**
   * The name of the sync group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: SyncGroupProps | any;
  /**
   * The name and capacity of the SKU.
   */
  readonly sku?: Sku | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/syncGroups/syncMembers (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/syncGroups/syncMembers
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/syncGroups/syncMembers`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesSyncGroupsSyncMembersProps {
  /**
   * The name of the sync member.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: SyncMemberProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/transparentDataEncryption (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/transparentDataEncryption
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/transparentDataEncryption`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesTransparentDataEncryptionProps {
  /**
   * The name of the transparent data encryption configuration.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: TransparentDataEncryptionProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/vulnerabilityAssessments (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/vulnerabilityAssessments
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/vulnerabilityAssessments`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesVulnerabilityAssessmentsProps {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseVulnerabilityAssessmentProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesVulnerabilityAssessmentsRulesBaselinesProps {
  /**
   * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
   */
  readonly name: 'master' | 'default' | any;
  /**
   * Resource properties.
   */
  readonly properties: DatabaseVulnerabilityAssessmentRuleBaselineProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/workloadGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/workloadGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/workloadGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesWorkloadGroupsProps {
  /**
   * The name of the workload group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: WorkloadGroupProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDatabasesWorkloadGroupsWorkloadClassifiersProps {
  /**
   * The name of the workload classifier to create/update.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: WorkloadClassifierProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/devOpsAuditingSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/devOpsAuditingSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/devOpsAuditingSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDevOpsAuditingSettingsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ServerDevOpsAuditSettingsProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/dnsAliases (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/dnsAliases
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/dnsAliases`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersDnsAliasesProps {
  /**
   * The name of the server dns alias.
   */
  readonly name: string;
}

/**
 * Properties for Microsoft.Sql/servers/elasticPools (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/elasticPools
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/elasticPools`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersElasticPoolsProps {
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the elastic pool.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ElasticPoolProps | any;
  /**
   * The elastic pool SKU.
   * 
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
   * 
   * ```azurecli
   * az sql elastic-pool list-editions -l <location> -o table
   * ````
   * 
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/servers/encryptionProtector (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/encryptionProtector
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/encryptionProtector`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersEncryptionProtectorProps {
  /**
   * The name of the encryption protector to be updated.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: EncryptionProtectorProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/extendedAuditingSettings (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/extendedAuditingSettings
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/extendedAuditingSettings`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersExtendedAuditingSettingsProps {
  /**
   * name
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ExtendedServerBlobAuditingPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/failoverGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/failoverGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/failoverGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersFailoverGroupsProps {
  /**
   * The name of the failover group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: FailoverGroupProps | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/servers/firewallRules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/firewallRules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/firewallRules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersFirewallRulesProps {
  /**
   * The name of the firewall rule.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ServerFirewallRuleProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/ipv6FirewallRules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/ipv6FirewallRules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/ipv6FirewallRules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersIpv6FirewallRulesProps {
  /**
   * The name of the firewall rule.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: IPv6ServerFirewallRuleProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsProps {
  /**
   * The identity of the job agent.
   */
  readonly identity?: JobAgentIdentity | any;
  /**
   * Resource location.
   */
  readonly location?: string;
  /**
   * The name of the job agent to be created or updated.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobAgentProps | any;
  /**
   * The name and tier of the SKU.
   */
  readonly sku?: Sku | any;
  /**
   * Resource tags.
   */
  readonly tags?: Record<string, string> | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/credentials (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/credentials
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/credentials`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsCredentialsProps {
  /**
   * The name of the credential.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobCredentialProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/jobs (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/jobs
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/jobs`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsJobsProps {
  /**
   * The name of the job to get.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/jobs/executions (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/jobs/executions
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/jobs/executions`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsJobsExecutionsProps {
  /**
   * The job execution id to create the job execution under.
   */
  readonly name: string | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/jobs/steps (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/jobs/steps
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/jobs/steps`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsJobsStepsProps {
  /**
   * The name of the job step.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobStepProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/privateEndpoints (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/privateEndpoints
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/privateEndpoints`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsPrivateEndpointsProps {
  /**
   * The name of the private endpoint.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobPrivateEndpointProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/jobAgents/targetGroups (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/jobAgents/targetGroups
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/jobAgents/targetGroups`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersJobAgentsTargetGroupsProps {
  /**
   * The name of the target group.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: JobTargetGroupProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/keys (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/keys
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/keys`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersKeysProps {
  /**
   * The name of the server key to be operated on (updated or created). The key name is required to be in the format of 'vault_key_version'. For example, if the keyId is https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion, then the server key name should be formatted as: YourVaultName_YourKeyName_YourKeyVersion
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: ServerKeyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/outboundFirewallRules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/outboundFirewallRules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/outboundFirewallRules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersOutboundFirewallRulesProps {
  /**
   * name
   */
  readonly name: string;
}

/**
 * Properties for Microsoft.Sql/servers/privateEndpointConnections (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/privateEndpointConnections
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/privateEndpointConnections`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersPrivateEndpointConnectionsProps {
  /**
   * name
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: PrivateEndpointConnectionProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/securityAlertPolicies (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/securityAlertPolicies
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/securityAlertPolicies`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersSecurityAlertPoliciesProps {
  /**
   * The name of the threat detection policy.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SecurityAlertsPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/sqlVulnerabilityAssessments (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/sqlVulnerabilityAssessments
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/sqlVulnerabilityAssessments`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersSqlVulnerabilityAssessmentsProps {
  /**
   * The name of the SQL Vulnerability Assessment.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: SqlVulnerabilityAssessmentPolicyProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/syncAgents (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/syncAgents
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/syncAgents`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersSyncAgentsProps {
  /**
   * The name of the sync agent.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: SyncAgentProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/virtualNetworkRules (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/virtualNetworkRules
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/virtualNetworkRules`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersVirtualNetworkRulesProps {
  /**
   * The name of the virtual network rule.
   */
  readonly name: string;
  /**
   * Resource properties.
   */
  readonly properties: VirtualNetworkRuleProps | any;
}

/**
 * Properties for Microsoft.Sql/servers/vulnerabilityAssessments (L1 construct).
 *
 * @remarks
 * Microsoft.Sql/servers/vulnerabilityAssessments
 *
 * **ARM Resource Type**: `Microsoft.Sql/servers/vulnerabilityAssessments`
 * **API Version**: `2023-08-01`
 *
 * Direct mapping to ARM resource properties with no defaults or transformations.
 */
export interface ArmServersVulnerabilityAssessmentsProps {
  /**
   * The name of the vulnerability assessment.
   */
  readonly name: string | any;
  /**
   * Resource properties.
   */
  readonly properties: ServerVulnerabilityAssessmentProps | any;
}
