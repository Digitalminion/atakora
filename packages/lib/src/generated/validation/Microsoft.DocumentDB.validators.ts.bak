/**
 * Runtime validators for Microsoft.DocumentDB resources.
 *
 * **API Version**: 2024-08-15
 * **Generated**: 2025-10-13T00:00:00.000Z
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * Validation error.
 */
export interface ValidationError {
  readonly path: string;
  readonly message: string;
  readonly code: string;
  readonly fix?: string;
}

/**
 * Validation result.
 */
export interface ValidationResult {
  readonly valid: boolean;
  readonly errors: ValidationError[];
}

/**
 * Validate Microsoft.DocumentDB/cassandraClusters properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateCassandraClusters(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/cassandraClusters/dataCenters properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateCassandraClustersDataCenters(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccounts(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsCassandraKeyspaces(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsCassandraKeyspacesTables(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsCassandraKeyspacesTablesThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsCassandraKeyspacesThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/gremlinDatabases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsGremlinDatabases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsGremlinDatabasesGraphs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsGremlinDatabasesGraphsThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsGremlinDatabasesThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbDatabases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbDatabases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbDatabasesCollections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbDatabasesCollectionsThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbDatabasesThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbRoleDefinitions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsMongodbUserDefinitions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsNotebookWorkspaces(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/services properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsServices(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesClientEncryptionKeys(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesContainers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesContainersStoredProcedures(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesContainersThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesContainersTriggers(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesContainersUserDefinedFunctions(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlDatabasesThroughputSettings(
  props: any
): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlRoleAssignments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsSqlRoleDefinitions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/tables properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsTables(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Validate Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDatabaseAccountsTablesThroughputSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition',
    });
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}
