/**
 * Runtime validators for Microsoft.Network resources.
 *
 * **API Version**: 2024-07-01
 * **Generated**: 2025-10-04T02:27:32.495Z
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * Validation error.
 */
export interface ValidationError {
  readonly path: string;
  readonly message: string;
  readonly code: string;
  readonly fix?: string;
}

/**
 * Validation result.
 */
export interface ValidationResult {
  readonly valid: boolean;
  readonly errors: ValidationError[];
}

/**
 * Validate Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateApplicationGatewayWebApplicationFirewallPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  // Validate constraints on: name
  if (props.name !== undefined && props.name !== null) {
    if (typeof props.name === 'string') {
      if (props.name.length > 128) {
        errors.push({
          path: 'name',
          message: 'Property "name" must be at most 128 characters',
          code: 'STRING_TOO_LONG',
          fix: 'Shorten the value of "name" to 128 characters or less'
        });
      }
    }
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/ExpressRoutePorts properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRoutePorts(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/IpAllocations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateIpAllocations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/applicationGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateApplicationGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/applicationGateways/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateApplicationGatewaysPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/applicationSecurityGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateApplicationSecurityGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/azureFirewalls properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateAzureFirewalls(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  // Validate constraints on: name
  if (props.name !== undefined && props.name !== null) {
    if (typeof props.name === 'string') {
      if (props.name.length < 1) {
        errors.push({
          path: 'name',
          message: 'Property "name" must be at least 1 characters',
          code: 'STRING_TOO_SHORT',
          fix: 'Provide a longer value for "name"'
        });
      }
      if (props.name.length > 56) {
        errors.push({
          path: 'name',
          message: 'Property "name" must be at most 56 characters',
          code: 'STRING_TOO_LONG',
          fix: 'Shorten the value of "name" to 56 characters or less'
        });
      }
    }
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/bastionHosts properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateBastionHosts(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/connections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/customIpPrefixes properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateCustomIpPrefixes(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/ddosCustomPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDdosCustomPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/ddosProtectionPlans properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDdosProtectionPlans(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/dscpConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateDscpConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCircuits properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCircuits(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCircuits/authorizations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCircuitsAuthorizations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCircuits/peerings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCircuitsPeerings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCircuits/peerings/connections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCircuitsPeeringsConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCrossConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCrossConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteCrossConnections/peerings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteCrossConnectionsPeerings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRouteGateways/expressRouteConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRouteGatewaysExpressRouteConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/expressRoutePorts/authorizations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateExpressRoutePortsAuthorizations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/firewallPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateFirewallPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/firewallPolicies/firewallPolicyDrafts properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateFirewallPoliciesFirewallPolicyDrafts(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/firewallPolicies/ruleCollectionGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateFirewallPoliciesRuleCollectionGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollectionGroupDrafts properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateFirewallPoliciesRuleCollectionGroupsRuleCollectionGroupDrafts(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/firewallPolicies/signatureOverrides properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateFirewallPoliciesSignatureOverrides(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/ipGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateIpGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/loadBalancers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLoadBalancers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/loadBalancers/backendAddressPools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLoadBalancersBackendAddressPools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/loadBalancers/inboundNatRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLoadBalancersInboundNatRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/localNetworkGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLocalNetworkGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  // Validate constraints on: name
  if (props.name !== undefined && props.name !== null) {
    if (typeof props.name === 'string') {
      if (props.name.length < 1) {
        errors.push({
          path: 'name',
          message: 'Property "name" must be at least 1 characters',
          code: 'STRING_TOO_SHORT',
          fix: 'Provide a longer value for "name"'
        });
      }
    }
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/natGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNatGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkInterfaces properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkInterfaces(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkInterfaces/tapConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkInterfacesTapConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/connectivityConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersConnectivityConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/ipamPools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersIpamPools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/ipamPools/staticCidrs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersIpamPoolsStaticCidrs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/networkGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersNetworkGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/networkGroups/staticMembers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersNetworkGroupsStaticMembers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/scopeConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersScopeConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityAdminConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityAdminConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityAdminConfigurationsRuleCollections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityAdminConfigurationsRuleCollectionsRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityUserConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityUserConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityUserConfigurationsRuleCollections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersSecurityUserConfigurationsRuleCollectionsRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/verifierWorkspaces properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersVerifierWorkspaces(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisIntents properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersVerifierWorkspacesReachabilityAnalysisIntents(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisRuns properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkManagersVerifierWorkspacesReachabilityAnalysisRuns(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkProfiles properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkProfiles(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityGroups/securityRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityGroupsSecurityRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimeters(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters/links properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimetersLinks(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters/loggingConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimetersLoggingConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters/profiles properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimetersProfiles(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters/profiles/accessRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimetersProfilesAccessRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkSecurityPerimeters/resourceAssociations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkSecurityPerimetersResourceAssociations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkVirtualAppliances properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkVirtualAppliances(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkVirtualAppliances/inboundSecurityRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkVirtualAppliancesInboundSecurityRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkVirtualAppliances/networkVirtualApplianceConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkVirtualAppliancesNetworkVirtualApplianceConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkVirtualAppliances/virtualApplianceSites properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkVirtualAppliancesVirtualApplianceSites(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkWatchers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkWatchers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkWatchers/connectionMonitors properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkWatchersConnectionMonitors(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkWatchers/flowLogs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkWatchersFlowLogs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/networkWatchers/packetCaptures properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateNetworkWatchersPacketCaptures(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/p2svpnGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateP2svpnGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/privateEndpoints properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePrivateEndpoints(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/privateEndpoints/privateDnsZoneGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePrivateEndpointsPrivateDnsZoneGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/privateLinkServices properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePrivateLinkServices(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/privateLinkServices/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePrivateLinkServicesPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/publicIPAddresses properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePublicIPAddresses(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/publicIPPrefixes properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validatePublicIPPrefixes(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/routeFilters properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateRouteFilters(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/routeFilters/routeFilterRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateRouteFiltersRouteFilterRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/routeTables properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateRouteTables(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/routeTables/routes properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateRouteTablesRoutes(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/securityPartnerProviders properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSecurityPartnerProviders(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/serviceEndpointPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServiceEndpointPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServiceEndpointPoliciesServiceEndpointPolicyDefinitions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/bgpConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsBgpConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/hubRouteTables properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsHubRouteTables(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/hubVirtualNetworkConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsHubVirtualNetworkConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/ipConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsIpConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/routeMaps properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsRouteMaps(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/routeTables properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsRouteTables(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualHubs/routingIntent properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualHubsRoutingIntent(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworkGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworkGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworkGateways/natRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworkGatewaysNatRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworkTaps properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworkTaps(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworks properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworks(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworks/subnets properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworksSubnets(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualNetworks/virtualNetworkPeerings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualNetworksVirtualNetworkPeerings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualRouters properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualRouters(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualRouters/peerings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualRoutersPeerings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/virtualWans properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVirtualWans(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnGateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnGateways/natRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnGatewaysNatRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnGateways/vpnConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnGatewaysVpnConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections/sharedKeys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnGatewaysVpnConnectionsVpnLinkConnectionsSharedKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnServerConfigurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnServerConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnServerConfigurationsConfigurationPolicyGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Network/vpnSites properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVpnSites(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}
