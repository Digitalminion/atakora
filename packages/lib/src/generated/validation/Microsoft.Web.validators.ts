/**
 * Runtime validators for Microsoft.Web resources.
 *
 * **API Version**: 2024-11-01
 * **Generated**: 2025-10-13T21:40:51.995Z
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * Validation error.
 */
export interface ValidationError {
  readonly path: string;
  readonly message: string;
  readonly code: string;
  readonly fix?: string;
}

/**
 * Validation result.
 */
export interface ValidationResult {
  readonly valid: boolean;
  readonly errors: ValidationError[];
}

/**
 * Validate Microsoft.Web/certificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/hostingEnvironments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateHostingEnvironments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/hostingEnvironments/configurations properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateHostingEnvironmentsConfigurations(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/hostingEnvironments/multiRolePools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateHostingEnvironmentsMultiRolePools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/hostingEnvironments/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateHostingEnvironmentsPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/hostingEnvironments/workerPools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateHostingEnvironmentsWorkerPools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/kubeEnvironments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateKubeEnvironments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/serverfarms properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServerfarms(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/serverfarms/virtualNetworkConnections/gateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServerfarmsVirtualNetworkConnectionsGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/serverfarms/virtualNetworkConnections/routes properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServerfarmsVirtualNetworkConnectionsRoutes(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSites(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/basicPublishingCredentialsPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesBasicPublishingCredentialsPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/certificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/config properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/deployments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesDeployments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/domainOwnershipIdentifiers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesDomainOwnershipIdentifiers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/extensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesExtensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/functions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesFunctions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/functions/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesFunctionsKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/hostNameBindings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesHostNameBindings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/hybridConnectionNamespaces/relays properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesHybridConnectionNamespacesRelays(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/hybridconnection properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesHybridconnection(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/instances/extensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesInstancesExtensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/networkConfig properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesNetworkConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/premieraddons properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesPremieraddons(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/privateAccess properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesPrivateAccess(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/publicCertificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesPublicCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/sitecontainers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSitecontainers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/siteextensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSiteextensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlots(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsBasicPublishingCredentialsPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/certificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/config properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/deployments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsDeployments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/domainOwnershipIdentifiers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsDomainOwnershipIdentifiers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/extensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsExtensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/functions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsFunctions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/functions/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsFunctionsKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/hostNameBindings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsHostNameBindings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/hybridConnectionNamespaces/relays properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsHybridConnectionNamespacesRelays(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/hybridconnection properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsHybridconnection(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/instances/extensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsInstancesExtensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/networkConfig properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsNetworkConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/premieraddons properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsPremieraddons(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/privateAccess properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsPrivateAccess(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/publicCertificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsPublicCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/sitecontainers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsSitecontainers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/siteextensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsSiteextensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/sourcecontrols properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsSourcecontrols(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/virtualNetworkConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsVirtualNetworkConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/slots/virtualNetworkConnections/gateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSlotsVirtualNetworkConnectionsGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/sourcecontrols properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesSourcecontrols(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/virtualNetworkConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesVirtualNetworkConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/sites/virtualNetworkConnections/gateways properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateSitesVirtualNetworkConnectionsGateways(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSites(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/basicAuth properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesBasicAuth(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/builds/config properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesBuildsConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/builds/databaseConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesBuildsDatabaseConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/builds/linkedBackends properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesBuildsLinkedBackends(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/builds/userProvidedFunctionApps properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesBuildsUserProvidedFunctionApps(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/config properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesConfig(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/customDomains properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesCustomDomains(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/databaseConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesDatabaseConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/linkedBackends properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesLinkedBackends(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Web/staticSites/userProvidedFunctionApps properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateStaticSitesUserProvidedFunctionApps(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}
