/**
 * Runtime validators for Microsoft.KeyVault resources.
 *
 * **API Version**: 2024-12-01-preview
 * **Generated**: 2025-10-04T02:29:59.707Z
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * Validation error.
 */
export interface ValidationError {
  readonly path: string;
  readonly message: string;
  readonly code: string;
  readonly fix?: string;
}

/**
 * Validation result.
 */
export interface ValidationResult {
  readonly valid: boolean;
  readonly errors: ValidationError[];
}

/**
 * Validate Microsoft.KeyVault/managedHSMs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedHSMs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/managedHSMs/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedHSMsKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/managedHSMs/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedHSMsPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/vaults properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVaults(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/vaults/accessPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVaultsAccessPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/vaults/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVaultsKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/vaults/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVaultsPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.KeyVault/vaults/secrets properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateVaultsSecrets(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}
