/**
 * Runtime validators for Microsoft.Sql resources.
 *
 * **API Version**: 2023-08-01
 * **Generated**: 2025-10-13T21:41:26.174Z
 *
 * @remarks
 * This file is auto-generated. Do not edit manually.
 * Generated by Felix (Schema & Validation Engineer)
 *
 * @packageDocumentation
 */

/**
 * Validation error.
 */
export interface ValidationError {
  readonly path: string;
  readonly message: string;
  readonly code: string;
  readonly fix?: string;
}

/**
 * Validation result.
 */
export interface ValidationResult {
  readonly valid: boolean;
  readonly errors: ValidationError[];
}

/**
 * Validate Microsoft.Sql/instancePools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateInstancePools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/locations/instanceFailoverGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLocationsInstanceFailoverGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/locations/serverTrustGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateLocationsServerTrustGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstances(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/administrators properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesAdministrators(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/advancedThreatProtectionSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesAdvancedThreatProtectionSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/azureADOnlyAuthentications properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesAzureADOnlyAuthentications(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesAdvancedThreatProtectionSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesBackupLongTermRetentionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesBackupShortTermRetentionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/ledgerDigestUploads properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesLedgerDigestUploads(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesSchemasTablesColumnsSensitivityLabels(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/securityAlertPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesSecurityAlertPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/transparentDataEncryption properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesTransparentDataEncryption(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesVulnerabilityAssessments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDatabasesVulnerabilityAssessmentsRulesBaselines(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/distributedAvailabilityGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDistributedAvailabilityGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/dnsAliases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDnsAliases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/dtc properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesDtc(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/encryptionProtector properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesEncryptionProtector(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesRestorableDroppedDatabasesBackupShortTermRetentionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/securityAlertPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesSecurityAlertPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/serverConfigurationOptions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesServerConfigurationOptions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/serverTrustCertificates properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesServerTrustCertificates(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/sqlAgent properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesSqlAgent(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/startStopSchedules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesStartStopSchedules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/managedInstances/vulnerabilityAssessments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateManagedInstancesVulnerabilityAssessments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/administrators properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersAdministrators(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/advancedThreatProtectionSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersAdvancedThreatProtectionSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/auditingSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersAuditingSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/azureADOnlyAuthentications properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersAzureADOnlyAuthentications(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/connectionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersConnectionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/advancedThreatProtectionSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesAdvancedThreatProtectionSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/auditingSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesAuditingSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesBackupLongTermRetentionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesBackupShortTermRetentionPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/dataMaskingPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesDataMaskingPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/dataMaskingPolicies/rules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesDataMaskingPoliciesRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/extendedAuditingSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesExtendedAuditingSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/extensions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesExtensions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/geoBackupPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesGeoBackupPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/ledgerDigestUploads properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesLedgerDigestUploads(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/replicationLinks properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesReplicationLinks(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSchemasTablesColumnsSensitivityLabels(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/securityAlertPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSecurityAlertPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSqlVulnerabilityAssessmentsBaselines(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSqlVulnerabilityAssessmentsBaselinesRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/syncGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSyncGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/syncGroups/syncMembers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesSyncGroupsSyncMembers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/transparentDataEncryption properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesTransparentDataEncryption(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/vulnerabilityAssessments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesVulnerabilityAssessments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesVulnerabilityAssessmentsRulesBaselines(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/workloadGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesWorkloadGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDatabasesWorkloadGroupsWorkloadClassifiers(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/devOpsAuditingSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDevOpsAuditingSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/dnsAliases properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersDnsAliases(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/elasticPools properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersElasticPools(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/encryptionProtector properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersEncryptionProtector(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/extendedAuditingSettings properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersExtendedAuditingSettings(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/failoverGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersFailoverGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/firewallRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersFirewallRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/ipv6FirewallRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersIpv6FirewallRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgents(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/credentials properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsCredentials(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/jobs properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsJobs(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/jobs/executions properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsJobsExecutions(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/jobs/steps properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsJobsSteps(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/privateEndpoints properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsPrivateEndpoints(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/jobAgents/targetGroups properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersJobAgentsTargetGroups(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/keys properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersKeys(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/outboundFirewallRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersOutboundFirewallRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/privateEndpointConnections properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersPrivateEndpointConnections(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/securityAlertPolicies properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersSecurityAlertPolicies(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/sqlVulnerabilityAssessments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersSqlVulnerabilityAssessments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/syncAgents properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersSyncAgents(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/virtualNetworkRules properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersVirtualNetworkRules(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * Validate Microsoft.Sql/servers/vulnerabilityAssessments properties.
 *
 * @param props - Resource properties to validate
 * @returns Validation result
 */
export function validateServersVulnerabilityAssessments(props: any): ValidationResult {
  const errors: ValidationError[] = [];

  // Validate required property: name
  if (props.name === undefined || props.name === null) {
    errors.push({
      path: 'name',
      message: 'Required property "name" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "name" property to your resource definition'
    });
  }

  // Validate required property: properties
  if (props.properties === undefined || props.properties === null) {
    errors.push({
      path: 'properties',
      message: 'Required property "properties" is missing',
      code: 'REQUIRED_PROPERTY_MISSING',
      fix: 'Add the "properties" property to your resource definition'
    });
  }

  return {
    valid: errors.length === 0,
    errors
  };
}
