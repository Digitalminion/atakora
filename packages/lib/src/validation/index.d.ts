/**
 * Validation Framework for Azure CDK Resources
 *
 * This module provides a comprehensive validation framework for Azure resources
 * to catch common configuration errors before deployment.
 */
export { ValidationSeverity, ValidationResult, ValidationResultBuilder } from './validation-result';
export { ValidationRule, ValidationContext, BaseValidationRule } from './validation-rule';
export { ValidatorRegistry, validatorRegistry } from './validator-registry';
export { validateLength, validatePattern, validateRequired, validateRange, validateEnum, validateAzureResourceName, warnGloballyUnique, validateLowercase, validateNoConsecutive, validateStartsWith, validateEndsWith, collectResults, } from './common-validators';
export { networkValidators } from './validators/network-validators';
export { storageValidators } from './validators/storage-validators';
export { keyVaultValidators } from './validators/keyvault-validators';
export { databaseValidators } from './validators/database-validators';
export { cognitiveServicesValidators } from './validators/cognitiveservices-validators';
export { webValidators } from './validators/web-validators';
export declare const allValidators: (import("./validators/network-validators").VNetAddressSpaceValidator | import("./validators/network-validators").VNetNameValidator | import("./validators/network-validators").SubnetWithinVNetValidator | import("./validators/network-validators").SubnetOverlapValidator | import("./validators/network-validators").SubnetMinimumSizeValidator | import("./validators/network-validators").PrivateEndpointSubnetPoliciesValidator | import("./validators/network-validators").NSGPriorityUniqueValidator | import("./validators/network-validators").NSGPriorityRangeValidator | import("./validators/network-validators").NSGPortRangeValidator | import("./validators/network-validators").PublicIPSkuCompatibilityValidator | import("./validators/network-validators").PublicIPAllocationMethodValidator | import("./validators/network-validators").PrivateDnsZoneLocationValidator | import("./validators/network-validators").PrivateDnsZoneNameValidator | import("./validators/network-validators").PrivateEndpointGroupIdValidator | import("./validators/storage-validators").StorageAccountNameValidator | import("./validators/storage-validators").StorageAccountPublicAccessValidator | import("./validators/storage-validators").StorageAccountNetworkAclsValidator | import("./validators/storage-validators").StorageAccountTlsVersionValidator | import("./validators/keyvault-validators").KeyVaultNameValidator | import("./validators/keyvault-validators").KeyVaultSoftDeleteValidator | import("./validators/keyvault-validators").KeyVaultRetentionValidator | import("./validators/keyvault-validators").KeyVaultRbacAccessPolicyValidator | import("./validators/keyvault-validators").KeyVaultNetworkAclsValidator | import("./validators/keyvault-validators").KeyVaultPublicAccessValidator | import("./validators/database-validators").CosmosDbAccountNameValidator | import("./validators/database-validators").CosmosDbConsistencyValidator | import("./validators/database-validators").CosmosDbMultiRegionValidator | import("./validators/database-validators").CosmosDbBackupPolicyValidator | import("./validators/database-validators").CosmosDbAutomaticFailoverValidator | import("./validators/database-validators").CosmosDbCapabilitiesValidator | import("./validators/database-validators").CosmosDbNetworkAclsValidator | import("./validators/cognitiveservices-validators").CognitiveServicesAccountNameValidator | import("./validators/cognitiveservices-validators").OpenAIDeploymentModelValidator | import("./validators/cognitiveservices-validators").OpenAIDeploymentCapacityValidator | import("./validators/cognitiveservices-validators").OpenAIDeploymentNameValidator | import("./validators/cognitiveservices-validators").CognitiveServicesNetworkAclsValidator | import("./validators/cognitiveservices-validators").CognitiveServicesSkuValidator | import("./validators/cognitiveservices-validators").CognitiveServicesCustomSubdomainValidator | import("./validators/web-validators").AppServicePlanNameValidator | import("./validators/web-validators").AppServicePlanSkuValidator | import("./validators/web-validators").AppServicePlanZoneRedundancyValidator | import("./validators/web-validators").FunctionAppNameValidator | import("./validators/web-validators").FunctionAppStorageValidator | import("./validators/web-validators").FunctionAppRuntimeValidator | import("./validators/web-validators").FunctionAppAlwaysOnValidator | import("./validators/web-validators").FunctionAppApplicationInsightsValidator)[];
/**
 * Register all validators with the global registry
 */
export declare function registerAllValidators(): void;
//# sourceMappingURL=index.d.ts.map